{"version":3,"file":"Analytics-HQQf0lki.js","sources":["../../src/stores/analyticsStore.ts","../../src/components/Analytics/TimeDistributionChart.tsx","../../src/components/Analytics/DateRangePicker.tsx","../../src/components/Analytics/ExportButton.tsx","../../src/components/Analytics/ProductivityHeatmap.tsx","../../src/components/Analytics/SessionLengthAnalysis.tsx","../../src/components/Analytics/SessionSuggestions.tsx","../../src/components/Analytics/WeeklyMonthlyReports.tsx","../../src/components/Analytics/FocusQualityMetrics.tsx","../../src/components/Analytics/ComparativeAnalysis.tsx","../../src/components/Analytics/GoalProgressVisualization.tsx","../../src/pages/Analytics.tsx"],"sourcesContent":["import { create } from 'zustand';\r\nimport { TimeDistribution, ProductivityPattern, GoalProgress } from '../../../shared/types';\r\n\r\ninterface SessionLengthAnalysis {\r\n  averageSessionLength: number;\r\n  optimalSessionLength: number;\r\n  sessionLengthDistribution: Array<{\r\n    durationRange: string;\r\n    count: number;\r\n    averageQuality: number;\r\n  }>;\r\n  recommendations: string[];\r\n}\r\n\r\ninterface ProductivityHeatmapData {\r\n  dayOfWeek: number;\r\n  hour: number;\r\n  averageFocusTime: number;\r\n  sessionCount: number;\r\n  focusScore: number;\r\n}\r\n\r\ninterface SessionSuggestions {\r\n  suggestedDuration: number;\r\n  confidence: number;\r\n  reason: string;\r\n  alternativeTimes: Array<{\r\n    hour: number;\r\n    dayOfWeek: number;\r\n    score: number;\r\n  }>;\r\n}\r\n\r\ninterface AnalyticsState {\r\n  // Time distribution data\r\n  timeDistribution: TimeDistribution[];\r\n  totalTime: number;\r\n  \r\n  // Time distribution trends (for line/area charts)\r\n  timeDistributionTrends: Array<{\r\n    date: string;\r\n    [categoryName: string]: number | string;\r\n  }>;\r\n  \r\n  // Productivity patterns\r\n  productivityPatterns: ProductivityPattern[];\r\n  \r\n  // Session length analysis\r\n  sessionLengthAnalysis: SessionLengthAnalysis | null;\r\n  \r\n  // Productivity heatmap\r\n  productivityHeatmap: ProductivityHeatmapData[];\r\n  \r\n  // Session suggestions\r\n  sessionSuggestions: SessionSuggestions | null;\r\n  \r\n  // Goal progress\r\n  goalProgress: GoalProgress[];\r\n  \r\n  // New reporting features\r\n  weeklyMonthlyReports: any;\r\n  focusQualityMetrics: any;\r\n  comparativeAnalysis: any;\r\n  \r\n  // Date range\r\n  startDate: string;\r\n  endDate: string;\r\n  \r\n  // Loading states\r\n  isLoadingTimeDistribution: boolean;\r\n  isLoadingProductivityPatterns: boolean;\r\n  isLoadingSessionLengthAnalysis: boolean;\r\n  isLoadingProductivityHeatmap: boolean;\r\n  isLoadingSessionSuggestions: boolean;\r\n  isLoadingGoalProgress: boolean;\r\n  isLoadingReports: boolean;\r\n  isLoadingFocusQuality: boolean;\r\n  isLoadingComparative: boolean;\r\n  \r\n  // Error states\r\n  timeDistributionError: string | null;\r\n  productivityPatternsError: string | null;\r\n  sessionLengthAnalysisError: string | null;\r\n  productivityHeatmapError: string | null;\r\n  sessionSuggestionsError: string | null;\r\n  goalProgressError: string | null;\r\n  reportsError: string | null;\r\n  focusQualityError: string | null;\r\n  comparativeError: string | null;\r\n  \r\n  // Actions\r\n  setDateRange: (startDate: string, endDate: string) => void;\r\n  fetchTimeDistribution: () => Promise<void>;\r\n  fetchProductivityPatterns: () => Promise<void>;\r\n  fetchSessionLengthAnalysis: () => Promise<void>;\r\n  fetchProductivityHeatmap: () => Promise<void>;\r\n  fetchSessionSuggestions: () => Promise<void>;\r\n  fetchGoalProgress: () => Promise<void>;\r\n  fetchAllAnalytics: () => Promise<void>;\r\n  exportAnalyticsData: (format?: 'json' | 'csv') => Promise<void>;\r\n  fetchTimeDistributionTrends: () => Promise<void>;\r\n  clearErrors: () => void;\r\n  \r\n  // New reporting actions\r\n  fetchReports: () => Promise<void>;\r\n  fetchFocusQualityMetrics: () => Promise<void>;\r\n  fetchComparativeAnalysis: (type: 'week' | 'month') => Promise<void>;\r\n}\r\n\r\nconst useAnalyticsStore = create<AnalyticsState>((set, get) => ({\r\n  // Initial state\r\n  timeDistribution: [],\r\n  totalTime: 0,\r\n  timeDistributionTrends: [],\r\n  productivityPatterns: [],\r\n  sessionLengthAnalysis: null,\r\n  productivityHeatmap: [],\r\n  sessionSuggestions: null,\r\n  goalProgress: [],\r\n  weeklyMonthlyReports: null,\r\n  focusQualityMetrics: null,\r\n  comparativeAnalysis: null,\r\n  startDate: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0], // 7 days ago\r\n  endDate: new Date().toISOString().split('T')[0], // today\r\n  isLoadingTimeDistribution: false,\r\n  isLoadingProductivityPatterns: false,\r\n  isLoadingSessionLengthAnalysis: false,\r\n  isLoadingProductivityHeatmap: false,\r\n  isLoadingSessionSuggestions: false,\r\n  isLoadingGoalProgress: false,\r\n  isLoadingReports: false,\r\n  isLoadingFocusQuality: false,\r\n  isLoadingComparative: false,\r\n  timeDistributionError: null,\r\n  productivityPatternsError: null,\r\n  sessionLengthAnalysisError: null,\r\n  productivityHeatmapError: null,\r\n  sessionSuggestionsError: null,\r\n  goalProgressError: null,\r\n  reportsError: null,\r\n  focusQualityError: null,\r\n  comparativeError: null,\r\n\r\n  // Actions\r\n  setDateRange: (startDate: string, endDate: string) => {\r\n    set({ startDate, endDate });\r\n  },\r\n\r\n  fetchTimeDistribution: async () => {\r\n    const { startDate, endDate } = get();\r\n    set({ isLoadingTimeDistribution: true, timeDistributionError: null });\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `/api/analytics/time-distribution?startDate=${startDate}&endDate=${endDate}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        // Provide fallback data for now\r\n        set({\r\n          timeDistribution: [],\r\n          totalTime: 0,\r\n          isLoadingTimeDistribution: false,\r\n          timeDistributionError: `HTTP error! status: ${response.status}`\r\n        });\r\n        return;\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        set({\r\n          timeDistribution: result.data.timeDistribution || [],\r\n          totalTime: result.data.totalTime || 0,\r\n          isLoadingTimeDistribution: false\r\n        });\r\n      } else {\r\n        set({\r\n          timeDistribution: [],\r\n          totalTime: 0,\r\n          isLoadingTimeDistribution: false,\r\n          timeDistributionError: result.error?.message || 'Failed to fetch time distribution'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching time distribution:', error);\r\n      set({\r\n        timeDistribution: [],\r\n        totalTime: 0,\r\n        timeDistributionError: error instanceof Error ? error.message : 'Unknown error',\r\n        isLoadingTimeDistribution: false\r\n      });\r\n    }\r\n  },\r\n\r\n  fetchProductivityPatterns: async () => {\r\n    const { startDate, endDate } = get();\r\n    set({ isLoadingProductivityPatterns: true, productivityPatternsError: null });\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `/api/analytics/productivity-patterns?startDate=${startDate}&endDate=${endDate}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        set({\r\n          productivityPatterns: result.data.patterns,\r\n          isLoadingProductivityPatterns: false\r\n        });\r\n      } else {\r\n        throw new Error(result.error?.message || 'Failed to fetch productivity patterns');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching productivity patterns:', error);\r\n      set({\r\n        productivityPatternsError: error instanceof Error ? error.message : 'Unknown error',\r\n        isLoadingProductivityPatterns: false\r\n      });\r\n    }\r\n  },\r\n\r\n  fetchGoalProgress: async () => {\r\n    const { startDate, endDate } = get();\r\n    set({ isLoadingGoalProgress: true, goalProgressError: null });\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `/api/analytics/goal-progress?startDate=${startDate}&endDate=${endDate}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        set({\r\n          goalProgress: [],\r\n          isLoadingGoalProgress: false,\r\n          goalProgressError: `HTTP error! status: ${response.status}`\r\n        });\r\n        return;\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        set({\r\n          goalProgress: result.data.goalProgress || [],\r\n          isLoadingGoalProgress: false\r\n        });\r\n      } else {\r\n        set({\r\n          goalProgress: [],\r\n          isLoadingGoalProgress: false,\r\n          goalProgressError: result.error?.message || 'Failed to fetch goal progress'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching goal progress:', error);\r\n      set({\r\n        goalProgress: [],\r\n        goalProgressError: error instanceof Error ? error.message : 'Unknown error',\r\n        isLoadingGoalProgress: false\r\n      });\r\n    }\r\n  },\r\n\r\n  fetchSessionLengthAnalysis: async () => {\r\n    const { startDate, endDate } = get();\r\n    set({ isLoadingSessionLengthAnalysis: true, sessionLengthAnalysisError: null });\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `/api/analytics/session-length-analysis?startDate=${startDate}&endDate=${endDate}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        set({\r\n          sessionLengthAnalysis: null,\r\n          isLoadingSessionLengthAnalysis: false,\r\n          sessionLengthAnalysisError: `HTTP error! status: ${response.status}`\r\n        });\r\n        return;\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        set({\r\n          sessionLengthAnalysis: result.data,\r\n          isLoadingSessionLengthAnalysis: false\r\n        });\r\n      } else {\r\n        set({\r\n          sessionLengthAnalysis: null,\r\n          isLoadingSessionLengthAnalysis: false,\r\n          sessionLengthAnalysisError: result.error?.message || 'Failed to fetch session length analysis'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching session length analysis:', error);\r\n      set({\r\n        sessionLengthAnalysis: null,\r\n        sessionLengthAnalysisError: error instanceof Error ? error.message : 'Unknown error',\r\n        isLoadingSessionLengthAnalysis: false\r\n      });\r\n    }\r\n  },\r\n\r\n  fetchProductivityHeatmap: async () => {\r\n    const { startDate, endDate } = get();\r\n    set({ isLoadingProductivityHeatmap: true, productivityHeatmapError: null });\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `/api/analytics/productivity-heatmap?startDate=${startDate}&endDate=${endDate}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        set({\r\n          productivityHeatmap: result.data.heatmapData,\r\n          isLoadingProductivityHeatmap: false\r\n        });\r\n      } else {\r\n        throw new Error(result.error?.message || 'Failed to fetch productivity heatmap');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching productivity heatmap:', error);\r\n      set({\r\n        productivityHeatmapError: error instanceof Error ? error.message : 'Unknown error',\r\n        isLoadingProductivityHeatmap: false\r\n      });\r\n    }\r\n  },\r\n\r\n  fetchSessionSuggestions: async () => {\r\n    const { startDate, endDate } = get();\r\n    set({ isLoadingSessionSuggestions: true, sessionSuggestionsError: null });\r\n    \r\n    try {\r\n      const now = new Date();\r\n      const response = await fetch(\r\n        `/api/analytics/session-suggestions?hour=${now.getHours()}&dayOfWeek=${now.getDay()}&startDate=${startDate}&endDate=${endDate}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        set({\r\n          sessionSuggestions: null,\r\n          isLoadingSessionSuggestions: false,\r\n          sessionSuggestionsError: `HTTP error! status: ${response.status}`\r\n        });\r\n        return;\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        set({\r\n          sessionSuggestions: result.data,\r\n          isLoadingSessionSuggestions: false\r\n        });\r\n      } else {\r\n        set({\r\n          sessionSuggestions: null,\r\n          isLoadingSessionSuggestions: false,\r\n          sessionSuggestionsError: result.error?.message || 'Failed to fetch session suggestions'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching session suggestions:', error);\r\n      set({\r\n        sessionSuggestions: null,\r\n        sessionSuggestionsError: error instanceof Error ? error.message : 'Unknown error',\r\n        isLoadingSessionSuggestions: false\r\n      });\r\n    }\r\n  },\r\n\r\n  fetchAllAnalytics: async () => {\r\n    const { \r\n      fetchTimeDistribution, \r\n      fetchProductivityPatterns, \r\n      fetchSessionLengthAnalysis,\r\n      fetchProductivityHeatmap,\r\n      fetchSessionSuggestions,\r\n      fetchGoalProgress, \r\n      fetchTimeDistributionTrends,\r\n      fetchReports,\r\n      fetchFocusQualityMetrics,\r\n      fetchComparativeAnalysis\r\n    } = get();\r\n    \r\n    await Promise.all([\r\n      fetchTimeDistribution(),\r\n      fetchProductivityPatterns(),\r\n      fetchSessionLengthAnalysis(),\r\n      fetchProductivityHeatmap(),\r\n      fetchSessionSuggestions(),\r\n      fetchGoalProgress(),\r\n      fetchTimeDistributionTrends(), // This won't fail the whole operation if it errors\r\n      fetchReports(),\r\n      fetchFocusQualityMetrics(),\r\n      fetchComparativeAnalysis('week')\r\n    ]);\r\n  },\r\n\r\n  fetchTimeDistributionTrends: async () => {\r\n    const { startDate, endDate } = get();\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `/api/analytics/time-distribution-trends?startDate=${startDate}&endDate=${endDate}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        set({ timeDistributionTrends: result.data.trends });\r\n      } else {\r\n        throw new Error(result.error?.message || 'Failed to fetch time distribution trends');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching time distribution trends:', error);\r\n      // Don't set error state for trends as it's optional\r\n    }\r\n  },\r\n\r\n  exportAnalyticsData: async (format: 'json' | 'csv' = 'json') => {\r\n    const { startDate, endDate } = get();\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `/api/analytics/export?startDate=${startDate}&endDate=${endDate}&format=${format}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      // Create download link\r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `analytics-export-${startDate}-${endDate}.${format}`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      console.error('Error exporting analytics data:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  clearErrors: () => {\r\n    set({\r\n      timeDistributionError: null,\r\n      productivityPatternsError: null,\r\n      sessionLengthAnalysisError: null,\r\n      productivityHeatmapError: null,\r\n      sessionSuggestionsError: null,\r\n      goalProgressError: null,\r\n      reportsError: null,\r\n      focusQualityError: null,\r\n      comparativeError: null\r\n    });\r\n  },\r\n\r\n  fetchReports: async () => {\r\n    const { startDate, endDate } = get();\r\n    set({ isLoadingReports: true, reportsError: null });\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `/api/analytics/reports?startDate=${startDate}&endDate=${endDate}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        set({\r\n          weeklyMonthlyReports: result.data,\r\n          isLoadingReports: false\r\n        });\r\n      } else {\r\n        throw new Error(result.error?.message || 'Failed to fetch reports');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching reports:', error);\r\n      set({\r\n        reportsError: error instanceof Error ? error.message : 'Unknown error',\r\n        isLoadingReports: false\r\n      });\r\n    }\r\n  },\r\n\r\n  fetchFocusQualityMetrics: async () => {\r\n    const { startDate, endDate } = get();\r\n    set({ isLoadingFocusQuality: true, focusQualityError: null });\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `/api/analytics/focus-quality?startDate=${startDate}&endDate=${endDate}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        set({\r\n          focusQualityMetrics: result.data,\r\n          isLoadingFocusQuality: false\r\n        });\r\n      } else {\r\n        throw new Error(result.error?.message || 'Failed to fetch focus quality metrics');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching focus quality metrics:', error);\r\n      set({\r\n        focusQualityError: error instanceof Error ? error.message : 'Unknown error',\r\n        isLoadingFocusQuality: false\r\n      });\r\n    }\r\n  },\r\n\r\n  fetchComparativeAnalysis: async (type: 'week' | 'month') => {\r\n    const { startDate, endDate } = get();\r\n    set({ isLoadingComparative: true, comparativeError: null });\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `/api/analytics/comparative?type=${type}&startDate=${startDate}&endDate=${endDate}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        set({\r\n          comparativeAnalysis: result.data,\r\n          isLoadingComparative: false\r\n        });\r\n      } else {\r\n        throw new Error(result.error?.message || 'Failed to fetch comparative analysis');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching comparative analysis:', error);\r\n      set({\r\n        comparativeError: error instanceof Error ? error.message : 'Unknown error',\r\n        isLoadingComparative: false\r\n      });\r\n    }\r\n  }\r\n}));\r\n\r\nexport default useAnalyticsStore;","import React, { useState } from 'react';\r\nimport { PieChart, Pie, Cell, BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Area, AreaChart } from 'recharts';\r\nimport { BarChart3, PieChart as PieChartIcon, TrendingUp, Activity } from 'lucide-react';\r\nimport { TimeDistribution } from '../../../../shared/types';\r\n\r\ninterface TimeDistributionChartProps {\r\n  data: TimeDistribution[];\r\n  totalTime: number;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  trendData?: Array<{\r\n    date: string;\r\n    [categoryName: string]: number | string;\r\n  }>;\r\n}\r\n\r\nconst TimeDistributionChart: React.FC<TimeDistributionChartProps> = ({\r\n  data,\r\n  totalTime,\r\n  isLoading,\r\n  error,\r\n  trendData = []\r\n}) => {\r\n  const [chartType, setChartType] = useState<'pie' | 'bar' | 'line' | 'area'>('pie');\r\n\r\n  const formatTime = (minutes: number): string => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    if (hours > 0) {\r\n      return `${hours}h ${mins}m`;\r\n    }\r\n    return `${mins}m`;\r\n  };\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <div className=\"bg-white dark:bg-gray-800 p-3 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg\">\r\n          <p className=\"font-medium text-gray-900 dark:text-gray-100\">{data.categoryName}</p>\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            Time: {formatTime(data.totalTime)}\r\n          </p>\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            Percentage: {data.percentage.toFixed(1)}%\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Time Distribution\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Time Distribution\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-red-600 dark:text-red-400 mb-2\">Error loading data</p>\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">{error}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (data.length === 0) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Time Distribution\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-gray-500 dark:text-gray-400 mb-2\">No data available</p>\r\n            <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n              Complete some focus sessions to see your time distribution\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Time Distribution\r\n          </h3>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            Total time: {formatTime(totalTime)}\r\n          </p>\r\n        </div>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={() => setChartType('pie')}\r\n            className={`p-2 rounded-lg transition-colors ${\r\n              chartType === 'pie'\r\n                ? 'bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-400'\r\n                : 'text-gray-400 hover:text-gray-600 dark:hover:text-gray-300'\r\n            }`}\r\n            title=\"Pie Chart\"\r\n          >\r\n            <PieChartIcon className=\"w-5 h-5\" />\r\n          </button>\r\n          <button\r\n            onClick={() => setChartType('bar')}\r\n            className={`p-2 rounded-lg transition-colors ${\r\n              chartType === 'bar'\r\n                ? 'bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-400'\r\n                : 'text-gray-400 hover:text-gray-600 dark:hover:text-gray-300'\r\n            }`}\r\n            title=\"Bar Chart\"\r\n          >\r\n            <BarChart3 className=\"w-5 h-5\" />\r\n          </button>\r\n          {trendData.length > 0 && (\r\n            <>\r\n              <button\r\n                onClick={() => setChartType('line')}\r\n                className={`p-2 rounded-lg transition-colors ${\r\n                  chartType === 'line'\r\n                    ? 'bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-400'\r\n                    : 'text-gray-400 hover:text-gray-600 dark:hover:text-gray-300'\r\n                }`}\r\n                title=\"Line Chart (Trends)\"\r\n              >\r\n                <TrendingUp className=\"w-5 h-5\" />\r\n              </button>\r\n              <button\r\n                onClick={() => setChartType('area')}\r\n                className={`p-2 rounded-lg transition-colors ${\r\n                  chartType === 'area'\r\n                    ? 'bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-400'\r\n                    : 'text-gray-400 hover:text-gray-600 dark:hover:text-gray-300'\r\n                }`}\r\n                title=\"Area Chart (Trends)\"\r\n              >\r\n                <Activity className=\"w-5 h-5\" />\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"h-64\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          {chartType === 'pie' ? (\r\n            <PieChart>\r\n              <Pie\r\n                data={data}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                labelLine={false}\r\n                label={({ categoryName, percentage }) => \r\n                  percentage > 5 ? `${categoryName} (${percentage.toFixed(1)}%)` : ''\r\n                }\r\n                outerRadius={80}\r\n                fill=\"#8884d8\"\r\n                dataKey=\"totalTime\"\r\n              >\r\n                {data.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={entry.color} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip content={<CustomTooltip />} />\r\n            </PieChart>\r\n          ) : chartType === 'bar' ? (\r\n            <BarChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\r\n              <XAxis \r\n                dataKey=\"categoryName\" \r\n                tick={{ fontSize: 12 }}\r\n                angle={-45}\r\n                textAnchor=\"end\"\r\n                height={60}\r\n              />\r\n              <YAxis \r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={(value) => formatTime(value)}\r\n              />\r\n              <Tooltip content={<CustomTooltip />} />\r\n              <Bar dataKey=\"totalTime\" radius={[4, 4, 0, 0]}>\r\n                {data.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={entry.color} />\r\n                ))}\r\n              </Bar>\r\n            </BarChart>\r\n          ) : chartType === 'line' ? (\r\n            <LineChart data={trendData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\r\n              <XAxis \r\n                dataKey=\"date\" \r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={(value) => new Date(value).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n              />\r\n              <YAxis \r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={(value) => formatTime(value)}\r\n              />\r\n              <Tooltip \r\n                labelFormatter={(value) => new Date(value).toLocaleDateString()}\r\n                formatter={(value: number, name: string) => [formatTime(value), name]}\r\n              />\r\n              <Legend />\r\n              {data.map((category, index) => (\r\n                <Line\r\n                  key={category.categoryName}\r\n                  type=\"monotone\"\r\n                  dataKey={category.categoryName}\r\n                  stroke={category.color}\r\n                  strokeWidth={2}\r\n                  dot={{ r: 4 }}\r\n                  connectNulls={false}\r\n                />\r\n              ))}\r\n            </LineChart>\r\n          ) : (\r\n            <AreaChart data={trendData}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\r\n              <XAxis \r\n                dataKey=\"date\" \r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={(value) => new Date(value).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n              />\r\n              <YAxis \r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={(value) => formatTime(value)}\r\n              />\r\n              <Tooltip \r\n                labelFormatter={(value) => new Date(value).toLocaleDateString()}\r\n                formatter={(value: number, name: string) => [formatTime(value), name]}\r\n              />\r\n              <Legend />\r\n              {data.map((category, index) => (\r\n                <Area\r\n                  key={category.categoryName}\r\n                  type=\"monotone\"\r\n                  dataKey={category.categoryName}\r\n                  stackId=\"1\"\r\n                  stroke={category.color}\r\n                  fill={category.color}\r\n                  fillOpacity={0.6}\r\n                />\r\n              ))}\r\n            </AreaChart>\r\n          )}\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      {/* Legend */}\r\n      <div className=\"mt-4 flex flex-wrap gap-3\">\r\n        {data.map((item, index) => (\r\n          <div key={index} className=\"flex items-center space-x-2\">\r\n            <div \r\n              className=\"w-3 h-3 rounded-full\"\r\n              style={{ backgroundColor: item.color }}\r\n            />\r\n            <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              {item.categoryName}: {formatTime(item.totalTime)} ({item.percentage.toFixed(1)}%)\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeDistributionChart;","import React, { useState } from 'react';\r\nimport { Calendar, ChevronDown, AlertCircle, CheckCircle } from 'lucide-react';\r\n\r\ninterface DateRangePickerProps {\r\n  startDate: string;\r\n  endDate: string;\r\n  onDateRangeChange: (startDate: string, endDate: string) => void;\r\n  onRefresh: () => void;\r\n  isLoading: boolean;\r\n}\r\n\r\nconst DateRangePicker: React.FC<DateRangePickerProps> = ({\r\n  startDate,\r\n  endDate,\r\n  onDateRangeChange,\r\n  onRefresh,\r\n  isLoading\r\n}) => {\r\n  const [validationError, setValidationError] = useState<string | null>(null);\r\n  const [showPresets, setShowPresets] = useState(false);\r\n  const validateDateRange = (start: string, end: string): string | null => {\r\n    const startDate = new Date(start);\r\n    const endDate = new Date(end);\r\n    const today = new Date();\r\n    today.setHours(23, 59, 59, 999); // End of today\r\n    \r\n    if (startDate > endDate) {\r\n      return 'Start date must be before end date';\r\n    }\r\n    \r\n    if (endDate > today) {\r\n      return 'End date cannot be in the future';\r\n    }\r\n    \r\n    const diffTime = Math.abs(endDate.getTime() - startDate.getTime());\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    if (diffDays > 365) {\r\n      return 'Date range cannot exceed 365 days';\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  const handleStartDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newStartDate = e.target.value;\r\n    const error = validateDateRange(newStartDate, endDate);\r\n    setValidationError(error);\r\n    \r\n    if (!error) {\r\n      onDateRangeChange(newStartDate, endDate);\r\n    }\r\n  };\r\n\r\n  const handleEndDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newEndDate = e.target.value;\r\n    const error = validateDateRange(startDate, newEndDate);\r\n    setValidationError(error);\r\n    \r\n    if (!error) {\r\n      onDateRangeChange(startDate, newEndDate);\r\n    }\r\n  };\r\n\r\n  const setPresetRange = (days: number) => {\r\n    const end = new Date();\r\n    const start = new Date();\r\n    start.setDate(start.getDate() - days);\r\n    \r\n    const startStr = start.toISOString().split('T')[0];\r\n    const endStr = end.toISOString().split('T')[0];\r\n    \r\n    const error = validateDateRange(startStr, endStr);\r\n    setValidationError(error);\r\n    \r\n    if (!error) {\r\n      onDateRangeChange(startStr, endStr);\r\n      setShowPresets(false);\r\n    }\r\n  };\r\n\r\n  const setCustomPreset = (type: 'week' | 'month' | 'quarter' | 'year') => {\r\n    const end = new Date();\r\n    const start = new Date();\r\n    \r\n    switch (type) {\r\n      case 'week':\r\n        // Start of current week (Sunday)\r\n        start.setDate(start.getDate() - start.getDay());\r\n        break;\r\n      case 'month':\r\n        // Start of current month\r\n        start.setDate(1);\r\n        break;\r\n      case 'quarter':\r\n        // Start of current quarter\r\n        const quarter = Math.floor(start.getMonth() / 3);\r\n        start.setMonth(quarter * 3, 1);\r\n        break;\r\n      case 'year':\r\n        // Start of current year\r\n        start.setMonth(0, 1);\r\n        break;\r\n    }\r\n    \r\n    const startStr = start.toISOString().split('T')[0];\r\n    const endStr = end.toISOString().split('T')[0];\r\n    \r\n    const error = validateDateRange(startStr, endStr);\r\n    setValidationError(error);\r\n    \r\n    if (!error) {\r\n      onDateRangeChange(startStr, endStr);\r\n      setShowPresets(false);\r\n    }\r\n  };\r\n\r\n  const presetRanges = [\r\n    { label: 'Last 7 days', days: 7 },\r\n    { label: 'Last 14 days', days: 14 },\r\n    { label: 'Last 30 days', days: 30 },\r\n    { label: 'Last 90 days', days: 90 },\r\n  ];\r\n\r\n  const customPresets = [\r\n    { label: 'This week', type: 'week' as const },\r\n    { label: 'This month', type: 'month' as const },\r\n    { label: 'This quarter', type: 'quarter' as const },\r\n    { label: 'This year', type: 'year' as const },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg p-4 shadow-sm\">\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Calendar className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Analytics Period\r\n          </h3>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col sm:flex-row gap-4\">\r\n          {/* Date inputs */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <label className=\"text-sm text-gray-600 dark:text-gray-400\">From:</label>\r\n            <input\r\n              type=\"date\"\r\n              value={startDate}\r\n              onChange={handleStartDateChange}\r\n              className={`px-3 py-2 border rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 text-sm focus:ring-2 focus:border-transparent ${\r\n                validationError \r\n                  ? 'border-red-300 dark:border-red-600 focus:ring-red-500' \r\n                  : 'border-gray-300 dark:border-gray-600 focus:ring-blue-500'\r\n              }`}\r\n              max={endDate}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-2\">\r\n            <label className=\"text-sm text-gray-600 dark:text-gray-400\">To:</label>\r\n            <input\r\n              type=\"date\"\r\n              value={endDate}\r\n              onChange={handleEndDateChange}\r\n              className={`px-3 py-2 border rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 text-sm focus:ring-2 focus:border-transparent ${\r\n                validationError \r\n                  ? 'border-red-300 dark:border-red-600 focus:ring-red-500' \r\n                  : 'border-gray-300 dark:border-gray-600 focus:ring-blue-500'\r\n              }`}\r\n              min={startDate}\r\n              max={new Date().toISOString().split('T')[0]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex space-x-2\">\r\n            <button\r\n              onClick={() => setShowPresets(!showPresets)}\r\n              className=\"px-3 py-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-lg text-sm font-medium transition-colors flex items-center space-x-2\"\r\n            >\r\n              <Calendar className=\"w-4 h-4\" />\r\n              <span>Presets</span>\r\n              <ChevronDown className={`w-4 h-4 transition-transform ${showPresets ? 'rotate-180' : ''}`} />\r\n            </button>\r\n            \r\n            <button\r\n              onClick={onRefresh}\r\n              disabled={isLoading || !!validationError}\r\n              className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white rounded-lg text-sm font-medium transition-colors flex items-center space-x-2\"\r\n            >\r\n              {isLoading ? (\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\r\n              ) : validationError ? (\r\n                <>\r\n                  <AlertCircle className=\"w-4 h-4\" />\r\n                  <span>Invalid</span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <CheckCircle className=\"w-4 h-4\" />\r\n                  <span>Update</span>\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Validation Error */}\r\n      {validationError && (\r\n        <div className=\"mt-3 p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <AlertCircle className=\"w-4 h-4 text-red-600 dark:text-red-400\" />\r\n            <p className=\"text-sm text-red-700 dark:text-red-300\">{validationError}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Preset ranges */}\r\n      {showPresets && (\r\n        <div className=\"mt-4 p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg border border-gray-200 dark:border-gray-600\">\r\n          <div className=\"space-y-3\">\r\n            <div>\r\n              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 block\">Recent periods:</span>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {presetRanges.map((preset, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => setPresetRange(preset.days)}\r\n                    className=\"px-3 py-1 text-xs bg-white dark:bg-gray-600 hover:bg-blue-50 dark:hover:bg-blue-900/20 text-gray-700 dark:text-gray-300 hover:text-blue-700 dark:hover:text-blue-300 border border-gray-200 dark:border-gray-500 rounded-full transition-colors\"\r\n                  >\r\n                    {preset.label}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            \r\n            <div>\r\n              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 block\">Current periods:</span>\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {customPresets.map((preset, index) => (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => setCustomPreset(preset.type)}\r\n                    className=\"px-3 py-1 text-xs bg-white dark:bg-gray-600 hover:bg-green-50 dark:hover:bg-green-900/20 text-gray-700 dark:text-gray-300 hover:text-green-700 dark:hover:text-green-300 border border-gray-200 dark:border-gray-500 rounded-full transition-colors\"\r\n                  >\r\n                    {preset.label}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Date range summary */}\r\n      <div className=\"mt-3 text-sm text-gray-500 dark:text-gray-400\">\r\n        Showing data from {new Date(startDate).toLocaleDateString()} to {new Date(endDate).toLocaleDateString()}\r\n        {(() => {\r\n          const start = new Date(startDate);\r\n          const end = new Date(endDate);\r\n          const diffTime = Math.abs(end.getTime() - start.getTime());\r\n          const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n          return ` (${diffDays} day${diffDays !== 1 ? 's' : ''})`;\r\n        })()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateRangePicker;","import React, { useState } from 'react';\r\nimport { Download, FileText, AlertCircle, CheckCircle, ChevronDown, FileJson, FileSpreadsheet } from 'lucide-react';\r\n\r\ninterface ExportButtonProps {\r\n  onExport: (format?: 'json' | 'csv') => Promise<void>;\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\nconst ExportButton: React.FC<ExportButtonProps> = ({\r\n  onExport,\r\n  startDate,\r\n  endDate\r\n}) => {\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [exportStatus, setExportStatus] = useState<'idle' | 'success' | 'error'>('idle');\r\n  const [showFormats, setShowFormats] = useState(false);\r\n  const [selectedFormat, setSelectedFormat] = useState<'json' | 'csv'>('json');\r\n\r\n  const handleExport = async (format: 'json' | 'csv' = selectedFormat) => {\r\n    setIsExporting(true);\r\n    setExportStatus('idle');\r\n    setShowFormats(false);\r\n\r\n    try {\r\n      await onExport(format);\r\n      setExportStatus('success');\r\n      \r\n      // Reset status after 3 seconds\r\n      setTimeout(() => {\r\n        setExportStatus('idle');\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error('Export failed:', error);\r\n      setExportStatus('error');\r\n      \r\n      // Reset status after 5 seconds\r\n      setTimeout(() => {\r\n        setExportStatus('idle');\r\n      }, 5000);\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const formatOptions = [\r\n    { \r\n      value: 'json' as const, \r\n      label: 'JSON', \r\n      description: 'Structured data format',\r\n      icon: FileJson,\r\n      extension: '.json'\r\n    },\r\n    { \r\n      value: 'csv' as const, \r\n      label: 'CSV', \r\n      description: 'Spreadsheet compatible',\r\n      icon: FileSpreadsheet,\r\n      extension: '.csv'\r\n    }\r\n  ];\r\n\r\n  const getButtonContent = () => {\r\n    if (isExporting) {\r\n      return (\r\n        <>\r\n          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\r\n          <span>Exporting...</span>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (exportStatus === 'success') {\r\n      return (\r\n        <>\r\n          <CheckCircle className=\"w-4 h-4\" />\r\n          <span>Exported!</span>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (exportStatus === 'error') {\r\n      return (\r\n        <>\r\n          <AlertCircle className=\"w-4 h-4\" />\r\n          <span>Export Failed</span>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Download className=\"w-4 h-4\" />\r\n        <span>Export Data</span>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const getButtonClass = () => {\r\n    const baseClass = \"px-4 py-2 rounded-lg text-sm font-medium transition-colors flex items-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed\";\r\n    \r\n    if (exportStatus === 'success') {\r\n      return `${baseClass} bg-green-600 hover:bg-green-700 text-white`;\r\n    }\r\n    \r\n    if (exportStatus === 'error') {\r\n      return `${baseClass} bg-red-600 hover:bg-red-700 text-white`;\r\n    }\r\n    \r\n    return `${baseClass} bg-gray-600 hover:bg-gray-700 text-white`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg p-4 shadow-sm\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <FileText className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n              Export Analytics\r\n            </h3>\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              Download your analytics data in {selectedFormat.toUpperCase()} format\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"relative\">\r\n            <button\r\n              onClick={() => setShowFormats(!showFormats)}\r\n              className=\"px-3 py-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-lg text-sm font-medium transition-colors flex items-center space-x-2\"\r\n            >\r\n              <span>{selectedFormat.toUpperCase()}</span>\r\n              <ChevronDown className={`w-4 h-4 transition-transform ${showFormats ? 'rotate-180' : ''}`} />\r\n            </button>\r\n            \r\n            {showFormats && (\r\n              <div className=\"absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-10\">\r\n                {formatOptions.map((format) => {\r\n                  const IconComponent = format.icon;\r\n                  return (\r\n                    <button\r\n                      key={format.value}\r\n                      onClick={() => {\r\n                        setSelectedFormat(format.value);\r\n                        setShowFormats(false);\r\n                      }}\r\n                      className={`w-full px-4 py-3 text-left hover:bg-gray-50 dark:hover:bg-gray-700 flex items-center space-x-3 ${\r\n                        selectedFormat === format.value ? 'bg-blue-50 dark:bg-blue-900/20' : ''\r\n                      }`}\r\n                    >\r\n                      <IconComponent className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" />\r\n                      <div>\r\n                        <div className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                          {format.label}\r\n                        </div>\r\n                        <div className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                          {format.description}\r\n                        </div>\r\n                      </div>\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <button\r\n            onClick={() => handleExport()}\r\n            disabled={isExporting}\r\n            className={getButtonClass()}\r\n          >\r\n            {getButtonContent()}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Export details */}\r\n      <div className=\"mt-3 text-sm text-gray-500 dark:text-gray-400\">\r\n        <p>Export will include:</p>\r\n        <ul className=\"mt-1 ml-4 list-disc space-y-1\">\r\n          <li>Session data from {new Date(startDate).toLocaleDateString()} to {new Date(endDate).toLocaleDateString()}</li>\r\n          <li>Time distribution by categories</li>\r\n          <li>Productivity patterns and statistics</li>\r\n          <li>Category information and goals</li>\r\n          <li>Daily and weekly aggregations</li>\r\n          <li>Focus quality metrics</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {exportStatus === 'error' && (\r\n        <div className=\"mt-3 p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <AlertCircle className=\"w-4 h-4 text-red-600 dark:text-red-400\" />\r\n            <p className=\"text-sm text-red-700 dark:text-red-300\">\r\n              Failed to export data. Please try again.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {exportStatus === 'success' && (\r\n        <div className=\"mt-3 p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <CheckCircle className=\"w-4 h-4 text-green-600 dark:text-green-400\" />\r\n            <p className=\"text-sm text-green-700 dark:text-green-300\">\r\n              Analytics data exported successfully! Check your downloads folder.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportButton;","import React from 'react';\r\nimport { Activity, Clock, TrendingUp } from 'lucide-react';\r\n\r\ninterface HeatmapData {\r\n  dayOfWeek: number;\r\n  hour: number;\r\n  averageFocusTime: number;\r\n  sessionCount: number;\r\n  focusScore: number;\r\n}\r\n\r\ninterface ProductivityHeatmapProps {\r\n  data: HeatmapData[];\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst ProductivityHeatmap: React.FC<ProductivityHeatmapProps> = ({\r\n  data,\r\n  isLoading,\r\n  error\r\n}) => {\r\n  const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  const hours = Array.from({ length: 24 }, (_, i) => i);\r\n\r\n  // Create a map for quick lookup\r\n  const dataMap = new Map<string, HeatmapData>();\r\n  data.forEach(item => {\r\n    const key = `${item.dayOfWeek}-${item.hour}`;\r\n    dataMap.set(key, item);\r\n  });\r\n\r\n  // Find max values for normalization\r\n  const maxFocusScore = Math.max(...data.map(d => d.focusScore), 1);\r\n  const maxSessionCount = Math.max(...data.map(d => d.sessionCount), 1);\r\n\r\n  const getIntensity = (dayOfWeek: number, hour: number): number => {\r\n    const key = `${dayOfWeek}-${hour}`;\r\n    const item = dataMap.get(key);\r\n    if (!item || item.sessionCount === 0) return 0;\r\n    \r\n    // Combine focus score and session count for intensity\r\n    const scoreWeight = item.focusScore / maxFocusScore;\r\n    const countWeight = item.sessionCount / maxSessionCount;\r\n    return (scoreWeight * 0.7 + countWeight * 0.3);\r\n  };\r\n\r\n  const getColor = (intensity: number): string => {\r\n    if (intensity === 0) return 'bg-gray-100 dark:bg-gray-800';\r\n    if (intensity < 0.2) return 'bg-blue-100 dark:bg-blue-900';\r\n    if (intensity < 0.4) return 'bg-blue-200 dark:bg-blue-800';\r\n    if (intensity < 0.6) return 'bg-blue-300 dark:bg-blue-700';\r\n    if (intensity < 0.8) return 'bg-blue-400 dark:bg-blue-600';\r\n    return 'bg-blue-500 dark:bg-blue-500';\r\n  };\r\n\r\n  const formatTime = (minutes: number): string => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    if (hours > 0) {\r\n      return `${hours}h ${mins}m`;\r\n    }\r\n    return `${mins}m`;\r\n  };\r\n\r\n  const getTooltipContent = (dayOfWeek: number, hour: number): string => {\r\n    const key = `${dayOfWeek}-${hour}`;\r\n    const item = dataMap.get(key);\r\n    \r\n    if (!item || item.sessionCount === 0) {\r\n      return `${dayNames[dayOfWeek]} ${hour}:00 - No sessions`;\r\n    }\r\n\r\n    return `${dayNames[dayOfWeek]} ${hour}:00\r\nSessions: ${item.sessionCount}\r\nAvg Focus Time: ${formatTime(item.averageFocusTime)}\r\nFocus Score: ${item.focusScore.toFixed(1)}/100`;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Activity className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Productivity Heatmap\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Activity className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Productivity Heatmap\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-red-600 dark:text-red-400 mb-2\">Error loading heatmap</p>\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">{error}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (data.length === 0) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Activity className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Productivity Heatmap\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-gray-500 dark:text-gray-400 mb-2\">No productivity data available</p>\r\n            <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n              Complete more focus sessions to see your productivity patterns\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Activity className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n              Productivity Heatmap\r\n            </h3>\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              Your focus patterns by day and time\r\n            </p>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Legend */}\r\n        <div className=\"flex items-center space-x-2 text-xs text-gray-500 dark:text-gray-400\">\r\n          <span>Less</span>\r\n          <div className=\"flex space-x-1\">\r\n            <div className=\"w-3 h-3 rounded bg-gray-100 dark:bg-gray-800\"></div>\r\n            <div className=\"w-3 h-3 rounded bg-blue-100 dark:bg-blue-900\"></div>\r\n            <div className=\"w-3 h-3 rounded bg-blue-200 dark:bg-blue-800\"></div>\r\n            <div className=\"w-3 h-3 rounded bg-blue-300 dark:bg-blue-700\"></div>\r\n            <div className=\"w-3 h-3 rounded bg-blue-400 dark:bg-blue-600\"></div>\r\n            <div className=\"w-3 h-3 rounded bg-blue-500 dark:bg-blue-500\"></div>\r\n          </div>\r\n          <span>More</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto\">\r\n        <div className=\"min-w-full\">\r\n          {/* Hour labels */}\r\n          <div className=\"flex mb-2\">\r\n            <div className=\"w-12\"></div> {/* Space for day labels */}\r\n            {hours.map(hour => (\r\n              <div key={hour} className=\"w-6 text-xs text-gray-500 dark:text-gray-400 text-center\">\r\n                {hour % 6 === 0 ? hour : ''}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Heatmap grid */}\r\n          {dayNames.map((dayName, dayIndex) => (\r\n            <div key={dayIndex} className=\"flex items-center mb-1\">\r\n              <div className=\"w-12 text-xs text-gray-600 dark:text-gray-400 text-right pr-2\">\r\n                {dayName}\r\n              </div>\r\n              {hours.map(hour => {\r\n                const intensity = getIntensity(dayIndex, hour);\r\n                const colorClass = getColor(intensity);\r\n                \r\n                return (\r\n                  <div\r\n                    key={hour}\r\n                    className={`w-6 h-4 ${colorClass} border border-gray-200 dark:border-gray-700 cursor-pointer hover:ring-2 hover:ring-blue-300 dark:hover:ring-blue-600 transition-all`}\r\n                    title={getTooltipContent(dayIndex, hour)}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Summary stats */}\r\n      <div className=\"mt-6 grid grid-cols-3 gap-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n        <div className=\"text-center\">\r\n          <div className=\"flex items-center justify-center space-x-1 text-sm text-gray-500 dark:text-gray-400 mb-1\">\r\n            <Clock className=\"w-4 h-4\" />\r\n            <span>Peak Hours</span>\r\n          </div>\r\n          <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            {(() => {\r\n              const peakHours = data\r\n                .filter(d => d.sessionCount > 0)\r\n                .sort((a, b) => b.focusScore - a.focusScore)\r\n                .slice(0, 2)\r\n                .map(d => `${d.hour}:00`)\r\n                .join(', ');\r\n              return peakHours || 'N/A';\r\n            })()}\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"text-center\">\r\n          <div className=\"flex items-center justify-center space-x-1 text-sm text-gray-500 dark:text-gray-400 mb-1\">\r\n            <TrendingUp className=\"w-4 h-4\" />\r\n            <span>Best Day</span>\r\n          </div>\r\n          <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            {(() => {\r\n              const dayTotals = dayNames.map((_, dayIndex) => {\r\n                const dayData = data.filter(d => d.dayOfWeek === dayIndex);\r\n                const avgScore = dayData.length > 0 \r\n                  ? dayData.reduce((sum, d) => sum + d.focusScore, 0) / dayData.length \r\n                  : 0;\r\n                return { day: dayNames[dayIndex], score: avgScore };\r\n              });\r\n              const bestDay = dayTotals.sort((a, b) => b.score - a.score)[0];\r\n              return bestDay?.score > 0 ? bestDay.day : 'N/A';\r\n            })()}\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"text-center\">\r\n          <div className=\"flex items-center justify-center space-x-1 text-sm text-gray-500 dark:text-gray-400 mb-1\">\r\n            <Activity className=\"w-4 h-4\" />\r\n            <span>Total Sessions</span>\r\n          </div>\r\n          <p className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            {data.reduce((sum, d) => sum + d.sessionCount, 0)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductivityHeatmap;","import React from 'react';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Cell } from 'recharts';\r\nimport { Clock, Target, Lightbulb, TrendingUp } from 'lucide-react';\r\n\r\ninterface SessionLengthData {\r\n  averageSessionLength: number;\r\n  optimalSessionLength: number;\r\n  sessionLengthDistribution: Array<{\r\n    durationRange: string;\r\n    count: number;\r\n    averageQuality: number;\r\n  }>;\r\n  recommendations: string[];\r\n}\r\n\r\ninterface SessionLengthAnalysisProps {\r\n  data: SessionLengthData | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst SessionLengthAnalysis: React.FC<SessionLengthAnalysisProps> = ({\r\n  data,\r\n  isLoading,\r\n  error\r\n}) => {\r\n  const formatTime = (minutes: number): string => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = Math.round(minutes % 60);\r\n    if (hours > 0) {\r\n      return `${hours}h ${mins}m`;\r\n    }\r\n    return `${mins}m`;\r\n  };\r\n\r\n  const getQualityColor = (quality: number): string => {\r\n    if (quality >= 4) return '#10B981'; // Green\r\n    if (quality >= 3.5) return '#F59E0B'; // Yellow\r\n    if (quality >= 3) return '#EF4444'; // Red\r\n    return '#6B7280'; // Gray\r\n  };\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <div className=\"bg-white dark:bg-gray-800 p-3 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg\">\r\n          <p className=\"font-medium text-gray-900 dark:text-gray-100\">{label}</p>\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            Sessions: {data.count}\r\n          </p>\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            Avg Quality: {data.averageQuality.toFixed(1)}/5\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Clock className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Session Length Analysis\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Clock className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Session Length Analysis\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-red-600 dark:text-red-400 mb-2\">Error loading analysis</p>\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">{error}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data || data.sessionLengthDistribution.length === 0) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Clock className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Session Length Analysis\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-gray-500 dark:text-gray-400 mb-2\">No session data available</p>\r\n            <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n              Complete more focus sessions to see length analysis\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n      <div className=\"flex items-center space-x-3 mb-6\">\r\n        <Clock className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Session Length Analysis\r\n          </h3>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            Optimize your session duration for better focus\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Metrics */}\r\n      <div className=\"grid grid-cols-2 gap-4 mb-6\">\r\n        <div className=\"bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4\">\r\n          <div className=\"flex items-center space-x-2 mb-2\">\r\n            <TrendingUp className=\"w-4 h-4 text-blue-600 dark:text-blue-400\" />\r\n            <span className=\"text-sm font-medium text-blue-900 dark:text-blue-100\">\r\n              Average Length\r\n            </span>\r\n          </div>\r\n          <p className=\"text-2xl font-bold text-blue-900 dark:text-blue-100\">\r\n            {formatTime(data.averageSessionLength)}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"bg-green-50 dark:bg-green-900/20 rounded-lg p-4\">\r\n          <div className=\"flex items-center space-x-2 mb-2\">\r\n            <Target className=\"w-4 h-4 text-green-600 dark:text-green-400\" />\r\n            <span className=\"text-sm font-medium text-green-900 dark:text-green-100\">\r\n              Optimal Length\r\n            </span>\r\n          </div>\r\n          <p className=\"text-2xl font-bold text-green-900 dark:text-green-100\">\r\n            {formatTime(data.optimalSessionLength)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Distribution Chart */}\r\n      <div className=\"mb-6\">\r\n        <h4 className=\"text-md font-medium text-gray-900 dark:text-gray-100 mb-3\">\r\n          Session Length Distribution\r\n        </h4>\r\n        <div className=\"h-48\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart data={data.sessionLengthDistribution}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\r\n              <XAxis \r\n                dataKey=\"durationRange\" \r\n                tick={{ fontSize: 12 }}\r\n                angle={-45}\r\n                textAnchor=\"end\"\r\n                height={60}\r\n              />\r\n              <YAxis \r\n                tick={{ fontSize: 12 }}\r\n                label={{ value: 'Sessions', angle: -90, position: 'insideLeft' }}\r\n              />\r\n              <Tooltip content={<CustomTooltip />} />\r\n              <Bar dataKey=\"count\" radius={[4, 4, 0, 0]}>\r\n                {data.sessionLengthDistribution.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={getQualityColor(entry.averageQuality)} />\r\n                ))}\r\n              </Bar>\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        \r\n        {/* Quality Legend */}\r\n        <div className=\"flex items-center justify-center space-x-4 mt-3 text-xs\">\r\n          <div className=\"flex items-center space-x-1\">\r\n            <div className=\"w-3 h-3 rounded bg-red-500\"></div>\r\n            <span className=\"text-gray-600 dark:text-gray-400\">Low Quality (&lt;3)</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-1\">\r\n            <div className=\"w-3 h-3 rounded bg-yellow-500\"></div>\r\n            <span className=\"text-gray-600 dark:text-gray-400\">Good Quality (3-4)</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-1\">\r\n            <div className=\"w-3 h-3 rounded bg-green-500\"></div>\r\n            <span className=\"text-gray-600 dark:text-gray-400\">High Quality (4+)</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Recommendations */}\r\n      {data.recommendations.length > 0 && (\r\n        <div className=\"bg-yellow-50 dark:bg-yellow-900/20 rounded-lg p-4\">\r\n          <div className=\"flex items-center space-x-2 mb-3\">\r\n            <Lightbulb className=\"w-4 h-4 text-yellow-600 dark:text-yellow-400\" />\r\n            <h4 className=\"text-sm font-medium text-yellow-900 dark:text-yellow-100\">\r\n              Recommendations\r\n            </h4>\r\n          </div>\r\n          <ul className=\"space-y-2\">\r\n            {data.recommendations.map((recommendation, index) => (\r\n              <li key={index} className=\"text-sm text-yellow-800 dark:text-yellow-200 flex items-start space-x-2\">\r\n                <span className=\"text-yellow-600 dark:text-yellow-400 mt-1\">•</span>\r\n                <span>{recommendation}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionLengthAnalysis;","import React from 'react';\r\nimport { Lightbulb, Clock, Calendar, Star, ArrowRight } from 'lucide-react';\r\n\r\ninterface SessionSuggestionsData {\r\n  suggestedDuration: number;\r\n  confidence: number;\r\n  reason: string;\r\n  alternativeTimes: Array<{\r\n    hour: number;\r\n    dayOfWeek: number;\r\n    score: number;\r\n  }>;\r\n}\r\n\r\ninterface SessionSuggestionsProps {\r\n  data: SessionSuggestionsData | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  onApplySuggestion?: (duration: number) => void;\r\n}\r\n\r\nconst SessionSuggestions: React.FC<SessionSuggestionsProps> = ({\r\n  data,\r\n  isLoading,\r\n  error,\r\n  onApplySuggestion\r\n}) => {\r\n  const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n  \r\n  const formatTime = (minutes: number): string => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = Math.round(minutes % 60);\r\n    if (hours > 0) {\r\n      return `${hours}h ${mins}m`;\r\n    }\r\n    return `${mins}m`;\r\n  };\r\n\r\n  const formatHour = (hour: number): string => {\r\n    const period = hour >= 12 ? 'PM' : 'AM';\r\n    const displayHour = hour === 0 ? 12 : hour > 12 ? hour - 12 : hour;\r\n    return `${displayHour}:00 ${period}`;\r\n  };\r\n\r\n  const getConfidenceColor = (confidence: number): string => {\r\n    if (confidence >= 0.8) return 'text-green-600 dark:text-green-400';\r\n    if (confidence >= 0.6) return 'text-yellow-600 dark:text-yellow-400';\r\n    if (confidence >= 0.4) return 'text-orange-600 dark:text-orange-400';\r\n    return 'text-red-600 dark:text-red-400';\r\n  };\r\n\r\n  const getConfidenceLabel = (confidence: number): string => {\r\n    if (confidence >= 0.8) return 'High';\r\n    if (confidence >= 0.6) return 'Medium';\r\n    if (confidence >= 0.4) return 'Low';\r\n    return 'Very Low';\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Lightbulb className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Session Suggestions\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-32\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Lightbulb className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Session Suggestions\r\n          </h3>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p className=\"text-red-600 dark:text-red-400 mb-2\">Error loading suggestions</p>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Lightbulb className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Session Suggestions\r\n          </h3>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p className=\"text-gray-500 dark:text-gray-400 mb-2\">No suggestions available</p>\r\n          <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n            Complete more sessions to get personalized recommendations\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n      <div className=\"flex items-center space-x-3 mb-6\">\r\n        <Lightbulb className=\"w-5 h-5 text-yellow-500\" />\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Session Suggestions\r\n          </h3>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n            AI-powered recommendations based on your patterns\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Suggestion */}\r\n      <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-lg p-4 mb-6 border border-blue-200 dark:border-blue-800\">\r\n        <div className=\"flex items-center justify-between mb-3\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Clock className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\r\n            <span className=\"font-medium text-blue-900 dark:text-blue-100\">\r\n              Recommended Duration\r\n            </span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Star className={`w-4 h-4 ${getConfidenceColor(data.confidence)}`} />\r\n            <span className={`text-sm font-medium ${getConfidenceColor(data.confidence)}`}>\r\n              {getConfidenceLabel(data.confidence)} Confidence\r\n            </span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <p className=\"text-3xl font-bold text-blue-900 dark:text-blue-100 mb-1\">\r\n              {formatTime(data.suggestedDuration)}\r\n            </p>\r\n            <p className=\"text-sm text-blue-700 dark:text-blue-300\">\r\n              {data.reason}\r\n            </p>\r\n          </div>\r\n          \r\n          {onApplySuggestion && (\r\n            <button\r\n              onClick={() => onApplySuggestion(data.suggestedDuration)}\r\n              className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg text-sm font-medium transition-colors flex items-center space-x-2\"\r\n            >\r\n              <span>Apply</span>\r\n              <ArrowRight className=\"w-4 h-4\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Alternative Times */}\r\n      {data.alternativeTimes.length > 0 && (\r\n        <div>\r\n          <div className=\"flex items-center space-x-2 mb-3\">\r\n            <Calendar className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" />\r\n            <h4 className=\"text-md font-medium text-gray-900 dark:text-gray-100\">\r\n              Better Times to Focus\r\n            </h4>\r\n          </div>\r\n          \r\n          <div className=\"space-y-2\">\r\n            {data.alternativeTimes.map((time, index) => (\r\n              <div\r\n                key={index}\r\n                className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors\"\r\n              >\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div className=\"w-2 h-2 rounded-full bg-green-500\"></div>\r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                      {dayNames[time.dayOfWeek]} at {formatHour(time.hour)}\r\n                    </p>\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                      Productivity score: {time.score.toFixed(1)}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-1\">\r\n                  {Array.from({ length: 5 }, (_, i) => (\r\n                    <Star\r\n                      key={i}\r\n                      className={`w-3 h-3 ${\r\n                        i < Math.round(time.score / 20) \r\n                          ? 'text-yellow-400 fill-current' \r\n                          : 'text-gray-300 dark:text-gray-600'\r\n                      }`}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          \r\n          <div className=\"mt-3 p-3 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg\">\r\n            <p className=\"text-xs text-yellow-800 dark:text-yellow-200\">\r\n              💡 These times show higher productivity based on your historical data. \r\n              Consider scheduling important work during these periods.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionSuggestions;","import React, { useState } from 'react';\r\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\r\nimport { Calendar, TrendingUp, Clock, Target, Award, ChevronDown, FileText } from 'lucide-react';\r\n\r\ninterface ReportData {\r\n  weeklyReports: Array<{\r\n    weekStart: string;\r\n    weekEnd: string;\r\n    totalFocusTime: number;\r\n    sessionsCompleted: number;\r\n    averageSessionLength: number;\r\n    focusScore: number;\r\n    topCategory: string;\r\n    goalsAchieved: number;\r\n    totalGoals: number;\r\n  }>;\r\n  monthlyReports: Array<{\r\n    month: string;\r\n    year: number;\r\n    totalFocusTime: number;\r\n    sessionsCompleted: number;\r\n    averageSessionLength: number;\r\n    focusScore: number;\r\n    topCategory: string;\r\n    goalsAchieved: number;\r\n    totalGoals: number;\r\n    weeklyBreakdown: Array<{\r\n      week: number;\r\n      focusTime: number;\r\n      sessions: number;\r\n    }>;\r\n  }>;\r\n  trendAnalysis: {\r\n    focusTimeTrend: 'increasing' | 'decreasing' | 'stable';\r\n    sessionQualityTrend: 'improving' | 'declining' | 'stable';\r\n    consistencyScore: number;\r\n    recommendations: string[];\r\n  };\r\n}\r\n\r\ninterface WeeklyMonthlyReportsProps {\r\n  data: ReportData | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  startDate: string;\r\n  endDate: string;\r\n}\r\n\r\nconst WeeklyMonthlyReports: React.FC<WeeklyMonthlyReportsProps> = ({\r\n  data,\r\n  isLoading,\r\n  error,\r\n  startDate,\r\n  endDate\r\n}) => {\r\n  const [reportType, setReportType] = useState<'weekly' | 'monthly'>('weekly');\r\n  const [showTrends, setShowTrends] = useState(true);\r\n\r\n  const formatTime = (minutes: number): string => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    if (hours > 0) {\r\n      return `${hours}h ${mins}m`;\r\n    }\r\n    return `${mins}m`;\r\n  };\r\n\r\n  const formatDate = (dateStr: string): string => {\r\n    return new Date(dateStr).toLocaleDateString('en-US', { \r\n      month: 'short', \r\n      day: 'numeric' \r\n    });\r\n  };\r\n\r\n  const getTrendIcon = (trend: string) => {\r\n    switch (trend) {\r\n      case 'increasing':\r\n      case 'improving':\r\n        return <TrendingUp className=\"w-4 h-4 text-green-500\" />;\r\n      case 'decreasing':\r\n      case 'declining':\r\n        return <TrendingUp className=\"w-4 h-4 text-red-500 rotate-180\" />;\r\n      default:\r\n        return <TrendingUp className=\"w-4 h-4 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getTrendColor = (trend: string) => {\r\n    switch (trend) {\r\n      case 'increasing':\r\n      case 'improving':\r\n        return 'text-green-600 dark:text-green-400';\r\n      case 'decreasing':\r\n      case 'declining':\r\n        return 'text-red-600 dark:text-red-400';\r\n      default:\r\n        return 'text-gray-600 dark:text-gray-400';\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <FileText className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Weekly & Monthly Reports\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <FileText className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Weekly & Monthly Reports\r\n          </h3>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p className=\"text-red-600 dark:text-red-400 mb-2\">Error loading reports</p>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data || (data.weeklyReports.length === 0 && data.monthlyReports.length === 0)) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <FileText className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Weekly & Monthly Reports\r\n          </h3>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p className=\"text-gray-500 dark:text-gray-400 mb-2\">No report data available</p>\r\n          <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n            Complete more sessions to generate comprehensive reports\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentReports = reportType === 'weekly' ? data.weeklyReports : data.monthlyReports;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header with Controls */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <FileText className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n                Productivity Reports\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                Comprehensive analysis of your focus patterns and progress\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"flex bg-gray-100 dark:bg-gray-700 rounded-lg p-1\">\r\n              <button\r\n                onClick={() => setReportType('weekly')}\r\n                className={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${\r\n                  reportType === 'weekly'\r\n                    ? 'bg-white dark:bg-gray-600 text-gray-900 dark:text-gray-100 shadow-sm'\r\n                    : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100'\r\n                }`}\r\n              >\r\n                Weekly\r\n              </button>\r\n              <button\r\n                onClick={() => setReportType('monthly')}\r\n                className={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${\r\n                  reportType === 'monthly'\r\n                    ? 'bg-white dark:bg-gray-600 text-gray-900 dark:text-gray-100 shadow-sm'\r\n                    : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100'\r\n                }`}\r\n              >\r\n                Monthly\r\n              </button>\r\n            </div>\r\n\r\n            <button\r\n              onClick={() => setShowTrends(!showTrends)}\r\n              className=\"flex items-center space-x-2 px-3 py-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-lg text-sm font-medium transition-colors\"\r\n            >\r\n              <TrendingUp className=\"w-4 h-4\" />\r\n              <span>Trends</span>\r\n              <ChevronDown className={`w-4 h-4 transition-transform ${showTrends ? 'rotate-180' : ''}`} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Trend Analysis */}\r\n        {showTrends && data.trendAnalysis && (\r\n          <div className=\"mb-6 p-4 bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-lg border border-blue-200 dark:border-blue-800\">\r\n            <h4 className=\"text-md font-semibold text-blue-900 dark:text-blue-100 mb-3\">\r\n              Trend Analysis\r\n            </h4>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                {getTrendIcon(data.trendAnalysis.focusTimeTrend)}\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-blue-900 dark:text-blue-100\">\r\n                    Focus Time\r\n                  </p>\r\n                  <p className={`text-sm capitalize ${getTrendColor(data.trendAnalysis.focusTimeTrend)}`}>\r\n                    {data.trendAnalysis.focusTimeTrend}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center space-x-3\">\r\n                {getTrendIcon(data.trendAnalysis.sessionQualityTrend)}\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-blue-900 dark:text-blue-100\">\r\n                    Session Quality\r\n                  </p>\r\n                  <p className={`text-sm capitalize ${getTrendColor(data.trendAnalysis.sessionQualityTrend)}`}>\r\n                    {data.trendAnalysis.sessionQualityTrend}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center space-x-3\">\r\n                <Award className=\"w-4 h-4 text-purple-500\" />\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-blue-900 dark:text-blue-100\">\r\n                    Consistency Score\r\n                  </p>\r\n                  <p className=\"text-sm text-purple-600 dark:text-purple-400\">\r\n                    {data.trendAnalysis.consistencyScore.toFixed(1)}/100\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {data.trendAnalysis.recommendations.length > 0 && (\r\n              <div>\r\n                <p className=\"text-sm font-medium text-blue-900 dark:text-blue-100 mb-2\">\r\n                  Recommendations:\r\n                </p>\r\n                <ul className=\"space-y-1\">\r\n                  {data.trendAnalysis.recommendations.map((rec, index) => (\r\n                    <li key={index} className=\"text-sm text-blue-800 dark:text-blue-200 flex items-start space-x-2\">\r\n                      <span className=\"text-blue-600 dark:text-blue-400 mt-1\">•</span>\r\n                      <span>{rec}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Reports Chart */}\r\n        <div className=\"h-64 mb-6\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            {reportType === 'weekly' ? (\r\n              <BarChart data={data.weeklyReports}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\r\n                <XAxis \r\n                  dataKey=\"weekStart\"\r\n                  tick={{ fontSize: 12 }}\r\n                  tickFormatter={(value) => formatDate(value)}\r\n                />\r\n                <YAxis \r\n                  tick={{ fontSize: 12 }}\r\n                  tickFormatter={(value) => formatTime(value)}\r\n                />\r\n                <Tooltip \r\n                  labelFormatter={(value) => `Week of ${formatDate(value)}`}\r\n                  formatter={(value: number, name: string) => {\r\n                    if (name === 'totalFocusTime') return [formatTime(value), 'Focus Time'];\r\n                    if (name === 'focusScore') return [`${value.toFixed(1)}/100`, 'Focus Score'];\r\n                    return [value, name];\r\n                  }}\r\n                />\r\n                <Legend />\r\n                <Bar dataKey=\"totalFocusTime\" fill=\"#3B82F6\" name=\"Focus Time\" radius={[4, 4, 0, 0]} />\r\n                <Bar dataKey=\"focusScore\" fill=\"#10B981\" name=\"Focus Score\" radius={[4, 4, 0, 0]} />\r\n              </BarChart>\r\n            ) : (\r\n              <LineChart data={data.monthlyReports}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\r\n                <XAxis \r\n                  dataKey=\"month\"\r\n                  tick={{ fontSize: 12 }}\r\n                />\r\n                <YAxis \r\n                  tick={{ fontSize: 12 }}\r\n                  tickFormatter={(value) => formatTime(value)}\r\n                />\r\n                <Tooltip \r\n                  formatter={(value: number, name: string) => {\r\n                    if (name === 'totalFocusTime') return [formatTime(value), 'Focus Time'];\r\n                    if (name === 'focusScore') return [`${value.toFixed(1)}/100`, 'Focus Score'];\r\n                    return [value, name];\r\n                  }}\r\n                />\r\n                <Legend />\r\n                <Line \r\n                  type=\"monotone\" \r\n                  dataKey=\"totalFocusTime\" \r\n                  stroke=\"#3B82F6\" \r\n                  strokeWidth={3}\r\n                  dot={{ r: 6 }}\r\n                  name=\"Focus Time\"\r\n                />\r\n                <Line \r\n                  type=\"monotone\" \r\n                  dataKey=\"focusScore\" \r\n                  stroke=\"#10B981\" \r\n                  strokeWidth={3}\r\n                  dot={{ r: 6 }}\r\n                  name=\"Focus Score\"\r\n                />\r\n              </LineChart>\r\n            )}\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Report Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {currentReports.map((report, index) => (\r\n          <div key={index} className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div>\r\n                <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n                  {reportType === 'weekly' \r\n                    ? `Week ${formatDate(report.weekStart)}`\r\n                    : `${report.month} ${report.year}`\r\n                  }\r\n                </h4>\r\n                {reportType === 'weekly' && (\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    {formatDate(report.weekStart)} - {formatDate(report.weekEnd)}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <p className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">\r\n                  {formatTime(report.totalFocusTime)}\r\n                </p>\r\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                  Total Focus Time\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Clock className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" />\r\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">Sessions</span>\r\n                </div>\r\n                <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                  {report.sessionsCompleted}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <TrendingUp className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" />\r\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">Avg Length</span>\r\n                </div>\r\n                <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                  {formatTime(report.averageSessionLength)}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Award className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" />\r\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">Focus Score</span>\r\n                </div>\r\n                <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                  {report.focusScore.toFixed(1)}/100\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Target className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" />\r\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">Goals</span>\r\n                </div>\r\n                <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                  {report.goalsAchieved}/{report.totalGoals}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"pt-2 border-t border-gray-200 dark:border-gray-700\">\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                  Top Category: <span className=\"font-medium text-gray-900 dark:text-gray-100\">{report.topCategory}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeeklyMonthlyReports;","import React from 'react';\r\nimport { PieChart, Pie, Cell, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LineChart, Line } from 'recharts';\r\nimport { Brain, Clock, Target, TrendingUp, Award, AlertCircle } from 'lucide-react';\r\n\r\ninterface FocusQualityData {\r\n  deepWorkPercentage: number;\r\n  averageQualityRating: number;\r\n  qualityDistribution: Array<{\r\n    rating: number;\r\n    count: number;\r\n    percentage: number;\r\n  }>;\r\n  sessionTypeBreakdown: Array<{\r\n    type: string;\r\n    count: number;\r\n    averageQuality: number;\r\n    totalTime: number;\r\n    color: string;\r\n  }>;\r\n  qualityTrends: Array<{\r\n    date: string;\r\n    averageQuality: number;\r\n    deepWorkTime: number;\r\n    totalTime: number;\r\n  }>;\r\n  interruptionAnalysis: {\r\n    averageInterruptions: number;\r\n    interruptionImpact: number; // percentage impact on quality\r\n    commonInterruptionTimes: Array<{\r\n      hour: number;\r\n      count: number;\r\n    }>;\r\n  };\r\n  focusMetrics: {\r\n    consistencyScore: number;\r\n    improvementRate: number;\r\n    optimalSessionLength: number;\r\n    qualityPredictors: string[];\r\n  };\r\n}\r\n\r\ninterface FocusQualityMetricsProps {\r\n  data: FocusQualityData | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst FocusQualityMetrics: React.FC<FocusQualityMetricsProps> = ({\r\n  data,\r\n  isLoading,\r\n  error\r\n}) => {\r\n  const formatTime = (minutes: number): string => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    if (hours > 0) {\r\n      return `${hours}h ${mins}m`;\r\n    }\r\n    return `${mins}m`;\r\n  };\r\n\r\n  const getQualityColor = (rating: number): string => {\r\n    if (rating >= 4.5) return '#10B981'; // Green\r\n    if (rating >= 3.5) return '#F59E0B'; // Yellow\r\n    if (rating >= 2.5) return '#EF4444'; // Red\r\n    return '#6B7280'; // Gray\r\n  };\r\n\r\n  const getQualityLabel = (rating: number): string => {\r\n    if (rating >= 4.5) return 'Excellent';\r\n    if (rating >= 3.5) return 'Good';\r\n    if (rating >= 2.5) return 'Fair';\r\n    return 'Poor';\r\n  };\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"bg-white dark:bg-gray-800 p-3 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg\">\r\n          <p className=\"font-medium text-gray-900 dark:text-gray-100\">{label}</p>\r\n          {payload.map((entry: any, index: number) => (\r\n            <p key={index} className=\"text-sm\" style={{ color: entry.color }}>\r\n              {entry.name}: {entry.value}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Brain className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Focus Quality Metrics\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Brain className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Focus Quality Metrics\r\n          </h3>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p className=\"text-red-600 dark:text-red-400 mb-2\">Error loading metrics</p>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Brain className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Focus Quality Metrics\r\n          </h3>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p className=\"text-gray-500 dark:text-gray-400 mb-2\">No quality data available</p>\r\n          <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n            Complete more sessions with quality ratings to see metrics\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header and Key Metrics */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-6\">\r\n          <Brain className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n              Focus Quality Metrics\r\n            </h3>\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n              Deep analysis of your focus quality and session effectiveness\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Key Metrics Grid */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-6\">\r\n          <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20 rounded-lg p-4\">\r\n            <div className=\"flex items-center space-x-3 mb-2\">\r\n              <Target className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\r\n              <span className=\"text-sm font-medium text-blue-900 dark:text-blue-100\">\r\n                Deep Work %\r\n              </span>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-blue-900 dark:text-blue-100\">\r\n              {data.deepWorkPercentage.toFixed(1)}%\r\n            </p>\r\n            <p className=\"text-xs text-blue-700 dark:text-blue-300\">\r\n              Sessions ≥45min\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-gradient-to-r from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 rounded-lg p-4\">\r\n            <div className=\"flex items-center space-x-3 mb-2\">\r\n              <Award className=\"w-5 h-5 text-green-600 dark:text-green-400\" />\r\n              <span className=\"text-sm font-medium text-green-900 dark:text-green-100\">\r\n                Avg Quality\r\n              </span>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-green-900 dark:text-green-100\">\r\n              {data.averageQualityRating.toFixed(1)}/5\r\n            </p>\r\n            <p className=\"text-xs text-green-700 dark:text-green-300\">\r\n              {getQualityLabel(data.averageQualityRating)}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-gradient-to-r from-purple-50 to-purple-100 dark:from-purple-900/20 dark:to-purple-800/20 rounded-lg p-4\">\r\n            <div className=\"flex items-center space-x-3 mb-2\">\r\n              <TrendingUp className=\"w-5 h-5 text-purple-600 dark:text-purple-400\" />\r\n              <span className=\"text-sm font-medium text-purple-900 dark:text-purple-100\">\r\n                Consistency\r\n              </span>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-purple-900 dark:text-purple-100\">\r\n              {data.focusMetrics.consistencyScore.toFixed(0)}/100\r\n            </p>\r\n            <p className=\"text-xs text-purple-700 dark:text-purple-300\">\r\n              Score\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-gradient-to-r from-orange-50 to-orange-100 dark:from-orange-900/20 dark:to-orange-800/20 rounded-lg p-4\">\r\n            <div className=\"flex items-center space-x-3 mb-2\">\r\n              <AlertCircle className=\"w-5 h-5 text-orange-600 dark:text-orange-400\" />\r\n              <span className=\"text-sm font-medium text-orange-900 dark:text-orange-100\">\r\n                Interruptions\r\n              </span>\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-orange-900 dark:text-orange-100\">\r\n              {data.interruptionAnalysis.averageInterruptions.toFixed(1)}\r\n            </p>\r\n            <p className=\"text-xs text-orange-700 dark:text-orange-300\">\r\n              Per session\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Quality Trends Chart */}\r\n        <div className=\"h-64\">\r\n          <h4 className=\"text-md font-semibold text-gray-900 dark:text-gray-100 mb-3\">\r\n            Quality Trends Over Time\r\n          </h4>\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart data={data.qualityTrends}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\r\n              <XAxis \r\n                dataKey=\"date\"\r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={(value) => new Date(value).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n              />\r\n              <YAxis \r\n                tick={{ fontSize: 12 }}\r\n                domain={[0, 5]}\r\n              />\r\n              <Tooltip \r\n                labelFormatter={(value) => new Date(value).toLocaleDateString()}\r\n                formatter={(value: number, name: string) => {\r\n                  if (name === 'averageQuality') return [`${value.toFixed(1)}/5`, 'Quality Rating'];\r\n                  if (name === 'deepWorkTime') return [formatTime(value), 'Deep Work Time'];\r\n                  return [value, name];\r\n                }}\r\n              />\r\n              <Line \r\n                type=\"monotone\" \r\n                dataKey=\"averageQuality\" \r\n                stroke=\"#10B981\" \r\n                strokeWidth={3}\r\n                dot={{ r: 4 }}\r\n                name=\"Quality Rating\"\r\n              />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quality Distribution and Session Types */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Quality Distribution */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n          <h4 className=\"text-md font-semibold text-gray-900 dark:text-gray-100 mb-4\">\r\n            Quality Rating Distribution\r\n          </h4>\r\n          \r\n          <div className=\"h-48 mb-4\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <BarChart data={data.qualityDistribution}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\r\n                <XAxis \r\n                  dataKey=\"rating\"\r\n                  tick={{ fontSize: 12 }}\r\n                  tickFormatter={(value) => `${value}★`}\r\n                />\r\n                <YAxis tick={{ fontSize: 12 }} />\r\n                <Tooltip content={<CustomTooltip />} />\r\n                <Bar dataKey=\"count\" radius={[4, 4, 0, 0]}>\r\n                  {data.qualityDistribution.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={getQualityColor(entry.rating)} />\r\n                  ))}\r\n                </Bar>\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            {data.qualityDistribution.map((item, index) => (\r\n              <div key={index} className=\"flex items-center justify-between text-sm\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div \r\n                    className=\"w-3 h-3 rounded-full\"\r\n                    style={{ backgroundColor: getQualityColor(item.rating) }}\r\n                  />\r\n                  <span className=\"text-gray-600 dark:text-gray-400\">\r\n                    {item.rating}★ ({getQualityLabel(item.rating)})\r\n                  </span>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                    {item.count} sessions\r\n                  </span>\r\n                  <span className=\"text-gray-500 dark:text-gray-400 ml-2\">\r\n                    ({item.percentage.toFixed(1)}%)\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Session Type Breakdown */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n          <h4 className=\"text-md font-semibold text-gray-900 dark:text-gray-100 mb-4\">\r\n            Quality by Session Type\r\n          </h4>\r\n          \r\n          <div className=\"h-48 mb-4\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <PieChart>\r\n                <Pie\r\n                  data={data.sessionTypeBreakdown}\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  labelLine={false}\r\n                  label={({ type, averageQuality }) => \r\n                    `${type} (${averageQuality.toFixed(1)}★)`\r\n                  }\r\n                  outerRadius={80}\r\n                  fill=\"#8884d8\"\r\n                  dataKey=\"count\"\r\n                >\r\n                  {data.sessionTypeBreakdown.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={entry.color} />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip \r\n                  formatter={(value: number, name: string, props: any) => [\r\n                    `${value} sessions (${formatTime(props.payload.totalTime)})`,\r\n                    `${props.payload.type} - Avg Quality: ${props.payload.averageQuality.toFixed(1)}★`\r\n                  ]}\r\n                />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            {data.sessionTypeBreakdown.map((item, index) => (\r\n              <div key={index} className=\"flex items-center justify-between text-sm\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div \r\n                    className=\"w-3 h-3 rounded-full\"\r\n                    style={{ backgroundColor: item.color }}\r\n                  />\r\n                  <span className=\"text-gray-600 dark:text-gray-400 capitalize\">\r\n                    {item.type.replace('_', ' ')}\r\n                  </span>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                    {item.averageQuality.toFixed(1)}★\r\n                  </span>\r\n                  <span className=\"text-gray-500 dark:text-gray-400 ml-2\">\r\n                    ({item.count} sessions)\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Insights and Recommendations */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <h4 className=\"text-md font-semibold text-gray-900 dark:text-gray-100 mb-4\">\r\n          Focus Quality Insights\r\n        </h4>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <div>\r\n            <h5 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 mb-3\">\r\n              Quality Predictors\r\n            </h5>\r\n            <ul className=\"space-y-2\">\r\n              {data.focusMetrics.qualityPredictors.map((predictor, index) => (\r\n                <li key={index} className=\"text-sm text-gray-600 dark:text-gray-400 flex items-start space-x-2\">\r\n                  <span className=\"text-green-500 mt-1\">✓</span>\r\n                  <span>{predictor}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div>\r\n            <h5 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 mb-3\">\r\n              Interruption Analysis\r\n            </h5>\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Quality Impact:</span>\r\n                <span className=\"font-medium text-red-600 dark:text-red-400\">\r\n                  -{data.interruptionAnalysis.interruptionImpact.toFixed(1)}%\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Peak Interruption Time:</span>\r\n                <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                  {data.interruptionAnalysis.commonInterruptionTimes.length > 0 \r\n                    ? `${data.interruptionAnalysis.commonInterruptionTimes[0].hour}:00`\r\n                    : 'N/A'\r\n                  }\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span className=\"text-gray-600 dark:text-gray-400\">Optimal Session Length:</span>\r\n                <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                  {formatTime(data.focusMetrics.optimalSessionLength)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FocusQualityMetrics;","import React, { useState } from 'react';\r\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Area, AreaChart } from 'recharts';\r\nimport { TrendingUp, TrendingDown, Minus, Calendar, ArrowUp, ArrowDown, RotateCcw } from 'lucide-react';\r\n\r\ninterface ComparisonData {\r\n  weekOverWeek: Array<{\r\n    metric: string;\r\n    currentWeek: number;\r\n    previousWeek: number;\r\n    change: number;\r\n    changePercentage: number;\r\n    trend: 'up' | 'down' | 'stable';\r\n  }>;\r\n  monthOverMonth: Array<{\r\n    metric: string;\r\n    currentMonth: number;\r\n    previousMonth: number;\r\n    change: number;\r\n    changePercentage: number;\r\n    trend: 'up' | 'down' | 'stable';\r\n  }>;\r\n  periodComparison: Array<{\r\n    period: string;\r\n    focusTime: number;\r\n    sessions: number;\r\n    averageQuality: number;\r\n    goalsAchieved: number;\r\n    focusScore: number;\r\n  }>;\r\n  trendAnalysis: {\r\n    overallTrend: 'improving' | 'declining' | 'stable';\r\n    strongestImprovement: string;\r\n    biggestDecline: string;\r\n    consistencyRating: number;\r\n    recommendations: string[];\r\n  };\r\n}\r\n\r\ninterface ComparativeAnalysisProps {\r\n  data: ComparisonData | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  comparisonType: 'week' | 'month';\r\n  onComparisonTypeChange: (type: 'week' | 'month') => void;\r\n}\r\n\r\nconst ComparativeAnalysis: React.FC<ComparativeAnalysisProps> = ({\r\n  data,\r\n  isLoading,\r\n  error,\r\n  comparisonType,\r\n  onComparisonTypeChange\r\n}) => {\r\n  const [selectedMetric, setSelectedMetric] = useState<string>('focusTime');\r\n\r\n  const formatTime = (minutes: number): string => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    if (hours > 0) {\r\n      return `${hours}h ${mins}m`;\r\n    }\r\n    return `${mins}m`;\r\n  };\r\n\r\n  const formatChange = (change: number, isTime: boolean = false): string => {\r\n    const absChange = Math.abs(change);\r\n    const formatted = isTime ? formatTime(absChange) : absChange.toFixed(1);\r\n    return change >= 0 ? `+${formatted}` : `-${formatted}`;\r\n  };\r\n\r\n  const getTrendIcon = (trend: 'up' | 'down' | 'stable', size: string = 'w-4 h-4') => {\r\n    switch (trend) {\r\n      case 'up':\r\n        return <ArrowUp className={`${size} text-green-500`} />;\r\n      case 'down':\r\n        return <ArrowDown className={`${size} text-red-500`} />;\r\n      default:\r\n        return <Minus className={`${size} text-gray-500`} />;\r\n    }\r\n  };\r\n\r\n  const getTrendColor = (trend: 'up' | 'down' | 'stable') => {\r\n    switch (trend) {\r\n      case 'up':\r\n        return 'text-green-600 dark:text-green-400';\r\n      case 'down':\r\n        return 'text-red-600 dark:text-red-400';\r\n      default:\r\n        return 'text-gray-600 dark:text-gray-400';\r\n    }\r\n  };\r\n\r\n  const getChangeColor = (change: number) => {\r\n    if (change > 0) return 'text-green-600 dark:text-green-400';\r\n    if (change < 0) return 'text-red-600 dark:text-red-400';\r\n    return 'text-gray-600 dark:text-gray-400';\r\n  };\r\n\r\n  const CustomTooltip = ({ active, payload, label }: any) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div className=\"bg-white dark:bg-gray-800 p-3 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg\">\r\n          <p className=\"font-medium text-gray-900 dark:text-gray-100\">{label}</p>\r\n          {payload.map((entry: any, index: number) => (\r\n            <p key={index} className=\"text-sm\" style={{ color: entry.color }}>\r\n              {entry.name}: {\r\n                entry.dataKey.includes('Time') || entry.dataKey.includes('focusTime') \r\n                  ? formatTime(entry.value)\r\n                  : entry.value\r\n              }\r\n            </p>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <TrendingUp className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Comparative Analysis\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <TrendingUp className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Comparative Analysis\r\n          </h3>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p className=\"text-red-600 dark:text-red-400 mb-2\">Error loading comparison</p>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <TrendingUp className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Comparative Analysis\r\n          </h3>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p className=\"text-gray-500 dark:text-gray-400 mb-2\">No comparison data available</p>\r\n          <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n            Need at least 2 weeks of data to show comparisons\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentComparison = comparisonType === 'week' ? data.weekOverWeek : data.monthOverMonth;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header with Controls */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <TrendingUp className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n                Comparative Analysis\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                Track your progress with period-over-period comparisons\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex bg-gray-100 dark:bg-gray-700 rounded-lg p-1\">\r\n            <button\r\n              onClick={() => onComparisonTypeChange('week')}\r\n              className={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${\r\n                comparisonType === 'week'\r\n                  ? 'bg-white dark:bg-gray-600 text-gray-900 dark:text-gray-100 shadow-sm'\r\n                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100'\r\n              }`}\r\n            >\r\n              Week over Week\r\n            </button>\r\n            <button\r\n              onClick={() => onComparisonTypeChange('month')}\r\n              className={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${\r\n                comparisonType === 'month'\r\n                  ? 'bg-white dark:bg-gray-600 text-gray-900 dark:text-gray-100 shadow-sm'\r\n                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100'\r\n              }`}\r\n            >\r\n              Month over Month\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Overall Trend Summary */}\r\n        {data.trendAnalysis && (\r\n          <div className=\"mb-6 p-4 bg-gradient-to-r from-indigo-50 to-purple-50 dark:from-indigo-900/20 dark:to-purple-900/20 rounded-lg border border-indigo-200 dark:border-indigo-800\">\r\n            <div className=\"flex items-center justify-between mb-3\">\r\n              <h4 className=\"text-md font-semibold text-indigo-900 dark:text-indigo-100\">\r\n                Overall Trend: {data.trendAnalysis.overallTrend.charAt(0).toUpperCase() + data.trendAnalysis.overallTrend.slice(1)}\r\n              </h4>\r\n              <div className=\"flex items-center space-x-2\">\r\n                {getTrendIcon(\r\n                  data.trendAnalysis.overallTrend === 'improving' ? 'up' : \r\n                  data.trendAnalysis.overallTrend === 'declining' ? 'down' : 'stable',\r\n                  'w-5 h-5'\r\n                )}\r\n                <span className=\"text-sm font-medium text-indigo-700 dark:text-indigo-300\">\r\n                  Consistency: {data.trendAnalysis.consistencyRating.toFixed(0)}/100\r\n                </span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-3\">\r\n              <div>\r\n                <p className=\"text-sm text-indigo-800 dark:text-indigo-200\">\r\n                  <span className=\"font-medium\">Strongest Improvement:</span> {data.trendAnalysis.strongestImprovement}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-indigo-800 dark:text-indigo-200\">\r\n                  <span className=\"font-medium\">Biggest Decline:</span> {data.trendAnalysis.biggestDecline}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            {data.trendAnalysis.recommendations.length > 0 && (\r\n              <div>\r\n                <p className=\"text-sm font-medium text-indigo-900 dark:text-indigo-100 mb-2\">\r\n                  Recommendations:\r\n                </p>\r\n                <ul className=\"space-y-1\">\r\n                  {data.trendAnalysis.recommendations.map((rec, index) => (\r\n                    <li key={index} className=\"text-sm text-indigo-800 dark:text-indigo-200 flex items-start space-x-2\">\r\n                      <span className=\"text-indigo-600 dark:text-indigo-400 mt-1\">•</span>\r\n                      <span>{rec}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Comparison Chart */}\r\n        <div className=\"h-64\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <BarChart data={data.periodComparison}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\r\n              <XAxis \r\n                dataKey=\"period\"\r\n                tick={{ fontSize: 12 }}\r\n              />\r\n              <YAxis \r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={(value) => \r\n                  selectedMetric === 'focusTime' ? formatTime(value) : value\r\n                }\r\n              />\r\n              <Tooltip content={<CustomTooltip />} />\r\n              <Legend />\r\n              <Bar \r\n                dataKey={selectedMetric} \r\n                fill=\"#3B82F6\" \r\n                radius={[4, 4, 0, 0]}\r\n                name={selectedMetric === 'focusTime' ? 'Focus Time' : \r\n                      selectedMetric === 'sessions' ? 'Sessions' :\r\n                      selectedMetric === 'averageQuality' ? 'Avg Quality' :\r\n                      selectedMetric === 'goalsAchieved' ? 'Goals Achieved' :\r\n                      'Focus Score'}\r\n              />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        {/* Metric Selector */}\r\n        <div className=\"mt-4 flex flex-wrap gap-2\">\r\n          {[\r\n            { key: 'focusTime', label: 'Focus Time' },\r\n            { key: 'sessions', label: 'Sessions' },\r\n            { key: 'averageQuality', label: 'Quality' },\r\n            { key: 'goalsAchieved', label: 'Goals' },\r\n            { key: 'focusScore', label: 'Score' }\r\n          ].map((metric) => (\r\n            <button\r\n              key={metric.key}\r\n              onClick={() => setSelectedMetric(metric.key)}\r\n              className={`px-3 py-1 text-xs font-medium rounded-full transition-colors ${\r\n                selectedMetric === metric.key\r\n                  ? 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200'\r\n                  : 'bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n              }`}\r\n            >\r\n              {metric.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Detailed Comparison Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {currentComparison.map((item, index) => (\r\n          <div key={index} className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 capitalize\">\r\n                {item.metric.replace(/([A-Z])/g, ' $1').trim()}\r\n              </h4>\r\n              {getTrendIcon(item.trend)}\r\n            </div>\r\n\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                  Current {comparisonType}:\r\n                </span>\r\n                <span className=\"text-lg font-bold text-gray-900 dark:text-gray-100\">\r\n                  {item.metric.toLowerCase().includes('time') \r\n                    ? formatTime(item.currentWeek || item.currentMonth)\r\n                    : (item.currentWeek || item.currentMonth).toFixed(1)\r\n                  }\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                  Previous {comparisonType}:\r\n                </span>\r\n                <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                  {item.metric.toLowerCase().includes('time') \r\n                    ? formatTime(item.previousWeek || item.previousMonth)\r\n                    : (item.previousWeek || item.previousMonth).toFixed(1)\r\n                  }\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"pt-2 border-t border-gray-200 dark:border-gray-700\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    Change:\r\n                  </span>\r\n                  <div className=\"text-right\">\r\n                    <span className={`text-sm font-bold ${getChangeColor(item.change)}`}>\r\n                      {formatChange(item.change, item.metric.toLowerCase().includes('time'))}\r\n                    </span>\r\n                    <span className={`text-xs ml-2 ${getChangeColor(item.changePercentage)}`}>\r\n                      ({item.changePercentage >= 0 ? '+' : ''}{item.changePercentage.toFixed(1)}%)\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Period Comparison Timeline */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4\">\r\n          {comparisonType === 'week' ? 'Weekly' : 'Monthly'} Progress Timeline\r\n        </h4>\r\n        \r\n        <div className=\"h-64\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <AreaChart data={data.periodComparison}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\r\n              <XAxis \r\n                dataKey=\"period\"\r\n                tick={{ fontSize: 12 }}\r\n              />\r\n              <YAxis \r\n                tick={{ fontSize: 12 }}\r\n                tickFormatter={(value) => formatTime(value)}\r\n              />\r\n              <Tooltip content={<CustomTooltip />} />\r\n              <Area\r\n                type=\"monotone\"\r\n                dataKey=\"focusTime\"\r\n                stackId=\"1\"\r\n                stroke=\"#3B82F6\"\r\n                fill=\"#3B82F6\"\r\n                fillOpacity={0.6}\r\n                name=\"Focus Time\"\r\n              />\r\n            </AreaChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComparativeAnalysis;","import React, { useState } from 'react';\r\nimport { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\r\nimport { Target, Award, TrendingUp, Calendar, Clock, Star, CheckCircle, AlertTriangle } from 'lucide-react';\r\n\r\ninterface GoalProgressData {\r\n  categoryGoals: Array<{\r\n    categoryId: number;\r\n    categoryName: string;\r\n    categoryColor: string;\r\n    weeklyGoal: number;\r\n    currentProgress: number;\r\n    percentage: number;\r\n    isCompleted: boolean;\r\n    streak: number;\r\n    bestWeek: number;\r\n    averageWeekly: number;\r\n    trend: 'up' | 'down' | 'stable';\r\n  }>;\r\n  milestones: Array<{\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    targetValue: number;\r\n    currentValue: number;\r\n    unit: string;\r\n    category: string;\r\n    isCompleted: boolean;\r\n    completedDate?: string;\r\n    daysRemaining?: number;\r\n    icon: string;\r\n  }>;\r\n  weeklyProgress: Array<{\r\n    week: string;\r\n    totalGoals: number;\r\n    completedGoals: number;\r\n    completionRate: number;\r\n    totalTime: number;\r\n  }>;\r\n  achievements: Array<{\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    earnedDate: string;\r\n    category: string;\r\n    icon: string;\r\n    rarity: 'common' | 'rare' | 'epic' | 'legendary';\r\n  }>;\r\n}\r\n\r\ninterface GoalProgressVisualizationProps {\r\n  data: GoalProgressData | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst GoalProgressVisualization: React.FC<GoalProgressVisualizationProps> = ({\r\n  data,\r\n  isLoading,\r\n  error\r\n}) => {\r\n  const [activeTab, setActiveTab] = useState<'goals' | 'milestones' | 'achievements'>('goals');\r\n\r\n  const formatTime = (minutes: number): string => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    if (hours > 0) {\r\n      return `${hours}h ${mins}m`;\r\n    }\r\n    return `${mins}m`;\r\n  };\r\n\r\n  const getTrendIcon = (trend: 'up' | 'down' | 'stable') => {\r\n    switch (trend) {\r\n      case 'up':\r\n        return <TrendingUp className=\"w-4 h-4 text-green-500\" />;\r\n      case 'down':\r\n        return <TrendingUp className=\"w-4 h-4 text-red-500 rotate-180\" />;\r\n      default:\r\n        return <TrendingUp className=\"w-4 h-4 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getRarityColor = (rarity: string) => {\r\n    switch (rarity) {\r\n      case 'legendary':\r\n        return 'from-yellow-400 to-orange-500';\r\n      case 'epic':\r\n        return 'from-purple-400 to-pink-500';\r\n      case 'rare':\r\n        return 'from-blue-400 to-indigo-500';\r\n      default:\r\n        return 'from-gray-400 to-gray-500';\r\n    }\r\n  };\r\n\r\n  const getRarityBorder = (rarity: string) => {\r\n    switch (rarity) {\r\n      case 'legendary':\r\n        return 'border-yellow-400';\r\n      case 'epic':\r\n        return 'border-purple-400';\r\n      case 'rare':\r\n        return 'border-blue-400';\r\n      default:\r\n        return 'border-gray-400';\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Target className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Goal Progress & Milestones\r\n          </h3>\r\n        </div>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Target className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Goal Progress & Milestones\r\n          </h3>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p className=\"text-red-600 dark:text-red-400 mb-2\">Error loading goal progress</p>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!data) {\r\n    return (\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center space-x-3 mb-4\">\r\n          <Target className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Goal Progress & Milestones\r\n          </h3>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <p className=\"text-gray-500 dark:text-gray-400 mb-2\">No goal data available</p>\r\n          <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n            Set up weekly goals for your categories to track progress\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header with Tabs */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <Target className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" />\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n                Goal Progress & Milestones\r\n              </h3>\r\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                Track your progress toward weekly goals and long-term milestones\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex bg-gray-100 dark:bg-gray-700 rounded-lg p-1\">\r\n            <button\r\n              onClick={() => setActiveTab('goals')}\r\n              className={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${\r\n                activeTab === 'goals'\r\n                  ? 'bg-white dark:bg-gray-600 text-gray-900 dark:text-gray-100 shadow-sm'\r\n                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100'\r\n              }`}\r\n            >\r\n              Goals\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('milestones')}\r\n              className={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${\r\n                activeTab === 'milestones'\r\n                  ? 'bg-white dark:bg-gray-600 text-gray-900 dark:text-gray-100 shadow-sm'\r\n                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100'\r\n              }`}\r\n            >\r\n              Milestones\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('achievements')}\r\n              className={`px-3 py-1 text-sm font-medium rounded-md transition-colors ${\r\n                activeTab === 'achievements'\r\n                  ? 'bg-white dark:bg-gray-600 text-gray-900 dark:text-gray-100 shadow-sm'\r\n                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100'\r\n              }`}\r\n            >\r\n              Achievements\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Weekly Progress Chart */}\r\n        {activeTab === 'goals' && (\r\n          <div className=\"h-64 mb-6\">\r\n            <h4 className=\"text-md font-semibold text-gray-900 dark:text-gray-100 mb-3\">\r\n              Weekly Goal Completion Rate\r\n            </h4>\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <LineChart data={data.weeklyProgress}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-30\" />\r\n                <XAxis \r\n                  dataKey=\"week\"\r\n                  tick={{ fontSize: 12 }}\r\n                />\r\n                <YAxis \r\n                  tick={{ fontSize: 12 }}\r\n                  domain={[0, 100]}\r\n                  tickFormatter={(value) => `${value}%`}\r\n                />\r\n                <Tooltip \r\n                  formatter={(value: number, name: string) => {\r\n                    if (name === 'completionRate') return [`${value.toFixed(1)}%`, 'Completion Rate'];\r\n                    if (name === 'totalTime') return [formatTime(value), 'Total Time'];\r\n                    return [value, name];\r\n                  }}\r\n                />\r\n                <Legend />\r\n                <Line \r\n                  type=\"monotone\" \r\n                  dataKey=\"completionRate\" \r\n                  stroke=\"#10B981\" \r\n                  strokeWidth={3}\r\n                  dot={{ r: 6 }}\r\n                  name=\"Completion Rate\"\r\n                />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Goals Tab */}\r\n      {activeTab === 'goals' && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {data.categoryGoals.map((goal, index) => (\r\n            <div key={index} className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <div \r\n                    className=\"w-4 h-4 rounded-full\"\r\n                    style={{ backgroundColor: goal.categoryColor }}\r\n                  />\r\n                  <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n                    {goal.categoryName}\r\n                  </h4>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  {getTrendIcon(goal.trend)}\r\n                  {goal.isCompleted && (\r\n                    <CheckCircle className=\"w-5 h-5 text-green-500\" />\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Progress Bar */}\r\n              <div className=\"mb-4\">\r\n                <div className=\"flex justify-between items-center mb-2\">\r\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    Progress\r\n                  </span>\r\n                  <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                    {formatTime(goal.currentProgress)} / {formatTime(goal.weeklyGoal)}\r\n                  </span>\r\n                </div>\r\n                <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-3\">\r\n                  <div\r\n                    className={`h-3 rounded-full transition-all duration-300 ${\r\n                      goal.isCompleted \r\n                        ? 'bg-green-500' \r\n                        : goal.percentage > 75 \r\n                          ? 'bg-yellow-500' \r\n                          : 'bg-blue-500'\r\n                    }`}\r\n                    style={{ width: `${Math.min(goal.percentage, 100)}%` }}\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-between items-center mt-1\">\r\n                  <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                    {goal.percentage.toFixed(1)}% complete\r\n                  </span>\r\n                  {goal.isCompleted && (\r\n                    <span className=\"text-xs text-green-600 dark:text-green-400 font-medium\">\r\n                      ✓ Goal achieved!\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Goal Stats */}\r\n              <div className=\"space-y-2 text-sm\">\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-gray-600 dark:text-gray-400\">Streak:</span>\r\n                  <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                    {goal.streak} weeks\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-gray-600 dark:text-gray-400\">Best Week:</span>\r\n                  <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                    {formatTime(goal.bestWeek)}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <span className=\"text-gray-600 dark:text-gray-400\">Average:</span>\r\n                  <span className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                    {formatTime(goal.averageWeekly)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Milestones Tab */}\r\n      {activeTab === 'milestones' && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {data.milestones.map((milestone, index) => (\r\n            <div key={index} className={`bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm border-l-4 ${\r\n              milestone.isCompleted ? 'border-green-500' : 'border-blue-500'\r\n            }`}>\r\n              <div className=\"flex items-start justify-between mb-4\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                  <div className={`p-2 rounded-lg ${\r\n                    milestone.isCompleted \r\n                      ? 'bg-green-100 dark:bg-green-900/20' \r\n                      : 'bg-blue-100 dark:bg-blue-900/20'\r\n                  }`}>\r\n                    {milestone.isCompleted ? (\r\n                      <CheckCircle className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n                    ) : (\r\n                      <Target className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n                      {milestone.title}\r\n                    </h4>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                      {milestone.description}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                {!milestone.isCompleted && milestone.daysRemaining && (\r\n                  <div className=\"text-right\">\r\n                    <span className=\"text-sm font-medium text-orange-600 dark:text-orange-400\">\r\n                      {milestone.daysRemaining} days left\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Progress */}\r\n              <div className=\"mb-4\">\r\n                <div className=\"flex justify-between items-center mb-2\">\r\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    Progress\r\n                  </span>\r\n                  <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                    {milestone.currentValue} / {milestone.targetValue} {milestone.unit}\r\n                  </span>\r\n                </div>\r\n                <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\r\n                  <div\r\n                    className={`h-2 rounded-full transition-all duration-300 ${\r\n                      milestone.isCompleted ? 'bg-green-500' : 'bg-blue-500'\r\n                    }`}\r\n                    style={{ \r\n                      width: `${Math.min((milestone.currentValue / milestone.targetValue) * 100, 100)}%` \r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {milestone.isCompleted && milestone.completedDate && (\r\n                <div className=\"bg-green-50 dark:bg-green-900/20 rounded-lg p-3\">\r\n                  <p className=\"text-sm text-green-800 dark:text-green-200\">\r\n                    🎉 Completed on {new Date(milestone.completedDate).toLocaleDateString()}\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Achievements Tab */}\r\n      {activeTab === 'achievements' && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {data.achievements.map((achievement, index) => (\r\n            <div key={index} className={`bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm border-2 ${getRarityBorder(achievement.rarity)}`}>\r\n              <div className=\"flex items-center space-x-3 mb-4\">\r\n                <div className={`p-3 rounded-lg bg-gradient-to-r ${getRarityColor(achievement.rarity)}`}>\r\n                  <Award className=\"w-6 h-6 text-white\" />\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n                    {achievement.title}\r\n                  </h4>\r\n                  <span className={`text-xs px-2 py-1 rounded-full font-medium capitalize ${\r\n                    achievement.rarity === 'legendary' ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-300' :\r\n                    achievement.rarity === 'epic' ? 'bg-purple-100 text-purple-800 dark:bg-purple-900/20 dark:text-purple-300' :\r\n                    achievement.rarity === 'rare' ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-300' :\r\n                    'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'\r\n                  }`}>\r\n                    {achievement.rarity}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-3\">\r\n                {achievement.description}\r\n              </p>\r\n\r\n              <div className=\"flex items-center justify-between text-sm\">\r\n                <span className=\"text-gray-500 dark:text-gray-400\">\r\n                  {achievement.category}\r\n                </span>\r\n                <span className=\"text-gray-500 dark:text-gray-400\">\r\n                  {new Date(achievement.earnedDate).toLocaleDateString()}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoalProgressVisualization;","import React, { useEffect } from 'react';\r\nimport { BarChart3, TrendingUp, Target, Calendar } from 'lucide-react';\r\nimport useAnalyticsStore from '../stores/analyticsStore';\r\nimport TimeDistributionChart from '../components/Analytics/TimeDistributionChart';\r\nimport DateRangePicker from '../components/Analytics/DateRangePicker';\r\nimport ExportButton from '../components/Analytics/ExportButton';\r\nimport ProductivityHeatmap from '../components/Analytics/ProductivityHeatmap';\r\nimport SessionLengthAnalysis from '../components/Analytics/SessionLengthAnalysis';\r\nimport SessionSuggestions from '../components/Analytics/SessionSuggestions';\r\nimport WeeklyMonthlyReports from '../components/Analytics/WeeklyMonthlyReports';\r\nimport FocusQualityMetrics from '../components/Analytics/FocusQualityMetrics';\r\nimport ComparativeAnalysis from '../components/Analytics/ComparativeAnalysis';\r\nimport GoalProgressVisualization from '../components/Analytics/GoalProgressVisualization';\r\n\r\nconst Analytics: React.FC = () => {\r\n  const {\r\n    timeDistribution,\r\n    totalTime,\r\n    timeDistributionTrends,\r\n    productivityPatterns,\r\n    sessionLengthAnalysis,\r\n    productivityHeatmap,\r\n    sessionSuggestions,\r\n    goalProgress,\r\n    weeklyMonthlyReports,\r\n    focusQualityMetrics,\r\n    comparativeAnalysis,\r\n    startDate,\r\n    endDate,\r\n    isLoadingTimeDistribution,\r\n    isLoadingProductivityPatterns,\r\n    isLoadingSessionLengthAnalysis,\r\n    isLoadingProductivityHeatmap,\r\n    isLoadingSessionSuggestions,\r\n    isLoadingGoalProgress,\r\n    isLoadingReports,\r\n    isLoadingFocusQuality,\r\n    isLoadingComparative,\r\n    timeDistributionError,\r\n    productivityPatternsError,\r\n    sessionLengthAnalysisError,\r\n    productivityHeatmapError,\r\n    sessionSuggestionsError,\r\n    goalProgressError,\r\n    reportsError,\r\n    focusQualityError,\r\n    comparativeError,\r\n    setDateRange,\r\n    fetchAllAnalytics,\r\n    exportAnalyticsData,\r\n    fetchComparativeAnalysis,\r\n    clearErrors\r\n  } = useAnalyticsStore();\r\n\r\n  useEffect(() => {\r\n    // Clear any previous errors and fetch initial data\r\n    clearErrors();\r\n    fetchAllAnalytics();\r\n  }, [clearErrors, fetchAllAnalytics]);\r\n\r\n  const handleDateRangeChange = (newStartDate: string, newEndDate: string) => {\r\n    setDateRange(newStartDate, newEndDate);\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    clearErrors();\r\n    fetchAllAnalytics();\r\n  };\r\n\r\n  const formatTime = (minutes: number): string => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    if (hours > 0) {\r\n      return `${hours}h ${mins}m`;\r\n    }\r\n    return `${mins}m`;\r\n  };\r\n\r\n  const isAnyLoading = isLoadingTimeDistribution || isLoadingProductivityPatterns || isLoadingSessionLengthAnalysis || isLoadingProductivityHeatmap || isLoadingSessionSuggestions || isLoadingGoalProgress || isLoadingReports || isLoadingFocusQuality || isLoadingComparative;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center space-x-3 mb-2\">\r\n            <BarChart3 className=\"w-8 h-8 text-blue-600 dark:text-blue-400\" />\r\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-gray-100\">\r\n              Analytics Dashboard\r\n            </h1>\r\n          </div>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">\r\n            Analyze your productivity patterns and track your progress over time\r\n          </p>\r\n        </div>\r\n\r\n        {/* Date Range Picker */}\r\n        <div className=\"mb-6\">\r\n          <DateRangePicker\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n            onDateRangeChange={handleDateRangeChange}\r\n            onRefresh={handleRefresh}\r\n            isLoading={isAnyLoading}\r\n          />\r\n        </div>\r\n\r\n        {/* Quick Stats */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\r\n                <Calendar className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Total Focus Time</p>\r\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n                  {formatTime(totalTime)}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"p-2 bg-green-100 dark:bg-green-900 rounded-lg\">\r\n                <TrendingUp className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Active Categories</p>\r\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n                  {timeDistribution.length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"p-2 bg-purple-100 dark:bg-purple-900 rounded-lg\">\r\n                <Target className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\r\n              </div>\r\n              <div>\r\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Goals Completed</p>\r\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">\r\n                  {goalProgress.filter(g => g.isCompleted).length}/{goalProgress.length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Analytics Content */}\r\n        <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-6 mb-8\">\r\n          {/* Time Distribution Chart - Takes up 2 columns */}\r\n          <div className=\"xl:col-span-2\">\r\n            <TimeDistributionChart\r\n              data={timeDistribution}\r\n              totalTime={totalTime}\r\n              isLoading={isLoadingTimeDistribution}\r\n              error={timeDistributionError}\r\n              trendData={timeDistributionTrends}\r\n            />\r\n          </div>\r\n\r\n          {/* Goal Progress */}\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4\">\r\n              Goal Progress\r\n            </h3>\r\n            \r\n            {isLoadingGoalProgress ? (\r\n              <div className=\"flex items-center justify-center h-32\">\r\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n              </div>\r\n            ) : goalProgressError ? (\r\n              <div className=\"text-center py-8\">\r\n                <p className=\"text-red-600 dark:text-red-400 mb-2\">Error loading goals</p>\r\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">{goalProgressError}</p>\r\n              </div>\r\n            ) : goalProgress.length === 0 ? (\r\n              <div className=\"text-center py-8\">\r\n                <p className=\"text-gray-500 dark:text-gray-400 mb-2\">No goals set</p>\r\n                <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n                  Set weekly goals for your categories to track progress\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                {goalProgress.map((goal) => (\r\n                  <div key={goal.categoryId} className=\"space-y-2\">\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-sm font-medium text-gray-900 dark:text-gray-100\">\r\n                        {goal.categoryName}\r\n                      </span>\r\n                      <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                        {formatTime(goal.currentProgress)} / {formatTime(goal.weeklyGoal)}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\r\n                      <div\r\n                        className={`h-2 rounded-full transition-all duration-300 ${\r\n                          goal.isCompleted \r\n                            ? 'bg-green-500' \r\n                            : goal.percentage > 75 \r\n                              ? 'bg-yellow-500' \r\n                              : 'bg-blue-500'\r\n                        }`}\r\n                        style={{ width: `${Math.min(goal.percentage, 100)}%` }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                        {goal.percentage.toFixed(1)}% complete\r\n                      </span>\r\n                      {goal.isCompleted && (\r\n                        <span className=\"text-xs text-green-600 dark:text-green-400 font-medium\">\r\n                          ✓ Goal achieved!\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Productivity Pattern Analysis Section */}\r\n        <div className=\"grid grid-cols-1 xl:grid-cols-2 gap-6 mb-8\">\r\n          {/* Session Length Analysis */}\r\n          <SessionLengthAnalysis\r\n            data={sessionLengthAnalysis}\r\n            isLoading={isLoadingSessionLengthAnalysis}\r\n            error={sessionLengthAnalysisError}\r\n          />\r\n\r\n          {/* Session Suggestions */}\r\n          <SessionSuggestions\r\n            data={sessionSuggestions}\r\n            isLoading={isLoadingSessionSuggestions}\r\n            error={sessionSuggestionsError}\r\n          />\r\n        </div>\r\n\r\n        {/* Productivity Heatmap - Full Width */}\r\n        <div className=\"mb-8\">\r\n          <ProductivityHeatmap\r\n            data={productivityHeatmap}\r\n            isLoading={isLoadingProductivityHeatmap}\r\n            error={productivityHeatmapError}\r\n          />\r\n        </div>\r\n\r\n        {/* Weekly/Monthly Reports */}\r\n        <div className=\"mb-8\">\r\n          <WeeklyMonthlyReports\r\n            data={weeklyMonthlyReports}\r\n            isLoading={isLoadingReports}\r\n            error={reportsError}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n          />\r\n        </div>\r\n\r\n        {/* Focus Quality Metrics */}\r\n        <div className=\"mb-8\">\r\n          <FocusQualityMetrics\r\n            data={focusQualityMetrics}\r\n            isLoading={isLoadingFocusQuality}\r\n            error={focusQualityError}\r\n          />\r\n        </div>\r\n\r\n        {/* Comparative Analysis */}\r\n        <div className=\"mb-8\">\r\n          <ComparativeAnalysis\r\n            data={comparativeAnalysis}\r\n            isLoading={isLoadingComparative}\r\n            error={comparativeError}\r\n            comparisonType=\"week\"\r\n            onComparisonTypeChange={(type) => fetchComparativeAnalysis(type)}\r\n          />\r\n        </div>\r\n\r\n        {/* Goal Progress Visualization */}\r\n        <div className=\"mb-8\">\r\n          <GoalProgressVisualization\r\n            data={null} // TODO: Add to store\r\n            isLoading={false}\r\n            error={null}\r\n          />\r\n        </div>\r\n\r\n        {/* Export Section */}\r\n        <div className=\"mt-8\">\r\n          <ExportButton\r\n            onExport={exportAnalyticsData}\r\n            startDate={startDate}\r\n            endDate={endDate}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Analytics;"],"names":["useAnalyticsStore","create","set","get","timeDistribution","totalTime","timeDistributionTrends","productivityPatterns","sessionLengthAnalysis","productivityHeatmap","sessionSuggestions","goalProgress","weeklyMonthlyReports","focusQualityMetrics","comparativeAnalysis","startDate","Date","now","toISOString","split","endDate","isLoadingTimeDistribution","isLoadingProductivityPatterns","isLoadingSessionLengthAnalysis","isLoadingProductivityHeatmap","isLoadingSessionSuggestions","isLoadingGoalProgress","isLoadingReports","isLoadingFocusQuality","isLoadingComparative","timeDistributionError","productivityPatternsError","sessionLengthAnalysisError","productivityHeatmapError","sessionSuggestionsError","goalProgressError","reportsError","focusQualityError","comparativeError","setDateRange","fetchTimeDistribution","async","response","fetch","ok","status","result","json","success","data","error","message","Error","fetchProductivityPatterns","patterns","fetchGoalProgress","fetchSessionLengthAnalysis","fetchProductivityHeatmap","heatmapData","fetchSessionSuggestions","getHours","getDay","fetchAllAnalytics","fetchTimeDistributionTrends","fetchReports","fetchFocusQualityMetrics","fetchComparativeAnalysis","Promise","all","trends","exportAnalyticsData","format","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","clearErrors","type","TimeDistributionChart","isLoading","trendData","chartType","setChartType","useState","formatTime","minutes","hours","Math","floor","mins","CustomTooltip","active","payload","label","length","jsxs","className","children","jsx","categoryName","percentage","toFixed","onClick","title","PieChartIcon","BarChart3","Fragment","TrendingUp","Activity","ResponsiveContainer","width","height","PieChart","Pie","cx","cy","labelLine","outerRadius","fill","dataKey","map","entry","index","Cell","color","Tooltip","content","BarChart","CartesianGrid","strokeDasharray","XAxis","tick","fontSize","angle","textAnchor","YAxis","tickFormatter","value","Bar","radius","LineChart","toLocaleDateString","month","day","labelFormatter","formatter","name","Legend","category","Line","stroke","strokeWidth","dot","r","connectNulls","AreaChart","Area","stackId","fillOpacity","item","style","backgroundColor","DateRangePicker","onDateRangeChange","onRefresh","validationError","setValidationError","showPresets","setShowPresets","validateDateRange","start","end","today","setHours","diffTime","abs","getTime","ceil","Calendar","onChange","e","newStartDate","target","max","newEndDate","min","ChevronDown","disabled","AlertCircle","CheckCircle","days","preset","setDate","getDate","startStr","endStr","setPresetRange","quarter","getMonth","setMonth","setCustomPreset","diffDays","ExportButton","onExport","isExporting","setIsExporting","exportStatus","setExportStatus","showFormats","setShowFormats","selectedFormat","setSelectedFormat","formatOptions","description","icon","FileJson","extension","FileSpreadsheet","FileText","toUpperCase","IconComponent","setTimeout","handleExport","baseClass","getButtonClass","Download","ProductivityHeatmap","dayNames","Array","from","_","i","dataMap","Map","forEach","key","dayOfWeek","hour","maxFocusScore","d","focusScore","maxSessionCount","sessionCount","getTooltipContent","averageFocusTime","dayName","dayIndex","intensity","getIntensity","colorClass","getColor","Clock","filter","sort","a","b","slice","join","bestDay","dayData","avgScore","reduce","sum","score","SessionLengthAnalysis","round","count","averageQuality","sessionLengthDistribution","averageSessionLength","Target","optimalSessionLength","position","quality","recommendations","Lightbulb","recommendation","SessionSuggestions","onApplySuggestion","getConfidenceColor","confidence","Star","suggestedDuration","reason","ArrowRight","alternativeTimes","time","WeeklyMonthlyReports","reportType","setReportType","showTrends","setShowTrends","formatDate","dateStr","getTrendIcon","trend","getTrendColor","weeklyReports","monthlyReports","currentReports","trendAnalysis","focusTimeTrend","sessionQualityTrend","Award","consistencyScore","rec","report","weekStart","year","weekEnd","totalFocusTime","sessionsCompleted","goalsAchieved","totalGoals","topCategory","FocusQualityMetrics","getQualityColor","rating","getQualityLabel","Brain","deepWorkPercentage","averageQualityRating","focusMetrics","interruptionAnalysis","averageInterruptions","qualityTrends","domain","qualityDistribution","sessionTypeBreakdown","props","replace","qualityPredictors","predictor","interruptionImpact","commonInterruptionTimes","ComparativeAnalysis","comparisonType","onComparisonTypeChange","selectedMetric","setSelectedMetric","formatChange","change","isTime","absChange","formatted","size","ArrowUp","ArrowDown","Minus","getChangeColor","includes","currentComparison","weekOverWeek","monthOverMonth","overallTrend","charAt","consistencyRating","strongestImprovement","biggestDecline","periodComparison","metric","trim","toLowerCase","currentWeek","currentMonth","previousWeek","previousMonth","changePercentage","GoalProgressVisualization","activeTab","setActiveTab","getRarityColor","rarity","getRarityBorder","weeklyProgress","categoryGoals","goal","categoryColor","isCompleted","currentProgress","weeklyGoal","streak","bestWeek","averageWeekly","milestones","milestone","daysRemaining","currentValue","targetValue","unit","completedDate","achievements","achievement","earnedDate","Analytics","useEffect","isAnyLoading","g","categoryId"],"mappings":"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"}