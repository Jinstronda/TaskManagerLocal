{"version":3,"mappings":"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","names":["useOnboardingStore","create","persist","set","get","isCompleted","currentStep","totalSteps","preferences","primaryGoal","workStyle","preferredSessionLength","dailyGoal","weeklyGoal","categories","notifications","sessionComplete","breakReminders","dailyReview","setCurrentStep","step","Math","max","min","updatePreferences","newPreferences","state","completeOnboarding","resetOnboarding","skipOnboarding","name","version","WelcomeStep","onNext","setName","useState","features","icon","Timer","title","description","Target","TrendingUp","BarChart3","jsxs","className","children","jsx","map","feature","index","Icon","type","value","onChange","e","target","placeholder","maxLength","onClick","trim","GoalSettingStep","onPrevious","setPrimaryGoal","setDailyGoal","setWeeklyGoal","goals","id","color","Clock","Calendar","formatTime","minutes","hours","floor","mins","goal","isSelected","parseInt","WorkStyleStep","setWorkStyle","setPreferredSessionLength","workStyles","recommended","Zap","style","label","length","find","s","CategorySetupStep","setCategories","availableColors","availableIcons","BookOpen","Code","Briefcase","Heart","updateCategory","updates","cat","i","category","IconComponent","backgroundColor","slice","filter","_","removeCategory","X","newCategory","Plus","c","reduce","sum","validCategories","disabled","NotificationPreferencesStep","setNotifications","notificationOptions","Bell","enabledCount","Object","values","Boolean","option","isEnabled","checked","handleToggle","key","prev","BellOff","CompletionStep","onComplete","enabledNotifications","entries","enabled","CheckCircle","getPrimaryGoalLabel","getWorkStyleLabel","Folder","join","ProgressIndicator","steps","Check","OnboardingFlow","onSkip","useEffect","handleNext","handlePrevious","getSystemTheme","window","matchMedia","matches","applyTheme","isDark","document","documentElement","classList","add","remove","useThemeStore","mode","fontSize","compactMode","showSecondsInTimer","dashboardLayout","setMode","setFontSize","root","setCompactMode","setShowSecondsInTimer","setDashboardLayout","toggleTheme","newMode","initializeTheme","mediaQuery","handleChange","addEventListener","removeEventListener","partialize","Layout","themeStore","cleanup","useTheme","navItems","to","Home","CheckSquare","Flame","Settings","handleOnboardingComplete","Fragment","NavLink","isActive","Dashboard","lazy","import","__VITE_PRELOAD__","Tasks","Analytics","Habits","Categories","__vitePreload","then","module","default","PageLoader","App","Router","Suspense","fallback","Routes","Route","path","element","Toaster","position","toastOptions","duration","background","boxShadow","SingleInstanceClient","static","channel","instanceId","heartbeatInterval","constructor","this","Date","now","random","BroadcastChannel","setupMessageHandling","getInstance","instance","checkAndActivate","activeInstance","localStorage","getItem","lastHeartbeat","showDuplicateTabWarning","becomeActiveInstance","setItem","updateHeartbeat","setInterval","postMessage","timestamp","toString","event","data","deactivate","focus","Notification","permission","body","visibilityState","overlay","createElement","cssText","innerHTML","appendChild","querySelector","close","clearInterval","removeItem","isActiveInstance","singleInstanceClient","API_BASE","originalFetch","fetch","renderApp","ReactDOM","createRoot","getElementById","render","React","StrictMode","input","init","startsWith","Request","url","rewritten","URL","pathname","catch"],"ignoreList":[],"sources":["../../src/stores/onboardingStore.ts","../../src/components/Onboarding/WelcomeStep.tsx","../../src/components/Onboarding/GoalSettingStep.tsx","../../src/components/Onboarding/WorkStyleStep.tsx","../../src/components/Onboarding/CategorySetupStep.tsx","../../src/components/Onboarding/NotificationPreferencesStep.tsx","../../src/components/Onboarding/CompletionStep.tsx","../../src/components/Onboarding/ProgressIndicator.tsx","../../src/components/Onboarding/OnboardingFlow.tsx","../../src/stores/themeStore.ts","../../src/components/Layout.tsx","../../src/hooks/useTheme.ts","../../src/App.tsx","../../src/utils/SingleInstanceClient.ts","../../src/main.tsx"],"sourcesContent":["import { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\n\r\nexport interface OnboardingState {\r\n  // Onboarding completion status\r\n  isCompleted: boolean;\r\n  currentStep: number;\r\n  totalSteps: number;\r\n  \r\n  // User preferences collected during onboarding\r\n  preferences: {\r\n    name?: string;\r\n    primaryGoal: 'deep_work' | 'task_completion' | 'habit_building' | 'time_tracking';\r\n    workStyle: 'focused_blocks' | 'flexible' | 'structured';\r\n    preferredSessionLength: number; // in minutes\r\n    dailyGoal: number; // in minutes\r\n    weeklyGoal: number; // in minutes\r\n    categories: Array<{\r\n      name: string;\r\n      color: string;\r\n      icon: string;\r\n      weeklyGoal: number;\r\n    }>;\r\n    notifications: {\r\n      sessionComplete: boolean;\r\n      breakReminders: boolean;\r\n      dailyReview: boolean;\r\n    };\r\n  };\r\n  \r\n  // Actions\r\n  setCurrentStep: (step: number) => void;\r\n  updatePreferences: (preferences: Partial<OnboardingState['preferences']>) => void;\r\n  completeOnboarding: () => void;\r\n  resetOnboarding: () => void;\r\n  skipOnboarding: () => void;\r\n}\r\n\r\nexport const useOnboardingStore = create<OnboardingState>()(\r\n  persist(\r\n    (set, get) => ({\r\n      // Initial state - start with completed for better UX\r\n      isCompleted: true,\r\n      currentStep: 0,\r\n      totalSteps: 6,\r\n      \r\n      preferences: {\r\n        primaryGoal: 'deep_work',\r\n        workStyle: 'focused_blocks',\r\n        preferredSessionLength: 25,\r\n        dailyGoal: 120, // 2 hours\r\n        weeklyGoal: 600, // 10 hours\r\n        categories: [],\r\n        notifications: {\r\n          sessionComplete: true,\r\n          breakReminders: true,\r\n          dailyReview: true,\r\n        },\r\n      },\r\n      \r\n      // Actions\r\n      setCurrentStep: (step: number) => {\r\n        set({ currentStep: Math.max(0, Math.min(step, get().totalSteps)) });\r\n      },\r\n      \r\n      updatePreferences: (newPreferences: Partial<OnboardingState['preferences']>) => {\r\n        set((state) => ({\r\n          preferences: {\r\n            ...state.preferences,\r\n            ...newPreferences,\r\n          },\r\n        }));\r\n      },\r\n      \r\n      completeOnboarding: () => {\r\n        set({ \r\n          isCompleted: true,\r\n          currentStep: get().totalSteps,\r\n        });\r\n      },\r\n      \r\n      resetOnboarding: () => {\r\n        set({\r\n          isCompleted: false,\r\n          currentStep: 0,\r\n          preferences: {\r\n            primaryGoal: 'deep_work',\r\n            workStyle: 'focused_blocks',\r\n            preferredSessionLength: 25,\r\n            dailyGoal: 120,\r\n            weeklyGoal: 600,\r\n            categories: [],\r\n            notifications: {\r\n              sessionComplete: true,\r\n              breakReminders: true,\r\n              dailyReview: true,\r\n            },\r\n          },\r\n        });\r\n      },\r\n      \r\n      skipOnboarding: () => {\r\n        set({ \r\n          isCompleted: true,\r\n          currentStep: get().totalSteps,\r\n        });\r\n      },\r\n    }),\r\n    {\r\n      name: 'onboarding-storage',\r\n      version: 1,\r\n    }\r\n  )\r\n);","import React, { useState } from 'react';\r\nimport { useOnboardingStore } from '../../stores/onboardingStore';\r\nimport { Timer, Target, TrendingUp, BarChart3 } from 'lucide-react';\r\n\r\ninterface WelcomeStepProps {\r\n  onNext: () => void;\r\n}\r\n\r\nexport const WelcomeStep: React.FC<WelcomeStepProps> = ({ onNext }) => {\r\n  const { updatePreferences } = useOnboardingStore();\r\n  const [name, setName] = useState('');\r\n\r\n  const handleNext = () => {\r\n    if (name.trim()) {\r\n      updatePreferences({ name: name.trim() });\r\n    }\r\n    onNext();\r\n  };\r\n\r\n  const features = [\r\n    {\r\n      icon: Timer,\r\n      title: 'Focus Sessions',\r\n      description: 'Track deep work with customizable timers and session types'\r\n    },\r\n    {\r\n      icon: Target,\r\n      title: 'Task Management',\r\n      description: 'Organize tasks by categories and track time spent on each'\r\n    },\r\n    {\r\n      icon: TrendingUp,\r\n      title: 'Habit Building',\r\n      description: 'Build consistency with daily streaks and weekly goals'\r\n    },\r\n    {\r\n      icon: BarChart3,\r\n      title: 'Analytics',\r\n      description: 'Gain insights into your productivity patterns and progress'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      {/* Welcome Message */}\r\n      <div className=\"text-center\">\r\n        <div className=\"w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n          <Timer className=\"w-8 h-8 text-primary-600\" />\r\n        </div>\r\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mb-2\">\r\n          Welcome to Local Task Tracker\r\n        </h2>\r\n        <p className=\"text-gray-600 dark:text-gray-400 max-w-md mx-auto\">\r\n          A privacy-focused productivity app that helps you build better focus habits \r\n          through time tracking, task management, and mindful work practices.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Features Grid */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n        {features.map((feature, index) => {\r\n          const Icon = feature.icon;\r\n          return (\r\n            <div \r\n              key={index}\r\n              className=\"p-4 bg-gray-50 dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700\"\r\n            >\r\n              <div className=\"flex items-start space-x-3\">\r\n                <div className=\"w-8 h-8 bg-primary-100 dark:bg-primary-900 rounded-lg flex items-center justify-center flex-shrink-0\">\r\n                  <Icon className=\"w-4 h-4 text-primary-600 dark:text-primary-400\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"font-medium text-gray-900 dark:text-gray-100 text-sm\">\r\n                    {feature.title}\r\n                  </h3>\r\n                  <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">\r\n                    {feature.description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Name Input */}\r\n      <div className=\"space-y-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            What should we call you? (Optional)\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            placeholder=\"Enter your name\"\r\n            className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg \r\n                     bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\r\n                     focus:ring-2 focus:ring-primary-500 focus:border-primary-500\r\n                     placeholder-gray-400 dark:placeholder-gray-500\"\r\n            maxLength={50}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Privacy Note */}\r\n      <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4\">\r\n        <div className=\"flex items-start space-x-3\">\r\n          <div className=\"w-5 h-5 text-blue-600 dark:text-blue-400 flex-shrink-0 mt-0.5\">\r\n            🔒\r\n          </div>\r\n          <div>\r\n            <h4 className=\"text-sm font-medium text-blue-900 dark:text-blue-100\">\r\n              Your Privacy Matters\r\n            </h4>\r\n            <p className=\"text-xs text-blue-700 dark:text-blue-300 mt-1\">\r\n              All your data stays on your device. No cloud sync, no tracking, no data collection.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Action Button */}\r\n      <div className=\"flex justify-end\">\r\n        <button\r\n          onClick={handleNext}\r\n          className=\"px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 \r\n                   focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 \r\n                   transition-colors font-medium\"\r\n        >\r\n          Get Started\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport { useOnboardingStore } from '../../stores/onboardingStore';\r\nimport { Target, Clock, Calendar, TrendingUp } from 'lucide-react';\r\n\r\ninterface GoalSettingStepProps {\r\n  onNext: () => void;\r\n  onPrevious: () => void;\r\n}\r\n\r\nexport const GoalSettingStep: React.FC<GoalSettingStepProps> = ({ onNext, onPrevious }) => {\r\n  const { preferences, updatePreferences } = useOnboardingStore();\r\n  const [primaryGoal, setPrimaryGoal] = useState(preferences.primaryGoal);\r\n  const [dailyGoal, setDailyGoal] = useState(preferences.dailyGoal);\r\n  const [weeklyGoal, setWeeklyGoal] = useState(preferences.weeklyGoal);\r\n\r\n  const goals = [\r\n    {\r\n      id: 'deep_work' as const,\r\n      icon: Target,\r\n      title: 'Deep Work Focus',\r\n      description: 'Long, uninterrupted sessions for complex tasks',\r\n      color: 'blue'\r\n    },\r\n    {\r\n      id: 'task_completion' as const,\r\n      icon: Clock,\r\n      title: 'Task Completion',\r\n      description: 'Getting things done efficiently with time tracking',\r\n      color: 'green'\r\n    },\r\n    {\r\n      id: 'habit_building' as const,\r\n      icon: TrendingUp,\r\n      title: 'Habit Building',\r\n      description: 'Building consistent daily and weekly routines',\r\n      color: 'purple'\r\n    },\r\n    {\r\n      id: 'time_tracking' as const,\r\n      icon: Calendar,\r\n      title: 'Time Awareness',\r\n      description: 'Understanding where your time goes',\r\n      color: 'orange'\r\n    }\r\n  ];\r\n\r\n  const handleNext = () => {\r\n    updatePreferences({\r\n      primaryGoal,\r\n      dailyGoal,\r\n      weeklyGoal\r\n    });\r\n    onNext();\r\n  };\r\n\r\n  const formatTime = (minutes: number) => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    if (hours === 0) return `${mins}m`;\r\n    if (mins === 0) return `${hours}h`;\r\n    return `${hours}h ${mins}m`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"text-center\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100 mb-2\">\r\n          What's your primary productivity goal?\r\n        </h2>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">\r\n          This helps us customize your experience and provide relevant insights.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Goal Selection */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n        {goals.map((goal) => {\r\n          const Icon = goal.icon;\r\n          const isSelected = primaryGoal === goal.id;\r\n          \r\n          return (\r\n            <button\r\n              key={goal.id}\r\n              onClick={() => setPrimaryGoal(goal.id)}\r\n              className={`p-4 rounded-lg border-2 text-left transition-all ${\r\n                isSelected\r\n                  ? `border-${goal.color}-500 bg-${goal.color}-50 dark:bg-${goal.color}-900/20`\r\n                  : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n              }`}\r\n            >\r\n              <div className=\"flex items-start space-x-3\">\r\n                <div className={`w-8 h-8 rounded-lg flex items-center justify-center ${\r\n                  isSelected \r\n                    ? `bg-${goal.color}-100 dark:bg-${goal.color}-800` \r\n                    : 'bg-gray-100 dark:bg-gray-800'\r\n                }`}>\r\n                  <Icon className={`w-4 h-4 ${\r\n                    isSelected \r\n                      ? `text-${goal.color}-600 dark:text-${goal.color}-400` \r\n                      : 'text-gray-600 dark:text-gray-400'\r\n                  }`} />\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <h3 className={`font-medium text-sm ${\r\n                    isSelected \r\n                      ? 'text-gray-900 dark:text-gray-100' \r\n                      : 'text-gray-700 dark:text-gray-300'\r\n                  }`}>\r\n                    {goal.title}\r\n                  </h3>\r\n                  <p className={`text-xs mt-1 ${\r\n                    isSelected \r\n                      ? 'text-gray-600 dark:text-gray-400' \r\n                      : 'text-gray-500 dark:text-gray-500'\r\n                  }`}>\r\n                    {goal.description}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Time Goals */}\r\n      <div className=\"space-y-4\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100\">\r\n          Set your time goals\r\n        </h3>\r\n        \r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n          {/* Daily Goal */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Daily Focus Goal\r\n            </label>\r\n            <div className=\"space-y-2\">\r\n              <input\r\n                type=\"range\"\r\n                min=\"30\"\r\n                max=\"480\"\r\n                step=\"15\"\r\n                value={dailyGoal}\r\n                onChange={(e) => setDailyGoal(parseInt(e.target.value))}\r\n                className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\r\n                         slider:bg-primary-600 slider:rounded-lg\"\r\n              />\r\n              <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400\">\r\n                <span>30m</span>\r\n                <span className=\"font-medium text-primary-600 dark:text-primary-400\">\r\n                  {formatTime(dailyGoal)}\r\n                </span>\r\n                <span>8h</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Weekly Goal */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Weekly Focus Goal\r\n            </label>\r\n            <div className=\"space-y-2\">\r\n              <input\r\n                type=\"range\"\r\n                min=\"120\"\r\n                max=\"2400\"\r\n                step=\"60\"\r\n                value={weeklyGoal}\r\n                onChange={(e) => setWeeklyGoal(parseInt(e.target.value))}\r\n                className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\r\n              />\r\n              <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400\">\r\n                <span>2h</span>\r\n                <span className=\"font-medium text-primary-600 dark:text-primary-400\">\r\n                  {formatTime(weeklyGoal)}\r\n                </span>\r\n                <span>40h</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Goal Preview */}\r\n        <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-4\">\r\n          <h4 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 mb-2\">\r\n            Your Goals Summary\r\n          </h4>\r\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n            <div>\r\n              <span className=\"text-gray-600 dark:text-gray-400\">Daily:</span>\r\n              <span className=\"ml-2 font-medium text-gray-900 dark:text-gray-100\">\r\n                {formatTime(dailyGoal)}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <span className=\"text-gray-600 dark:text-gray-400\">Weekly:</span>\r\n              <span className=\"ml-2 font-medium text-gray-900 dark:text-gray-100\">\r\n                {formatTime(weeklyGoal)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n            You can adjust these goals anytime in settings.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Navigation */}\r\n      <div className=\"flex justify-between\">\r\n        <button\r\n          onClick={onPrevious}\r\n          className=\"px-4 py-2 text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 \r\n                   transition-colors\"\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          onClick={handleNext}\r\n          className=\"px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 \r\n                   focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 \r\n                   transition-colors font-medium\"\r\n        >\r\n          Continue\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport { useOnboardingStore } from '../../stores/onboardingStore';\r\nimport { Clock, Zap, Calendar } from 'lucide-react';\r\n\r\ninterface WorkStyleStepProps {\r\n  onNext: () => void;\r\n  onPrevious: () => void;\r\n}\r\n\r\nexport const WorkStyleStep: React.FC<WorkStyleStepProps> = ({ onNext, onPrevious }) => {\r\n  const { preferences, updatePreferences } = useOnboardingStore();\r\n  const [workStyle, setWorkStyle] = useState(preferences.workStyle);\r\n  const [preferredSessionLength, setPreferredSessionLength] = useState(preferences.preferredSessionLength);\r\n\r\n  const workStyles = [\r\n    {\r\n      id: 'focused_blocks' as const,\r\n      icon: Clock,\r\n      title: 'Focused Blocks',\r\n      description: 'Long, uninterrupted sessions (25-90 minutes)',\r\n      recommended: 'Best for deep work and complex tasks',\r\n      color: 'blue'\r\n    },\r\n    {\r\n      id: 'flexible' as const,\r\n      icon: Zap,\r\n      title: 'Flexible Sessions',\r\n      description: 'Variable length sessions based on task needs',\r\n      recommended: 'Great for mixed workloads and creativity',\r\n      color: 'green'\r\n    },\r\n    {\r\n      id: 'structured' as const,\r\n      icon: Calendar,\r\n      title: 'Structured Schedule',\r\n      description: 'Fixed time blocks with regular breaks',\r\n      recommended: 'Perfect for routine work and consistency',\r\n      color: 'purple'\r\n    }\r\n  ];\r\n\r\n  const sessionLengths = [\r\n    { value: 15, label: '15 min', description: 'Quick tasks' },\r\n    { value: 25, label: '25 min', description: 'Classic Pomodoro' },\r\n    { value: 45, label: '45 min', description: 'Medium focus' },\r\n    { value: 60, label: '60 min', description: 'Deep work' },\r\n    { value: 90, label: '90 min', description: 'Extended focus' }\r\n  ];\r\n\r\n  const handleNext = () => {\r\n    updatePreferences({\r\n      workStyle,\r\n      preferredSessionLength\r\n    });\r\n    onNext();\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"text-center\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100 mb-2\">\r\n          How do you prefer to work?\r\n        </h2>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">\r\n          Choose the work style that matches your natural rhythm and preferences.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Work Style Selection */}\r\n      <div className=\"space-y-3\">\r\n        {workStyles.map((style) => {\r\n          const Icon = style.icon;\r\n          const isSelected = workStyle === style.id;\r\n          \r\n          return (\r\n            <button\r\n              key={style.id}\r\n              onClick={() => setWorkStyle(style.id)}\r\n              className={`w-full p-4 rounded-lg border-2 text-left transition-all ${\r\n                isSelected\r\n                  ? 'border-primary-500 bg-primary-50 dark:bg-primary-900/20'\r\n                  : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n              }`}\r\n            >\r\n              <div className=\"flex items-start space-x-4\">\r\n                <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${\r\n                  isSelected \r\n                    ? 'bg-primary-100 dark:bg-primary-800' \r\n                    : 'bg-gray-100 dark:bg-gray-800'\r\n                }`}>\r\n                  <Icon className={`w-5 h-5 ${\r\n                    isSelected \r\n                      ? 'text-primary-600 dark:text-primary-400' \r\n                      : 'text-gray-600 dark:text-gray-400'\r\n                  }`} />\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                  <h3 className={`font-medium ${\r\n                    isSelected \r\n                      ? 'text-gray-900 dark:text-gray-100' \r\n                      : 'text-gray-700 dark:text-gray-300'\r\n                  }`}>\r\n                    {style.title}\r\n                  </h3>\r\n                  <p className={`text-sm mt-1 ${\r\n                    isSelected \r\n                      ? 'text-gray-600 dark:text-gray-400' \r\n                      : 'text-gray-500 dark:text-gray-500'\r\n                  }`}>\r\n                    {style.description}\r\n                  </p>\r\n                  <p className={`text-xs mt-2 ${\r\n                    isSelected \r\n                      ? 'text-primary-600 dark:text-primary-400' \r\n                      : 'text-gray-400 dark:text-gray-500'\r\n                  }`}>\r\n                    {style.recommended}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Session Length Selection */}\r\n      <div className=\"space-y-4\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100\">\r\n          Preferred session length\r\n        </h3>\r\n        \r\n        <div className=\"grid grid-cols-2 sm:grid-cols-5 gap-2\">\r\n          {sessionLengths.map((length) => {\r\n            const isSelected = preferredSessionLength === length.value;\r\n            \r\n            return (\r\n              <button\r\n                key={length.value}\r\n                onClick={() => setPreferredSessionLength(length.value)}\r\n                className={`p-3 rounded-lg border-2 text-center transition-all ${\r\n                  isSelected\r\n                    ? 'border-primary-500 bg-primary-50 dark:bg-primary-900/20'\r\n                    : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n                }`}\r\n              >\r\n                <div className={`font-medium text-sm ${\r\n                  isSelected \r\n                    ? 'text-primary-600 dark:text-primary-400' \r\n                    : 'text-gray-900 dark:text-gray-100'\r\n                }`}>\r\n                  {length.label}\r\n                </div>\r\n                <div className={`text-xs mt-1 ${\r\n                  isSelected \r\n                    ? 'text-primary-500 dark:text-primary-500' \r\n                    : 'text-gray-500 dark:text-gray-400'\r\n                }`}>\r\n                  {length.description}\r\n                </div>\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Style Preview */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-4\">\r\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 mb-2\">\r\n          Your Work Style\r\n        </h4>\r\n        <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n          <p>\r\n            <span className=\"font-medium\">Style:</span> {workStyles.find(s => s.id === workStyle)?.title}\r\n          </p>\r\n          <p className=\"mt-1\">\r\n            <span className=\"font-medium\">Default session:</span> {preferredSessionLength} minutes\r\n          </p>\r\n        </div>\r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n          You can always change session lengths when starting a timer.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Navigation */}\r\n      <div className=\"flex justify-between\">\r\n        <button\r\n          onClick={onPrevious}\r\n          className=\"px-4 py-2 text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 \r\n                   transition-colors\"\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          onClick={handleNext}\r\n          className=\"px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 \r\n                   focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 \r\n                   transition-colors font-medium\"\r\n        >\r\n          Continue\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport { useOnboardingStore } from '../../stores/onboardingStore';\r\nimport { Plus, X, Code, BookOpen, Briefcase, Heart, Zap, Target } from 'lucide-react';\r\n\r\ninterface CategorySetupStepProps {\r\n  onNext: () => void;\r\n  onPrevious: () => void;\r\n}\r\n\r\ninterface Category {\r\n  name: string;\r\n  color: string;\r\n  icon: string;\r\n  weeklyGoal: number;\r\n}\r\n\r\nexport const CategorySetupStep: React.FC<CategorySetupStepProps> = ({ onNext, onPrevious }) => {\r\n  const { preferences, updatePreferences } = useOnboardingStore();\r\n  const [categories, setCategories] = useState<Category[]>(\r\n    preferences.categories.length > 0 ? preferences.categories : [\r\n      { name: 'Deep Work', color: '#3B82F6', icon: 'Target', weeklyGoal: 300 },\r\n      { name: 'Learning', color: '#10B981', icon: 'BookOpen', weeklyGoal: 180 }\r\n    ]\r\n  );\r\n\r\n  const availableColors = [\r\n    '#3B82F6', // Blue\r\n    '#10B981', // Green\r\n    '#8B5CF6', // Purple\r\n    '#F59E0B', // Orange\r\n    '#EF4444', // Red\r\n    '#06B6D4', // Cyan\r\n    '#84CC16', // Lime\r\n    '#F97316', // Orange\r\n    '#EC4899', // Pink\r\n    '#6B7280'  // Gray\r\n  ];\r\n\r\n  const availableIcons = [\r\n    { name: 'Target', icon: Target },\r\n    { name: 'BookOpen', icon: BookOpen },\r\n    { name: 'Code', icon: Code },\r\n    { name: 'Briefcase', icon: Briefcase },\r\n    { name: 'Heart', icon: Heart },\r\n    { name: 'Zap', icon: Zap }\r\n  ];\r\n\r\n  const addCategory = () => {\r\n    if (categories.length < 8) {\r\n      const newCategory: Category = {\r\n        name: '',\r\n        color: availableColors[categories.length % availableColors.length]!,\r\n        icon: 'Target',\r\n        weeklyGoal: 120\r\n      };\r\n      setCategories([...categories, newCategory]);\r\n    }\r\n  };\r\n\r\n  const removeCategory = (index: number) => {\r\n    if (categories.length > 1) {\r\n      setCategories(categories.filter((_, i) => i !== index));\r\n    }\r\n  };\r\n\r\n  const updateCategory = (index: number, updates: Partial<Category>) => {\r\n    setCategories(categories.map((cat, i) => \r\n      i === index ? { ...cat, ...updates } : cat\r\n    ));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const validCategories = categories.filter(cat => cat.name.trim() !== '');\r\n    updatePreferences({ categories: validCategories });\r\n    onNext();\r\n  };\r\n\r\n  const formatTime = (minutes: number) => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    if (hours === 0) return `${mins}m`;\r\n    if (mins === 0) return `${hours}h`;\r\n    return `${hours}h ${mins}m`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"text-center\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100 mb-2\">\r\n          Set up your categories\r\n        </h2>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">\r\n          Organize your work into categories to track time and set goals for different areas.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Categories List */}\r\n      <div className=\"space-y-3 max-h-80 overflow-y-auto\">\r\n        {categories.map((category, index) => {\r\n          const IconComponent = availableIcons.find(i => i.name === category.icon)?.icon || Target;\r\n          \r\n          return (\r\n            <div key={index} className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-4 border border-gray-200 dark:border-gray-700\">\r\n              <div className=\"flex items-start space-x-3\">\r\n                {/* Icon and Color */}\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div \r\n                    className=\"w-8 h-8 rounded-lg flex items-center justify-center\"\r\n                    style={{ backgroundColor: category.color + '20' }}\r\n                  >\r\n                    <IconComponent \r\n                      className=\"w-4 h-4\" \r\n                      style={{ color: category.color }}\r\n                    />\r\n                  </div>\r\n                  \r\n                  {/* Color Picker */}\r\n                  <div className=\"flex space-x-1\">\r\n                    {availableColors.slice(0, 5).map((color) => (\r\n                      <button\r\n                        key={color}\r\n                        onClick={() => updateCategory(index, { color })}\r\n                        className={`w-4 h-4 rounded-full border-2 ${\r\n                          category.color === color \r\n                            ? 'border-gray-400 dark:border-gray-300' \r\n                            : 'border-transparent'\r\n                        }`}\r\n                        style={{ backgroundColor: color }}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Category Details */}\r\n                <div className=\"flex-1 space-y-3\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={category.name}\r\n                      onChange={(e) => updateCategory(index, { name: e.target.value })}\r\n                      placeholder=\"Category name\"\r\n                      className=\"flex-1 px-2 py-1 text-sm border border-gray-300 dark:border-gray-600 \r\n                               rounded bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\r\n                               focus:ring-1 focus:ring-primary-500 focus:border-primary-500\"\r\n                      maxLength={30}\r\n                    />\r\n                    \r\n                    {/* Icon Picker */}\r\n                    <select\r\n                      value={category.icon}\r\n                      onChange={(e) => updateCategory(index, { icon: e.target.value })}\r\n                      className=\"px-2 py-1 text-sm border border-gray-300 dark:border-gray-600 \r\n                               rounded bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\r\n                               focus:ring-1 focus:ring-primary-500 focus:border-primary-500\"\r\n                    >\r\n                      {availableIcons.map((icon) => (\r\n                        <option key={icon.name} value={icon.name}>\r\n                          {icon.name}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  {/* Weekly Goal */}\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <label className=\"text-xs text-gray-600 dark:text-gray-400 min-w-0 flex-shrink-0\">\r\n                      Weekly goal:\r\n                    </label>\r\n                    <input\r\n                      type=\"range\"\r\n                      min=\"30\"\r\n                      max=\"600\"\r\n                      step=\"30\"\r\n                      value={category.weeklyGoal}\r\n                      onChange={(e) => updateCategory(index, { weeklyGoal: parseInt(e.target.value) })}\r\n                      className=\"flex-1 h-1 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\r\n                    />\r\n                    <span className=\"text-xs font-medium text-gray-900 dark:text-gray-100 min-w-0 flex-shrink-0\">\r\n                      {formatTime(category.weeklyGoal)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Remove Button */}\r\n                {categories.length > 1 && (\r\n                  <button\r\n                    onClick={() => removeCategory(index)}\r\n                    className=\"p-1 text-gray-400 hover:text-red-500 transition-colors\"\r\n                  >\r\n                    <X className=\"w-4 h-4\" />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Add Category Button */}\r\n      {categories.length < 8 && (\r\n        <button\r\n          onClick={addCategory}\r\n          className=\"w-full p-3 border-2 border-dashed border-gray-300 dark:border-gray-600 \r\n                   rounded-lg text-gray-600 dark:text-gray-400 hover:border-primary-400 \r\n                   hover:text-primary-600 dark:hover:text-primary-400 transition-colors\r\n                   flex items-center justify-center space-x-2\"\r\n        >\r\n          <Plus className=\"w-4 h-4\" />\r\n          <span className=\"text-sm\">Add Category</span>\r\n        </button>\r\n      )}\r\n\r\n      {/* Summary */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-4\">\r\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 mb-2\">\r\n          Categories Summary\r\n        </h4>\r\n        <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n          <p>\r\n            <span className=\"font-medium\">{categories.filter(c => c.name.trim()).length}</span> categories\r\n          </p>\r\n          <p className=\"mt-1\">\r\n            <span className=\"font-medium\">Total weekly goal:</span> {' '}\r\n            {formatTime(categories.reduce((sum, cat) => sum + cat.weeklyGoal, 0))}\r\n          </p>\r\n        </div>\r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-2\">\r\n          You can add, edit, or remove categories anytime in the app.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Navigation */}\r\n      <div className=\"flex justify-between\">\r\n        <button\r\n          onClick={onPrevious}\r\n          className=\"px-4 py-2 text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 \r\n                   transition-colors\"\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          onClick={handleNext}\r\n          disabled={categories.filter(c => c.name.trim()).length === 0}\r\n          className=\"px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 \r\n                   focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 \r\n                   transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\r\n        >\r\n          Continue\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport { useOnboardingStore } from '../../stores/onboardingStore';\r\nimport { Bell, BellOff, Clock, Calendar } from 'lucide-react';\r\n\r\ninterface NotificationPreferencesStepProps {\r\n  onNext: () => void;\r\n  onPrevious: () => void;\r\n}\r\n\r\nexport const NotificationPreferencesStep: React.FC<NotificationPreferencesStepProps> = ({ \r\n  onNext, \r\n  onPrevious \r\n}) => {\r\n  const { preferences, updatePreferences } = useOnboardingStore();\r\n  const [notifications, setNotifications] = useState(preferences.notifications);\r\n\r\n  const notificationOptions = [\r\n    {\r\n      id: 'sessionComplete' as const,\r\n      icon: Clock,\r\n      title: 'Session Completion',\r\n      description: 'Get notified when your focus sessions end',\r\n      recommended: true\r\n    },\r\n    {\r\n      id: 'breakReminders' as const,\r\n      icon: Bell,\r\n      title: 'Break Reminders',\r\n      description: 'Smart suggestions for when to take breaks',\r\n      recommended: true\r\n    },\r\n    {\r\n      id: 'dailyReview' as const,\r\n      icon: Calendar,\r\n      title: 'Daily Review',\r\n      description: 'End-of-day reflection and planning prompts',\r\n      recommended: false\r\n    }\r\n  ];\r\n\r\n  const handleToggle = (key: keyof typeof notifications) => {\r\n    setNotifications(prev => ({\r\n      ...prev,\r\n      [key]: !prev[key]\r\n    }));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    updatePreferences({ notifications });\r\n    onNext();\r\n  };\r\n\r\n  const enabledCount = Object.values(notifications).filter(Boolean).length;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"text-center\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100 mb-2\">\r\n          Notification preferences\r\n        </h2>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">\r\n          Choose which notifications help you stay focused and productive.\r\n        </p>\r\n      </div>\r\n\r\n      {/* Notification Options */}\r\n      <div className=\"space-y-3\">\r\n        {notificationOptions.map((option) => {\r\n          const Icon = option.icon;\r\n          const isEnabled = notifications[option.id];\r\n          \r\n          return (\r\n            <div\r\n              key={option.id}\r\n              className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-4 border border-gray-200 dark:border-gray-700\"\r\n            >\r\n              <div className=\"flex items-start space-x-4\">\r\n                <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${\r\n                  isEnabled \r\n                    ? 'bg-primary-100 dark:bg-primary-800' \r\n                    : 'bg-gray-100 dark:bg-gray-800'\r\n                }`}>\r\n                  <Icon className={`w-5 h-5 ${\r\n                    isEnabled \r\n                      ? 'text-primary-600 dark:text-primary-400' \r\n                      : 'text-gray-600 dark:text-gray-400'\r\n                  }`} />\r\n                </div>\r\n                \r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center space-x-2 mb-1\">\r\n                    <h3 className=\"font-medium text-gray-900 dark:text-gray-100\">\r\n                      {option.title}\r\n                    </h3>\r\n                    {option.recommended && (\r\n                      <span className=\"px-2 py-0.5 text-xs bg-green-100 dark:bg-green-900 \r\n                                     text-green-700 dark:text-green-300 rounded-full\">\r\n                        Recommended\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    {option.description}\r\n                  </p>\r\n                </div>\r\n                \r\n                <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={isEnabled}\r\n                    onChange={() => handleToggle(option.id)}\r\n                    className=\"sr-only peer\"\r\n                  />\r\n                  <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 \r\n                                peer-focus:ring-primary-300 dark:peer-focus:ring-primary-800 \r\n                                rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full \r\n                                peer-checked:after:border-white after:content-[''] after:absolute \r\n                                after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 \r\n                                after:border after:rounded-full after:h-5 after:w-5 after:transition-all \r\n                                dark:border-gray-600 peer-checked:bg-primary-600\">\r\n                  </div>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Notification Preview */}\r\n      <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4\">\r\n        <div className=\"flex items-start space-x-3\">\r\n          <div className=\"w-5 h-5 text-blue-600 dark:text-blue-400 flex-shrink-0 mt-0.5\">\r\n            {enabledCount > 0 ? <Bell className=\"w-5 h-5\" /> : <BellOff className=\"w-5 h-5\" />}\r\n          </div>\r\n          <div>\r\n            <h4 className=\"text-sm font-medium text-blue-900 dark:text-blue-100\">\r\n              {enabledCount > 0 ? 'Notifications Enabled' : 'All Notifications Disabled'}\r\n            </h4>\r\n            <p className=\"text-xs text-blue-700 dark:text-blue-300 mt-1\">\r\n              {enabledCount > 0 \r\n                ? `You'll receive ${enabledCount} type${enabledCount > 1 ? 's' : ''} of notifications to help you stay focused.`\r\n                : 'You can enable notifications later in settings if you change your mind.'\r\n              }\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Additional Settings Preview */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-4\">\r\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 mb-2\">\r\n          What's next?\r\n        </h4>\r\n        <ul className=\"text-sm text-gray-600 dark:text-gray-400 space-y-1\">\r\n          <li>• Fine-tune notification timing and sounds in settings</li>\r\n          <li>• Set up focus mode to minimize distractions</li>\r\n          <li>• Configure break reminder frequency</li>\r\n          <li>• Customize daily review questions</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Navigation */}\r\n      <div className=\"flex justify-between\">\r\n        <button\r\n          onClick={onPrevious}\r\n          className=\"px-4 py-2 text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 \r\n                   transition-colors\"\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          onClick={handleNext}\r\n          className=\"px-6 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 \r\n                   focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 \r\n                   transition-colors font-medium\"\r\n        >\r\n          Continue\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { useOnboardingStore } from '../../stores/onboardingStore';\r\nimport { CheckCircle, Timer, Target, Bell, Folder } from 'lucide-react';\r\n\r\ninterface CompletionStepProps {\r\n  onComplete: () => void;\r\n}\r\n\r\nexport const CompletionStep: React.FC<CompletionStepProps> = ({ onComplete }) => {\r\n  const { preferences } = useOnboardingStore();\r\n\r\n  const formatTime = (minutes: number) => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    if (hours === 0) return `${mins}m`;\r\n    if (mins === 0) return `${hours}h`;\r\n    return `${hours}h ${mins}m`;\r\n  };\r\n\r\n  const getWorkStyleLabel = (style: string) => {\r\n    switch (style) {\r\n      case 'focused_blocks': return 'Focused Blocks';\r\n      case 'flexible': return 'Flexible Sessions';\r\n      case 'structured': return 'Structured Schedule';\r\n      default: return style;\r\n    }\r\n  };\r\n\r\n  const getPrimaryGoalLabel = (goal: string) => {\r\n    switch (goal) {\r\n      case 'deep_work': return 'Deep Work Focus';\r\n      case 'task_completion': return 'Task Completion';\r\n      case 'habit_building': return 'Habit Building';\r\n      case 'time_tracking': return 'Time Awareness';\r\n      default: return goal;\r\n    }\r\n  };\r\n\r\n  const enabledNotifications = Object.entries(preferences.notifications)\r\n    .filter(([_, enabled]) => enabled)\r\n    .map(([key, _]) => {\r\n      switch (key) {\r\n        case 'sessionComplete': return 'Session completion';\r\n        case 'breakReminders': return 'Break reminders';\r\n        case 'dailyReview': return 'Daily review';\r\n        default: return key;\r\n      }\r\n    });\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Success Header */}\r\n      <div className=\"text-center\">\r\n        <div className=\"w-16 h-16 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n          <CheckCircle className=\"w-8 h-8 text-green-600 dark:text-green-400\" />\r\n        </div>\r\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mb-2\">\r\n          {preferences.name ? `Welcome, ${preferences.name}!` : 'You\\'re all set!'}\r\n        </h2>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">\r\n          Your productivity workspace is ready. Here's what we've set up for you:\r\n        </p>\r\n      </div>\r\n\r\n      {/* Setup Summary */}\r\n      <div className=\"space-y-4\">\r\n        {/* Goals */}\r\n        <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-4\">\r\n          <div className=\"flex items-start space-x-3\">\r\n            <div className=\"w-8 h-8 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center\">\r\n              <Target className=\"w-4 h-4 text-blue-600 dark:text-blue-400\" />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"font-medium text-gray-900 dark:text-gray-100\">Your Goals</h3>\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                <p>Primary focus: {getPrimaryGoalLabel(preferences.primaryGoal)}</p>\r\n                <p>Daily goal: {formatTime(preferences.dailyGoal)}</p>\r\n                <p>Weekly goal: {formatTime(preferences.weeklyGoal)}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Work Style */}\r\n        <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-4\">\r\n          <div className=\"flex items-start space-x-3\">\r\n            <div className=\"w-8 h-8 bg-purple-100 dark:bg-purple-900 rounded-lg flex items-center justify-center\">\r\n              <Timer className=\"w-4 h-4 text-purple-600 dark:text-purple-400\" />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"font-medium text-gray-900 dark:text-gray-100\">Work Style</h3>\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                <p>Style: {getWorkStyleLabel(preferences.workStyle)}</p>\r\n                <p>Preferred session: {preferences.preferredSessionLength} minutes</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Categories */}\r\n        <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-4\">\r\n          <div className=\"flex items-start space-x-3\">\r\n            <div className=\"w-8 h-8 bg-green-100 dark:bg-green-900 rounded-lg flex items-center justify-center\">\r\n              <Folder className=\"w-4 h-4 text-green-600 dark:text-green-400\" />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <h3 className=\"font-medium text-gray-900 dark:text-gray-100\">Categories</h3>\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                <p>{preferences.categories.length} categories created</p>\r\n                {preferences.categories.length > 0 && (\r\n                  <div className=\"flex flex-wrap gap-1 mt-2\">\r\n                    {preferences.categories.slice(0, 3).map((category, index) => (\r\n                      <span\r\n                        key={index}\r\n                        className=\"px-2 py-1 text-xs rounded-full text-white\"\r\n                        style={{ backgroundColor: category.color }}\r\n                      >\r\n                        {category.name}\r\n                      </span>\r\n                    ))}\r\n                    {preferences.categories.length > 3 && (\r\n                      <span className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-400 rounded-full\">\r\n                        +{preferences.categories.length - 3} more\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Notifications */}\r\n        <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-4\">\r\n          <div className=\"flex items-start space-x-3\">\r\n            <div className=\"w-8 h-8 bg-orange-100 dark:bg-orange-900 rounded-lg flex items-center justify-center\">\r\n              <Bell className=\"w-4 h-4 text-orange-600 dark:text-orange-400\" />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"font-medium text-gray-900 dark:text-gray-100\">Notifications</h3>\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                {enabledNotifications.length > 0 ? (\r\n                  <p>Enabled: {enabledNotifications.join(', ')}</p>\r\n                ) : (\r\n                  <p>All notifications disabled</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Next Steps */}\r\n      <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4\">\r\n        <h4 className=\"text-sm font-medium text-blue-900 dark:text-blue-100 mb-2\">\r\n          Ready to get started?\r\n        </h4>\r\n        <ul className=\"text-xs text-blue-700 dark:text-blue-300 space-y-1\">\r\n          <li>• Start your first focus session from the Timer page</li>\r\n          <li>• Create tasks and assign them to your categories</li>\r\n          <li>• Track your progress on the Analytics dashboard</li>\r\n          <li>• Adjust settings anytime to match your workflow</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Complete Button */}\r\n      <div className=\"flex justify-center\">\r\n        <button\r\n          onClick={onComplete}\r\n          className=\"px-8 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 \r\n                   focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 \r\n                   transition-colors font-medium text-lg\"\r\n        >\r\n          Start Using Local Task Tracker\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { Check } from 'lucide-react';\r\n\r\ninterface ProgressIndicatorProps {\r\n  currentStep: number;\r\n  totalSteps: number;\r\n}\r\n\r\nexport const ProgressIndicator: React.FC<ProgressIndicatorProps> = ({ \r\n  currentStep, \r\n  totalSteps \r\n}) => {\r\n  const steps = [\r\n    'Welcome',\r\n    'Goals',\r\n    'Work Style',\r\n    'Categories',\r\n    'Notifications',\r\n    'Complete'\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between\">\r\n      {steps.map((step, index) => (\r\n        <div key={index} className=\"flex items-center\">\r\n          {/* Step Circle */}\r\n          <div className=\"flex items-center\">\r\n            <div\r\n              className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium transition-colors ${\r\n                index < currentStep\r\n                  ? 'bg-primary-600 text-white'\r\n                  : index === currentStep\r\n                  ? 'bg-primary-100 text-primary-600 border-2 border-primary-600'\r\n                  : 'bg-gray-200 text-gray-500 dark:bg-gray-700 dark:text-gray-400'\r\n              }`}\r\n            >\r\n              {index < currentStep ? (\r\n                <Check className=\"w-4 h-4\" />\r\n              ) : (\r\n                <span>{index + 1}</span>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Step Label */}\r\n            <span\r\n              className={`ml-2 text-xs font-medium hidden sm:block ${\r\n                index <= currentStep\r\n                  ? 'text-gray-900 dark:text-gray-100'\r\n                  : 'text-gray-500 dark:text-gray-400'\r\n              }`}\r\n            >\r\n              {step}\r\n            </span>\r\n          </div>\r\n          \r\n          {/* Connector Line */}\r\n          {index < steps.length - 1 && (\r\n            <div\r\n              className={`w-8 sm:w-12 h-0.5 mx-2 transition-colors ${\r\n                index < currentStep\r\n                  ? 'bg-primary-600'\r\n                  : 'bg-gray-200 dark:bg-gray-700'\r\n              }`}\r\n            />\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};","import React, { useEffect } from 'react';\r\nimport { useOnboardingStore } from '../../stores/onboardingStore';\r\nimport { WelcomeStep } from './WelcomeStep';\r\nimport { GoalSettingStep } from './GoalSettingStep';\r\nimport { WorkStyleStep } from './WorkStyleStep';\r\nimport { CategorySetupStep } from './CategorySetupStep';\r\nimport { NotificationPreferencesStep } from './NotificationPreferencesStep';\r\nimport { CompletionStep } from './CompletionStep';\r\nimport { ProgressIndicator } from './ProgressIndicator';\r\nimport { X } from 'lucide-react';\r\n\r\ninterface OnboardingFlowProps {\r\n  onComplete: () => void;\r\n  onSkip?: () => void;\r\n}\r\n\r\nexport const OnboardingFlow: React.FC<OnboardingFlowProps> = ({ onComplete, onSkip }) => {\r\n  const { \r\n    currentStep, \r\n    totalSteps, \r\n    setCurrentStep, \r\n    completeOnboarding,\r\n    skipOnboarding,\r\n    isCompleted \r\n  } = useOnboardingStore();\r\n\r\n  // Handle completion\r\n  useEffect(() => {\r\n    if (isCompleted) {\r\n      onComplete();\r\n    }\r\n  }, [isCompleted, onComplete]);\r\n\r\n  const handleNext = () => {\r\n    if (currentStep < totalSteps - 1) {\r\n      setCurrentStep(currentStep + 1);\r\n    } else {\r\n      completeOnboarding();\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentStep > 0) {\r\n      setCurrentStep(currentStep - 1);\r\n    }\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (onSkip) {\r\n      onSkip();\r\n    }\r\n    skipOnboarding();\r\n  };\r\n\r\n  const renderCurrentStep = () => {\r\n    switch (currentStep) {\r\n      case 0:\r\n        return <WelcomeStep onNext={handleNext} />;\r\n      case 1:\r\n        return <GoalSettingStep onNext={handleNext} onPrevious={handlePrevious} />;\r\n      case 2:\r\n        return <WorkStyleStep onNext={handleNext} onPrevious={handlePrevious} />;\r\n      case 3:\r\n        return <CategorySetupStep onNext={handleNext} onPrevious={handlePrevious} />;\r\n      case 4:\r\n        return <NotificationPreferencesStep onNext={handleNext} onPrevious={handlePrevious} />;\r\n      case 5:\r\n        return <CompletionStep onComplete={() => completeOnboarding()} />;\r\n      default:\r\n        return <WelcomeStep onNext={handleNext} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl w-full max-w-2xl mx-4 max-h-[90vh] overflow-hidden\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\r\n          <div>\r\n            <h1 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n              Welcome to Local Task Tracker\r\n            </h1>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n              Let's set up your productivity workspace\r\n            </p>\r\n          </div>\r\n          \r\n          {onSkip && (\r\n            <button\r\n              onClick={handleSkip}\r\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\r\n              title=\"Skip onboarding\"\r\n            >\r\n              <X className=\"w-5 h-5\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Progress Indicator */}\r\n        <div className=\"px-6 py-4 bg-gray-50 dark:bg-gray-900\">\r\n          <ProgressIndicator \r\n            currentStep={currentStep} \r\n            totalSteps={totalSteps} \r\n          />\r\n        </div>\r\n\r\n        {/* Step Content */}\r\n        <div className=\"p-6 overflow-y-auto max-h-[60vh]\">\r\n          {renderCurrentStep()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\n\r\nexport type ThemeMode = 'light' | 'dark' | 'system';\r\nexport type FontSize = 'small' | 'medium' | 'large';\r\nexport type DashboardLayout = 'default' | 'compact' | 'detailed';\r\n\r\nexport interface ThemeState {\r\n  // Theme settings\r\n  mode: ThemeMode;\r\n  fontSize: FontSize;\r\n  compactMode: boolean;\r\n  showSecondsInTimer: boolean;\r\n  dashboardLayout: DashboardLayout;\r\n  \r\n  // Computed theme\r\n  isDark: boolean;\r\n  \r\n  // Actions\r\n  setMode: (mode: ThemeMode) => void;\r\n  setFontSize: (size: FontSize) => void;\r\n  setCompactMode: (compact: boolean) => void;\r\n  setShowSecondsInTimer: (show: boolean) => void;\r\n  setDashboardLayout: (layout: DashboardLayout) => void;\r\n  toggleTheme: () => void;\r\n  initializeTheme: () => void;\r\n}\r\n\r\n// Helper function to detect system theme preference\r\nconst getSystemTheme = (): 'light' | 'dark' => {\r\n  if (typeof window !== 'undefined' && window.matchMedia) {\r\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n  }\r\n  return 'light';\r\n};\r\n\r\n// Helper function to apply theme to document\r\nconst applyTheme = (isDark: boolean) => {\r\n  if (typeof document !== 'undefined') {\r\n    if (isDark) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n  }\r\n};\r\n\r\nexport const useThemeStore = create<ThemeState>()(\r\n  persist(\r\n    (set, get) => ({\r\n      // Initial state\r\n      mode: 'system',\r\n      fontSize: 'medium',\r\n      compactMode: false,\r\n      showSecondsInTimer: false,\r\n      dashboardLayout: 'default',\r\n      isDark: false,\r\n      \r\n      // Actions\r\n      setMode: (mode: ThemeMode) => {\r\n        const isDark = mode === 'dark' || (mode === 'system' && getSystemTheme() === 'dark');\r\n        applyTheme(isDark);\r\n        set({ mode, isDark });\r\n      },\r\n      \r\n      setFontSize: (fontSize: FontSize) => {\r\n        set({ fontSize });\r\n        \r\n        // Apply font size to document root\r\n        if (typeof document !== 'undefined') {\r\n          const root = document.documentElement;\r\n          root.classList.remove('text-sm', 'text-base', 'text-lg');\r\n          \r\n          switch (fontSize) {\r\n            case 'small':\r\n              root.classList.add('text-sm');\r\n              break;\r\n            case 'medium':\r\n              root.classList.add('text-base');\r\n              break;\r\n            case 'large':\r\n              root.classList.add('text-lg');\r\n              break;\r\n          }\r\n        }\r\n      },\r\n      \r\n      setCompactMode: (compactMode: boolean) => {\r\n        set({ compactMode });\r\n        \r\n        // Apply compact mode to document root\r\n        if (typeof document !== 'undefined') {\r\n          if (compactMode) {\r\n            document.documentElement.classList.add('compact-mode');\r\n          } else {\r\n            document.documentElement.classList.remove('compact-mode');\r\n          }\r\n        }\r\n      },\r\n      \r\n      setShowSecondsInTimer: (showSecondsInTimer: boolean) => {\r\n        set({ showSecondsInTimer });\r\n      },\r\n      \r\n      setDashboardLayout: (dashboardLayout: DashboardLayout) => {\r\n        set({ dashboardLayout });\r\n      },\r\n      \r\n      toggleTheme: () => {\r\n        const { mode } = get();\r\n        const newMode: ThemeMode = mode === 'light' ? 'dark' : mode === 'dark' ? 'system' : 'light';\r\n        get().setMode(newMode);\r\n      },\r\n      \r\n      initializeTheme: () => {\r\n        const { mode } = get();\r\n        const isDark = mode === 'dark' || (mode === 'system' && getSystemTheme() === 'dark');\r\n        applyTheme(isDark);\r\n        set({ isDark });\r\n        \r\n        // Listen for system theme changes\r\n        if (typeof window !== 'undefined' && window.matchMedia) {\r\n          const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n          const handleChange = () => {\r\n            const { mode } = get();\r\n            if (mode === 'system') {\r\n              const isDark = mediaQuery.matches;\r\n              applyTheme(isDark);\r\n              set({ isDark });\r\n            }\r\n          };\r\n          \r\n          mediaQuery.addEventListener('change', handleChange);\r\n          \r\n          // Return cleanup function\r\n          return () => mediaQuery.removeEventListener('change', handleChange);\r\n        }\r\n      },\r\n    }),\r\n    {\r\n      name: 'theme-storage',\r\n      version: 1,\r\n      // Only persist user preferences, not computed values\r\n      partialize: (state) => ({\r\n        mode: state.mode,\r\n        fontSize: state.fontSize,\r\n        compactMode: state.compactMode,\r\n        showSecondsInTimer: state.showSecondsInTimer,\r\n        dashboardLayout: state.dashboardLayout,\r\n      }),\r\n    }\r\n  )\r\n);","\nimport React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { \n  Timer, \n  CheckSquare, \n  BarChart3, \n  Settings, \n  Home,\n  Flame,\n  Folder\n} from 'lucide-react'\nimport { useOnboardingStore } from '../stores/onboardingStore';\nimport { OnboardingFlow } from './Onboarding';\nimport { useTheme } from '../hooks/useTheme';\n\ninterface LayoutProps {\n  children: React.ReactNode\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n  const { isCompleted, completeOnboarding } = useOnboardingStore();\n  \n  // Initialize theme\n  useTheme();\n  \n  const navItems = [\n    { to: '/', icon: Home, label: 'Dashboard' },\n    { to: '/timer', icon: Timer, label: 'Timer' },\n    { to: '/tasks', icon: CheckSquare, label: 'Tasks' },\n    { to: '/categories', icon: Folder, label: 'Categories' },\n    { to: '/analytics', icon: BarChart3, label: 'Analytics' },\n    { to: '/habits', icon: Flame, label: 'Habits' },\n    { to: '/settings', icon: Settings, label: 'Settings' },\n  ]\n\n  const handleOnboardingComplete = () => {\n    completeOnboarding();\n  };\n\n  return (\n    <>\n      <div className=\"flex h-screen bg-neutral-25\">\n        {/* Sidebar */}\n        <div className=\"w-60 bg-white border-r border-neutral-200 flex flex-col\">\n          <div className=\"p-4 border-b border-neutral-100\">\n            <h1 className=\"text-lg font-semibold text-neutral-900 tracking-tight\">Task Tracker</h1>\n            <p className=\"text-xs text-neutral-500 mt-0.5\">Local Productivity App</p>\n          </div>\n\n          <nav className=\"flex-1 px-3 py-4 space-y-0.5\">\n            {navItems.map(({ to, icon: Icon, label }) => (\n              <NavLink\n                key={to}\n                to={to}\n                className={({ isActive }) =>\n                  `group flex items-center px-3 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${\n                    isActive\n                      ? 'bg-neutral-100 text-neutral-900'\n                      : 'text-neutral-600 hover:bg-neutral-50 hover:text-neutral-900 active:scale-[0.98]'\n                  }`\n                }\n              >\n                <Icon className={`w-4 h-4 mr-3 transition-colors flex-shrink-0 ${\n                  ({ isActive }) => isActive ? 'text-neutral-700' : 'text-neutral-400 group-hover:text-neutral-600'\n                }`} />\n                <span className=\"truncate\">{label}</span>\n              </NavLink>\n            ))}\n          </nav>\n\n          {/* Sidebar footer */}\n          <div className=\"p-3 border-t border-neutral-100\">\n            <div className=\"text-xs text-neutral-400 text-center\">\n              v1.0.0\n            </div>\n          </div>\n        </div>\n\n        {/* Main content */}\n        <div className=\"flex-1 overflow-auto\">\n          <main className=\"p-8 max-w-7xl mx-auto\">\n            {children}\n          </main>\n        </div>\n      </div>\n\n      {/* Onboarding Flow */}\n      {!isCompleted && (\n        <OnboardingFlow \n          onComplete={handleOnboardingComplete}\n          onSkip={handleOnboardingComplete}\n        />\n      )}\n    </>\n  )\n}\n\nexport default Layout","import { useEffect } from 'react';\r\nimport { useThemeStore } from '../stores/themeStore';\r\n\r\nexport const useTheme = () => {\r\n  const themeStore = useThemeStore();\r\n  \r\n  useEffect(() => {\r\n    // Initialize theme on mount\r\n    const cleanup = themeStore.initializeTheme();\r\n    \r\n    // Apply font size and compact mode\r\n    themeStore.setFontSize(themeStore.fontSize);\r\n    themeStore.setCompactMode(themeStore.compactMode);\r\n    \r\n    return cleanup;\r\n  }, []);\r\n  \r\n  return themeStore;\r\n};","import { lazy, Suspense } from 'react'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport { Toaster } from 'react-hot-toast'\nimport Layout from './components/Layout'\n\n// Lazy load all page components for optimal code splitting\nconst Dashboard = lazy(() => import('./pages/Dashboard'))\nconst Timer = lazy(() => import('./pages/Timer'))\nconst Tasks = lazy(() => import('./pages/Tasks'))\nconst Analytics = lazy(() => import('./pages/Analytics'))\nconst Habits = lazy(() => import('./pages/Habits'))\nconst Categories = lazy(() => import('./pages/Categories').then(module => ({ default: module.Categories })))\nconst Settings = lazy(() => import('./pages/Settings'))\n\n// Loading fallback component\nfunction PageLoader() {\n  return (\n    <div className=\"flex items-center justify-center min-h-screen\">\n      <div className=\"flex flex-col items-center space-y-4\">\n        <div className=\"w-12 h-12 border-4 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n        <p className=\"text-gray-600 text-sm\">Loading...</p>\n      </div>\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"min-h-screen bg-gray-50\">\n        <Layout>\n          <Suspense fallback={<PageLoader />}>\n            <Routes>\n              <Route path=\"/\" element={<Dashboard />} />\n              <Route path=\"/timer\" element={<Timer />} />\n              <Route path=\"/tasks\" element={<Tasks />} />\n              <Route path=\"/categories\" element={<Categories />} />\n              <Route path=\"/analytics\" element={<Analytics />} />\n              <Route path=\"/habits\" element={<Habits />} />\n              <Route path=\"/settings\" element={<Settings />} />\n            </Routes>\n          </Suspense>\n        </Layout>\n        <Toaster \n          position=\"top-right\"\n          toastOptions={{\n            duration: 4000,\n            style: {\n              background: '#fff',\n              color: '#374151',\n              boxShadow: '0 4px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n            },\n          }}\n        />\n      </div>\n    </Router>\n  )\n}\n\nexport default App","/**\r\n * Client-side single instance detection using localStorage and BroadcastChannel\r\n * Prevents multiple browser tabs from running the same application\r\n */\r\nexport class SingleInstanceClient {\r\n  private static instance: SingleInstanceClient;\r\n  private channel: BroadcastChannel;\r\n  private instanceId: string;\r\n  private isActive = false;\r\n  private heartbeatInterval: NodeJS.Timeout | null = null;\r\n\r\n  private constructor() {\r\n    this.instanceId = `task-tracker-${Date.now()}-${Math.random()}`;\r\n    this.channel = new BroadcastChannel('task-tracker-instances');\r\n    this.setupMessageHandling();\r\n  }\r\n\r\n  public static getInstance(): SingleInstanceClient {\r\n    if (!SingleInstanceClient.instance) {\r\n      SingleInstanceClient.instance = new SingleInstanceClient();\r\n    }\r\n    return SingleInstanceClient.instance;\r\n  }\r\n\r\n  /**\r\n   * Check if this should be the active instance\r\n   */\r\n  public async checkAndActivate(): Promise<boolean> {\r\n    // Check if there's already an active instance\r\n    const activeInstance = localStorage.getItem('task-tracker-active-instance');\r\n    const lastHeartbeat = localStorage.getItem('task-tracker-last-heartbeat');\r\n    \r\n    if (activeInstance && lastHeartbeat) {\r\n      const heartbeatAge = Date.now() - parseInt(lastHeartbeat);\r\n      \r\n      // If heartbeat is recent (less than 10 seconds), another instance is active\r\n      if (heartbeatAge < 10000) {\r\n        console.log('Another tab is already running Local Task Tracker');\r\n        this.showDuplicateTabWarning();\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Become the active instance\r\n    this.becomeActiveInstance();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Become the active instance\r\n   */\r\n  private becomeActiveInstance(): void {\r\n    this.isActive = true;\r\n    localStorage.setItem('task-tracker-active-instance', this.instanceId);\r\n    this.updateHeartbeat();\r\n    \r\n    // Start heartbeat to indicate this instance is alive\r\n    this.heartbeatInterval = setInterval(() => {\r\n      this.updateHeartbeat();\r\n    }, 5000);\r\n\r\n    // Notify other instances that we're now active\r\n    this.channel.postMessage({\r\n      type: 'instance-activated',\r\n      instanceId: this.instanceId,\r\n      timestamp: Date.now()\r\n    });\r\n\r\n    console.log('This tab is now the active Local Task Tracker instance');\r\n  }\r\n\r\n  /**\r\n   * Update heartbeat timestamp\r\n   */\r\n  private updateHeartbeat(): void {\r\n    localStorage.setItem('task-tracker-last-heartbeat', Date.now().toString());\r\n  }\r\n\r\n  /**\r\n   * Set up message handling between tabs\r\n   */\r\n  private setupMessageHandling(): void {\r\n    this.channel.addEventListener('message', (event) => {\r\n      const { type, instanceId } = event.data;\r\n\r\n      switch (type) {\r\n        case 'instance-activated':\r\n          if (instanceId !== this.instanceId && this.isActive) {\r\n            // Another instance became active, deactivate this one\r\n            this.deactivate();\r\n          }\r\n          break;\r\n\r\n        case 'ping':\r\n          if (this.isActive) {\r\n            // Respond to ping to show we're alive\r\n            this.channel.postMessage({\r\n              type: 'pong',\r\n              instanceId: this.instanceId,\r\n              timestamp: Date.now()\r\n            });\r\n          }\r\n          break;\r\n\r\n        case 'request-focus':\r\n          if (this.isActive) {\r\n            // Focus this tab\r\n            window.focus();\r\n            \r\n            // Show a notification that the app is already running\r\n            if ('Notification' in window && Notification.permission === 'granted') {\r\n              new Notification('Local Task Tracker', {\r\n                body: 'Application is already running in this tab.',\r\n                icon: '/favicon.ico'\r\n              });\r\n            }\r\n          }\r\n          break;\r\n      }\r\n    });\r\n\r\n    // Handle page visibility changes\r\n    document.addEventListener('visibilitychange', () => {\r\n      if (document.visibilityState === 'visible' && this.isActive) {\r\n        // Update heartbeat when tab becomes visible\r\n        this.updateHeartbeat();\r\n      }\r\n    });\r\n\r\n    // Handle page unload\r\n    window.addEventListener('beforeunload', () => {\r\n      this.cleanup();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Show warning about duplicate tabs\r\n   */\r\n  private showDuplicateTabWarning(): void {\r\n    // Create a simple overlay to inform user\r\n    const overlay = document.createElement('div');\r\n    overlay.style.cssText = `\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: rgba(0, 0, 0, 0.8);\r\n      color: white;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      z-index: 10000;\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n    `;\r\n\r\n    overlay.innerHTML = `\r\n      <div style=\"text-align: center; max-width: 500px; padding: 2rem;\">\r\n        <h2 style=\"margin-bottom: 1rem; font-size: 1.5rem;\">Local Task Tracker Already Running</h2>\r\n        <p style=\"margin-bottom: 2rem; line-height: 1.5;\">\r\n          Local Task Tracker is already running in another tab. \r\n          To prevent data conflicts, only one instance can be active at a time.\r\n        </p>\r\n        <div style=\"display: flex; gap: 1rem; justify-content: center;\">\r\n          <button id=\"focus-existing\" style=\"\r\n            padding: 0.75rem 1.5rem;\r\n            background: #3b82f6;\r\n            color: white;\r\n            border: none;\r\n            border-radius: 0.5rem;\r\n            cursor: pointer;\r\n            font-size: 1rem;\r\n          \">Switch to Active Tab</button>\r\n          <button id=\"close-tab\" style=\"\r\n            padding: 0.75rem 1.5rem;\r\n            background: #6b7280;\r\n            color: white;\r\n            border: none;\r\n            border-radius: 0.5rem;\r\n            cursor: pointer;\r\n            font-size: 1rem;\r\n          \">Close This Tab</button>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    document.body.appendChild(overlay);\r\n\r\n    // Handle button clicks\r\n    overlay.querySelector('#focus-existing')?.addEventListener('click', () => {\r\n      // Try to focus the existing tab\r\n      this.channel.postMessage({\r\n        type: 'request-focus',\r\n        instanceId: this.instanceId,\r\n        timestamp: Date.now()\r\n      });\r\n    });\r\n\r\n    overlay.querySelector('#close-tab')?.addEventListener('click', () => {\r\n      window.close();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deactivate this instance\r\n   */\r\n  private deactivate(): void {\r\n    this.isActive = false;\r\n    \r\n    if (this.heartbeatInterval) {\r\n      clearInterval(this.heartbeatInterval);\r\n      this.heartbeatInterval = null;\r\n    }\r\n\r\n    console.log('This tab is no longer the active instance');\r\n  }\r\n\r\n  /**\r\n   * Cleanup when instance is destroyed\r\n   */\r\n  private cleanup(): void {\r\n    if (this.isActive) {\r\n      localStorage.removeItem('task-tracker-active-instance');\r\n      localStorage.removeItem('task-tracker-last-heartbeat');\r\n    }\r\n    \r\n    if (this.heartbeatInterval) {\r\n      clearInterval(this.heartbeatInterval);\r\n    }\r\n    \r\n    this.channel.close();\r\n  }\r\n\r\n  /**\r\n   * Check if this instance is currently active\r\n   */\r\n  public isActiveInstance(): boolean {\r\n    return this.isActive;\r\n  }\r\n}\r\n\r\nexport const singleInstanceClient = SingleInstanceClient.getInstance();","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\nimport { singleInstanceClient } from './utils/SingleInstanceClient'\n\n// Route relative API calls to the backend server when running under Neutralino's internal server\n// Dynamic API base to support different ports\nconst API_BASE = import.meta.env.VITE_API_URL || 'http://localhost:8765'\nconst originalFetch = window.fetch\nwindow.fetch = ((input: RequestInfo | URL, init?: RequestInit) => {\n  try {\n    if (typeof input === 'string') {\n      if (input.startsWith('/api')) {\n        return originalFetch(`${API_BASE}${input}`, init)\n      }\n    } else if (input instanceof Request) {\n      if (input.url.startsWith('/api')) {\n        const rewritten = new Request(`${API_BASE}${new URL(input.url, 'http://localhost').pathname}`, input)\n        return originalFetch(rewritten, init)\n      }\n    }\n  } catch (_) {\n    // fall through\n  }\n  return originalFetch(input as any, init)\n}) as typeof window.fetch\n\nfunction renderApp() {\n  ReactDOM.createRoot(document.getElementById('root')!).render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  )\n}\n\n// Check for single instance before rendering, but gracefully degrade if API is unavailable\ntry {\n  const hasBroadcast = typeof (window as any).BroadcastChannel === 'function'\n  if (!hasBroadcast) {\n    renderApp()\n  } else {\n    singleInstanceClient.checkAndActivate()\n      .then((isActive) => {\n        if (isActive) renderApp()\n      })\n      .catch(() => renderApp())\n  }\n} catch {\n  renderApp()\n}"],"file":"assets/index-Bn6REmgD.js"}