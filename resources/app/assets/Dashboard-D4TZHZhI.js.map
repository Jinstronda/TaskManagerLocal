{"version":3,"file":"Dashboard-D4TZHZhI.js","sources":["../../src/components/Notifications/SmartBreakSuggestion.tsx","../../src/components/Notifications/ReviewPrompt.tsx","../../src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Coffee, Clock, TrendingUp, X, Play, SkipForward } from 'lucide-react';\r\nimport { BreakSuggestion } from '../../../../shared/types';\r\n\r\ninterface SmartBreakSuggestionProps {\r\n  suggestion: BreakSuggestion;\r\n  onAccept: (duration: number) => void;\r\n  onDismiss: () => void;\r\n  onSnooze: (minutes: number) => void;\r\n  isVisible: boolean;\r\n}\r\n\r\n/**\r\n * Smart break suggestion component that appears based on productivity patterns\r\n * Provides intelligent recommendations for break timing and duration\r\n */\r\nconst SmartBreakSuggestion: React.FC<SmartBreakSuggestionProps> = ({\r\n  suggestion,\r\n  onAccept,\r\n  onDismiss,\r\n  onSnooze,\r\n  isVisible,\r\n}) => {\r\n  const [customDuration, setCustomDuration] = useState(suggestion.suggestedDuration);\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  if (!isVisible) return null;\r\n\r\n  // Get icon based on suggestion type\r\n  const getTypeIcon = () => {\r\n    switch (suggestion.type) {\r\n      case 'time_based':\r\n        return <Clock className=\"w-5 h-5 text-orange-600\" />;\r\n      case 'pattern_based':\r\n        return <TrendingUp className=\"w-5 h-5 text-blue-600\" />;\r\n      case 'productivity_based':\r\n        return <Coffee className=\"w-5 h-5 text-green-600\" />;\r\n      default:\r\n        return <Coffee className=\"w-5 h-5 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  // Get confidence color\r\n  const getConfidenceColor = () => {\r\n    if (suggestion.confidence >= 0.8) return 'text-green-600 bg-green-100';\r\n    if (suggestion.confidence >= 0.6) return 'text-yellow-600 bg-yellow-100';\r\n    return 'text-orange-600 bg-orange-100';\r\n  };\r\n\r\n  // Format suggestion type for display\r\n  const formatSuggestionType = () => {\r\n    switch (suggestion.type) {\r\n      case 'time_based':\r\n        return 'Time-based';\r\n      case 'pattern_based':\r\n        return 'Pattern-based';\r\n      case 'productivity_based':\r\n        return 'Productivity-based';\r\n      default:\r\n        return 'Smart';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed top-4 right-4 z-50 max-w-sm\">\r\n      <div className=\"bg-white rounded-lg shadow-lg border border-gray-200 p-4 animate-slide-in-right\">\r\n        {/* Header */}\r\n        <div className=\"flex items-start justify-between mb-3\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            {getTypeIcon()}\r\n            <div>\r\n              <h3 className=\"font-semibold text-gray-900\">Time for a Break!</h3>\r\n              <div className=\"flex items-center space-x-2 mt-1\">\r\n                <span className=\"text-xs text-gray-500\">{formatSuggestionType()}</span>\r\n                <span className={`text-xs px-2 py-1 rounded-full ${getConfidenceColor()}`}>\r\n                  {Math.round(suggestion.confidence * 100)}% confidence\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={onDismiss}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n            aria-label=\"Dismiss suggestion\"\r\n          >\r\n            <X className=\"w-4 h-4\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Reason */}\r\n        <p className=\"text-sm text-gray-700 mb-3\">{suggestion.reason}</p>\r\n\r\n        {/* Stats */}\r\n        <div className=\"bg-gray-50 rounded-lg p-3 mb-4\">\r\n          <div className=\"grid grid-cols-2 gap-3 text-sm\">\r\n            <div>\r\n              <span className=\"text-gray-500\">Sessions completed:</span>\r\n              <span className=\"font-medium text-gray-900 ml-1\">\r\n                {suggestion.sessionsSinceLastBreak}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <span className=\"text-gray-500\">Work time:</span>\r\n              <span className=\"font-medium text-gray-900 ml-1\">\r\n                {Math.round(suggestion.totalWorkTime)} min\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Duration selector */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Break duration\r\n          </label>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <input\r\n              type=\"range\"\r\n              min=\"5\"\r\n              max=\"30\"\r\n              step=\"5\"\r\n              value={customDuration}\r\n              onChange={(e) => setCustomDuration(parseInt(e.target.value))}\r\n              className=\"flex-1 h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider\"\r\n            />\r\n            <span className=\"text-sm font-medium text-gray-900 min-w-[3rem]\">\r\n              {customDuration} min\r\n            </span>\r\n          </div>\r\n          <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n            <span>5 min</span>\r\n            <span>Quick</span>\r\n            <span>Standard</span>\r\n            <span>Long</span>\r\n            <span>30 min</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Action buttons */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <button\r\n            onClick={() => onAccept(customDuration)}\r\n            className=\"flex-1 bg-blue-600 text-white px-3 py-2 rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors flex items-center justify-center space-x-1\"\r\n          >\r\n            <Play className=\"w-4 h-4\" />\r\n            <span>Start Break</span>\r\n          </button>\r\n          \r\n          <div className=\"relative\">\r\n            <button\r\n              onClick={() => setIsExpanded(!isExpanded)}\r\n              className=\"px-3 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\r\n              aria-label=\"More options\"\r\n            >\r\n              <SkipForward className=\"w-4 h-4\" />\r\n            </button>\r\n            \r\n            {isExpanded && (\r\n              <div className=\"absolute right-0 top-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg py-1 min-w-[120px] z-10\">\r\n                <button\r\n                  onClick={() => {\r\n                    onSnooze(5);\r\n                    setIsExpanded(false);\r\n                  }}\r\n                  className=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors\"\r\n                >\r\n                  Snooze 5 min\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    onSnooze(10);\r\n                    setIsExpanded(false);\r\n                  }}\r\n                  className=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors\"\r\n                >\r\n                  Snooze 10 min\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    onSnooze(15);\r\n                    setIsExpanded(false);\r\n                  }}\r\n                  className=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors\"\r\n                >\r\n                  Snooze 15 min\r\n                </button>\r\n                <hr className=\"my-1\" />\r\n                <button\r\n                  onClick={() => {\r\n                    onDismiss();\r\n                    setIsExpanded(false);\r\n                  }}\r\n                  className=\"w-full text-left px-3 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors\"\r\n                >\r\n                  Dismiss\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Additional info toggle */}\r\n        <button\r\n          onClick={() => setIsExpanded(!isExpanded)}\r\n          className=\"w-full text-xs text-gray-500 hover:text-gray-700 mt-2 transition-colors\"\r\n        >\r\n          {isExpanded ? 'Less info' : 'More info'}\r\n        </button>\r\n\r\n        {isExpanded && (\r\n          <div className=\"mt-3 pt-3 border-t border-gray-100\">\r\n            <div className=\"text-xs text-gray-600 space-y-1\">\r\n              <p>\r\n                <strong>Suggestion type:</strong> {formatSuggestionType()}\r\n              </p>\r\n              <p>\r\n                <strong>Confidence:</strong> {Math.round(suggestion.confidence * 100)}%\r\n              </p>\r\n              <p>\r\n                <strong>Recommended duration:</strong> {suggestion.suggestedDuration} minutes\r\n              </p>\r\n              {suggestion.type === 'pattern_based' && (\r\n                <p className=\"text-blue-600\">\r\n                  Based on your historical break patterns\r\n                </p>\r\n              )}\r\n              {suggestion.type === 'productivity_based' && (\r\n                <p className=\"text-green-600\">\r\n                  Your focus quality may be declining\r\n                </p>\r\n              )}\r\n              {suggestion.type === 'time_based' && (\r\n                <p className=\"text-orange-600\">\r\n                  You've been working for {Math.round(suggestion.totalWorkTime)} minutes\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SmartBreakSuggestion;","import React, { useState } from 'react';\r\nimport { Calendar, Clock, Star, MessageSquare, CheckCircle, X, ArrowRight } from 'lucide-react';\r\nimport { ReviewPrompt, ReviewQuestion, ReviewResponse } from '../../../../shared/types';\r\n\r\ninterface ReviewPromptProps {\r\n  prompt: ReviewPrompt;\r\n  onSubmit: (response: ReviewResponse) => void;\r\n  onDismiss: () => void;\r\n  onSnooze: (minutes: number) => void;\r\n  isVisible: boolean;\r\n}\r\n\r\n/**\r\n * Review prompt component for daily and weekly reflection\r\n * Provides structured questions to help users reflect on their productivity\r\n */\r\nconst ReviewPromptComponent: React.FC<ReviewPromptProps> = ({\r\n  prompt,\r\n  onSubmit,\r\n  onDismiss,\r\n  onSnooze,\r\n  isVisible,\r\n}) => {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [responses, setResponses] = useState<Record<string, string | number>>({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  if (!isVisible) return null;\r\n\r\n  const currentQuestion = prompt.questions[currentQuestionIndex];\r\n  const isLastQuestion = currentQuestionIndex === prompt.questions.length - 1;\r\n  const canProceed = !currentQuestion.required || responses[currentQuestion.id] !== undefined;\r\n\r\n  // Handle response change\r\n  const handleResponseChange = (questionId: string, value: string | number) => {\r\n    setResponses(prev => ({\r\n      ...prev,\r\n      [questionId]: value,\r\n    }));\r\n  };\r\n\r\n  // Navigate to next question\r\n  const handleNext = () => {\r\n    if (isLastQuestion) {\r\n      handleSubmit();\r\n    } else {\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  // Navigate to previous question\r\n  const handlePrevious = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(prev => prev - 1);\r\n    }\r\n  };\r\n\r\n  // Submit the review\r\n  const handleSubmit = async () => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      const response: ReviewResponse = {\r\n        promptId: `${prompt.type}_${Date.now()}`,\r\n        responses,\r\n        completedAt: new Date(),\r\n      };\r\n      await onSubmit(response);\r\n    } catch (error) {\r\n      console.error('Failed to submit review:', error);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Get icon based on prompt type\r\n  const getPromptIcon = () => {\r\n    switch (prompt.type) {\r\n      case 'daily':\r\n        return <Calendar className=\"w-6 h-6 text-blue-600\" />;\r\n      case 'weekly':\r\n        return <Clock className=\"w-6 h-6 text-purple-600\" />;\r\n      case 'session_end':\r\n        return <Star className=\"w-6 h-6 text-green-600\" />;\r\n      default:\r\n        return <MessageSquare className=\"w-6 h-6 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  // Render question input based on type\r\n  const renderQuestionInput = (question: ReviewQuestion) => {\r\n    switch (question.type) {\r\n      case 'rating':\r\n        return (\r\n          <div className=\"space-y-2\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-gray-600\">Poor</span>\r\n              <span className=\"text-sm text-gray-600\">Excellent</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              {[1, 2, 3, 4, 5].map((rating) => (\r\n                <button\r\n                  key={rating}\r\n                  onClick={() => handleResponseChange(question.id, rating)}\r\n                  className={`w-10 h-10 rounded-full border-2 transition-all ${\r\n                    responses[question.id] === rating\r\n                      ? 'border-blue-600 bg-blue-600 text-white'\r\n                      : 'border-gray-300 text-gray-600 hover:border-blue-400'\r\n                  }`}\r\n                >\r\n                  {rating}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'text':\r\n        return (\r\n          <textarea\r\n            value={responses[question.id] as string || ''}\r\n            onChange={(e) => handleResponseChange(question.id, e.target.value)}\r\n            placeholder=\"Share your thoughts...\"\r\n            className=\"w-full p-3 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            rows={4}\r\n          />\r\n        );\r\n\r\n      case 'multiple_choice':\r\n        return (\r\n          <div className=\"space-y-2\">\r\n            {question.options?.map((option, index) => (\r\n              <label key={index} className=\"flex items-center space-x-3 cursor-pointer\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name={question.id}\r\n                  value={option}\r\n                  checked={responses[question.id] === option}\r\n                  onChange={(e) => handleResponseChange(question.id, e.target.value)}\r\n                  className=\"w-4 h-4 text-blue-600 border-gray-300 focus:ring-blue-500\"\r\n                />\r\n                <span className=\"text-gray-700\">{option}</span>\r\n              </label>\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case 'yes_no':\r\n        return (\r\n          <div className=\"flex items-center space-x-4\">\r\n            <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n              <input\r\n                type=\"radio\"\r\n                name={question.id}\r\n                value=\"yes\"\r\n                checked={responses[question.id] === 'yes'}\r\n                onChange={(e) => handleResponseChange(question.id, e.target.value)}\r\n                className=\"w-4 h-4 text-green-600 border-gray-300 focus:ring-green-500\"\r\n              />\r\n              <span className=\"text-gray-700\">Yes</span>\r\n            </label>\r\n            <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n              <input\r\n                type=\"radio\"\r\n                name={question.id}\r\n                value=\"no\"\r\n                checked={responses[question.id] === 'no'}\r\n                onChange={(e) => handleResponseChange(question.id, e.target.value)}\r\n                className=\"w-4 h-4 text-red-600 border-gray-300 focus:ring-red-500\"\r\n              />\r\n              <span className=\"text-gray-700\">No</span>\r\n            </label>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full max-h-[90vh] overflow-hidden\">\r\n        {/* Header */}\r\n        <div className=\"bg-gradient-to-r from-blue-500 to-purple-600 text-white p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              {getPromptIcon()}\r\n              <div>\r\n                <h2 className=\"text-xl font-semibold\">{prompt.title}</h2>\r\n                <p className=\"text-blue-100 text-sm\">\r\n                  {prompt.type === 'daily' && 'Daily Reflection'}\r\n                  {prompt.type === 'weekly' && 'Weekly Review'}\r\n                  {prompt.type === 'session_end' && 'Session Reflection'}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={onDismiss}\r\n              className=\"text-white hover:text-gray-200 transition-colors\"\r\n              aria-label=\"Close review\"\r\n            >\r\n              <X className=\"w-5 h-5\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Progress indicator */}\r\n        <div className=\"px-6 py-3 bg-gray-50 border-b\">\r\n          <div className=\"flex items-center justify-between text-sm text-gray-600 mb-2\">\r\n            <span>Question {currentQuestionIndex + 1} of {prompt.questions.length}</span>\r\n            <span>{Math.round(((currentQuestionIndex + 1) / prompt.questions.length) * 100)}%</span>\r\n          </div>\r\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n            <div\r\n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n              style={{ width: `${((currentQuestionIndex + 1) / prompt.questions.length) * 100}%` }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Question content */}\r\n        <div className=\"p-6 flex-1 overflow-y-auto\">\r\n          <div className=\"mb-6\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-3\">\r\n              {currentQuestion.question}\r\n            </h3>\r\n            {currentQuestion.required && (\r\n              <p className=\"text-sm text-red-600 mb-3\">* Required</p>\r\n            )}\r\n            {renderQuestionInput(currentQuestion)}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"px-6 py-4 bg-gray-50 border-t\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              {currentQuestionIndex > 0 && (\r\n                <button\r\n                  onClick={handlePrevious}\r\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\r\n                >\r\n                  Previous\r\n                </button>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-2\">\r\n              <button\r\n                onClick={() => onSnooze(15)}\r\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-800 transition-colors\"\r\n              >\r\n                Snooze 15m\r\n              </button>\r\n              \r\n              <button\r\n                onClick={handleNext}\r\n                disabled={!canProceed || isSubmitting}\r\n                className={`px-6 py-2 rounded-lg font-medium transition-all flex items-center space-x-2 ${\r\n                  canProceed && !isSubmitting\r\n                    ? 'bg-blue-600 text-white hover:bg-blue-700'\r\n                    : 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                }`}\r\n              >\r\n                {isSubmitting ? (\r\n                  <>\r\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\r\n                    <span>Submitting...</span>\r\n                  </>\r\n                ) : isLastQuestion ? (\r\n                  <>\r\n                    <CheckCircle className=\"w-4 h-4\" />\r\n                    <span>Complete</span>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <span>Next</span>\r\n                    <ArrowRight className=\"w-4 h-4\" />\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewPromptComponent;","import React, { useEffect } from 'react';\r\nimport { useNotificationStore } from '../stores/notificationStore';\r\nimport { SmartBreakSuggestion, ReviewPrompt } from '../components/Notifications';\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const { \r\n    activeBreakSuggestion, \r\n    activeReviewPrompt,\r\n    checkForBreakSuggestion \r\n  } = useNotificationStore();\r\n\r\n  useEffect(() => {\r\n    // Check for notifications when dashboard loads\r\n    checkForBreakSuggestion();\r\n  }, [checkForBreakSuggestion]);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Smart Notifications */}\r\n      {activeBreakSuggestion && <SmartBreakSuggestion />}\r\n      {activeReviewPrompt && <ReviewPrompt />}\r\n      \r\n      <div>\r\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Dashboard</h1>\r\n        <p className=\"text-gray-600 dark:text-gray-400 mt-1\">Welcome to your productivity overview</p>\r\n      </div>\r\n      \r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n          <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Today's Focus Time</h3>\r\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mt-2\">0h 0m</p>\r\n        </div>\r\n        \r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n          <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Sessions Completed</h3>\r\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mt-2\">0</p>\r\n        </div>\r\n        \r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n          <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Current Streak</h3>\r\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mt-2\">0 days</p>\r\n        </div>\r\n        \r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n          <h3 className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Focus Score</h3>\r\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-gray-100 mt-2\">0</p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4\">Quick Start</h2>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">\r\n          Start your first focus session by navigating to the Timer page.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard"],"names":["SmartBreakSuggestion","suggestion","onAccept","onDismiss","onSnooze","isVisible","customDuration","setCustomDuration","useState","suggestedDuration","isExpanded","setIsExpanded","formatSuggestionType","type","className","children","jsxs","jsx","Clock","TrendingUp","Coffee","getTypeIcon","confidence","Math","round","onClick","X","reason","sessionsSinceLastBreak","totalWorkTime","min","max","step","value","onChange","e","parseInt","target","Play","SkipForward","ReviewPromptComponent","prompt","onSubmit","currentQuestionIndex","setCurrentQuestionIndex","responses","setResponses","isSubmitting","setIsSubmitting","currentQuestion","questions","isLastQuestion","length","canProceed","required","id","handleResponseChange","questionId","prev","handleSubmit","async","response","promptId","Date","now","completedAt","error","Calendar","Star","MessageSquare","getPromptIcon","title","style","width","question","map","rating","placeholder","rows","options","option","index","name","checked","renderQuestionInput","disabled","Fragment","CheckCircle","ArrowRight","Dashboard","activeBreakSuggestion","activeReviewPrompt","checkForBreakSuggestion","useNotificationStore","useEffect","ReviewPrompt"],"mappings":"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"}