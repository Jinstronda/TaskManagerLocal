{"version":3,"file":"Tasks-DF9PgFV-.js","sources":["../../src/components/Task/TaskForm.tsx","../../src/components/Task/TaskItem.tsx","../../src/components/Task/TaskList.tsx","../../src/components/Task/TaskFilters.tsx","../../src/components/Task/ConfirmDialog.tsx","../../src/pages/Tasks.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { X, Calendar, Clock, AlertCircle, Plus } from 'lucide-react';\r\nimport { Task, CreateTaskForm } from '../../../../shared/types';\r\nimport { useCategoryStore } from '../../stores/categoryStore';\r\n\r\ninterface TaskFormProps {\r\n  task?: Task;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSubmit: (taskData: CreateTaskForm) => Promise<void>;\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst TaskForm: React.FC<TaskFormProps> = ({\r\n  task,\r\n  isOpen,\r\n  onClose,\r\n  onSubmit,\r\n  isLoading = false\r\n}) => {\r\n  const { categories, fetchCategories, createCategory } = useCategoryStore();\r\n  \r\n  const [formData, setFormData] = useState<CreateTaskForm>({\r\n    title: '',\r\n    description: '',\r\n    categoryId: 0,\r\n    estimatedDuration: undefined,\r\n    priority: 'medium',\r\n    dueDate: undefined\r\n  });\r\n\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [showCategoryForm, setShowCategoryForm] = useState(false);\r\n  const [newCategoryName, setNewCategoryName] = useState('');\r\n  const [newCategoryColor, setNewCategoryColor] = useState('#3B82F6');\r\n  const [isCreatingCategory, setIsCreatingCategory] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (categories.length === 0) {\r\n      fetchCategories();\r\n    }\r\n  }, [categories.length, fetchCategories]);\r\n\r\n  useEffect(() => {\r\n    if (task) {\r\n      setFormData({\r\n        title: task.title,\r\n        description: task.description || '',\r\n        categoryId: task.categoryId,\r\n        estimatedDuration: task.estimatedDuration,\r\n        priority: task.priority,\r\n        dueDate: task.dueDate ? task.dueDate.toISOString().split('T')[0] : undefined\r\n      });\r\n    } else {\r\n      setFormData({\r\n        title: '',\r\n        description: '',\r\n        categoryId: categories.length > 0 ? categories[0].id : 0,\r\n        estimatedDuration: undefined,\r\n        priority: 'medium',\r\n        dueDate: undefined\r\n      });\r\n    }\r\n    setErrors({});\r\n  }, [task, categories, isOpen]);\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.title.trim()) {\r\n      newErrors.title = 'Title is required';\r\n    }\r\n\r\n    if (!formData.categoryId) {\r\n      newErrors.categoryId = 'Category is required';\r\n    }\r\n\r\n    if (formData.estimatedDuration && formData.estimatedDuration <= 0) {\r\n      newErrors.estimatedDuration = 'Duration must be greater than 0';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await onSubmit(formData);\r\n      onClose();\r\n    } catch (error) {\r\n      // Error handling is done in the parent component\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field: keyof CreateTaskForm, value: any) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const handleCreateCategory = async () => {\r\n    if (!newCategoryName.trim()) return;\r\n\r\n    setIsCreatingCategory(true);\r\n    try {\r\n      const newCategory = await createCategory({\r\n        name: newCategoryName.trim(),\r\n        color: newCategoryColor,\r\n        description: '',\r\n        weeklyGoal: 0\r\n      });\r\n\r\n      // Validate that category was created successfully before using it\r\n      if (newCategory && newCategory.id) {\r\n        // Set the newly created category as selected\r\n        setFormData(prev => ({ ...prev, categoryId: newCategory.id }));\r\n\r\n        // Reset form\r\n        setNewCategoryName('');\r\n        setNewCategoryColor('#3B82F6');\r\n        setShowCategoryForm(false);\r\n\r\n        // Refresh categories\r\n        await fetchCategories();\r\n      } else {\r\n        console.error('Category creation failed: No category returned or missing ID');\r\n        // Show user-friendly error message\r\n        setErrors(prev => ({\r\n          ...prev,\r\n          categoryId: 'Failed to create category. Please try again.'\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to create category:', error);\r\n      // Show user-friendly error message\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        categoryId: 'Failed to create category. Please check your connection and try again.'\r\n      }));\r\n    } finally {\r\n      setIsCreatingCategory(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md mx-4\">\r\n        <div className=\"flex items-center justify-between p-6 border-b\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900\">\r\n            {task ? 'Edit Task' : 'Create New Task'}\r\n          </h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n            disabled={isLoading}\r\n          >\r\n            <X size={24} />\r\n          </button>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-4\">\r\n          {/* Title */}\r\n          <div>\r\n            <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Title *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              value={formData.title}\r\n              onChange={(e) => handleInputChange('title', e.target.value)}\r\n              className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900 bg-white ${\r\n                errors.title ? 'border-red-500' : 'border-gray-300'\r\n              }`}\r\n              placeholder=\"Enter task title\"\r\n              disabled={isLoading}\r\n            />\r\n            {errors.title && (\r\n              <p className=\"mt-1 text-sm text-red-600 flex items-center\">\r\n                <AlertCircle size={16} className=\"mr-1\" />\r\n                {errors.title}\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Description */}\r\n          <div>\r\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              id=\"description\"\r\n              value={formData.description}\r\n              onChange={(e) => handleInputChange('description', e.target.value)}\r\n              rows={3}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900 bg-white\"\r\n              placeholder=\"Enter task description (optional)\"\r\n              disabled={isLoading}\r\n            />\r\n          </div>\r\n\r\n          {/* Category */}\r\n          <div>\r\n            <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Category *\r\n            </label>\r\n            <div className=\"flex space-x-2\">\r\n              <select\r\n                id=\"category\"\r\n                value={formData.categoryId}\r\n                onChange={(e) => handleInputChange('categoryId', parseInt(e.target.value))}\r\n                className={`flex-1 px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900 bg-white ${\r\n                  errors.categoryId ? 'border-red-500' : 'border-gray-300'\r\n                }`}\r\n                disabled={isLoading}\r\n              >\r\n                <option value={0}>Select a category</option>\r\n                {categories.map(category => (\r\n                  <option key={category.id} value={category.id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowCategoryForm(!showCategoryForm)}\r\n                className=\"px-3 py-2 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-md transition-colors flex items-center\"\r\n                disabled={isLoading}\r\n                title=\"Create new category\"\r\n              >\r\n                <Plus size={16} />\r\n              </button>\r\n            </div>\r\n            \r\n            {/* New Category Form */}\r\n            {showCategoryForm && (\r\n              <div className=\"mt-3 p-3 bg-gray-50 rounded-md border\">\r\n                <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Create New Category</h4>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex space-x-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={newCategoryName}\r\n                      onChange={(e) => setNewCategoryName(e.target.value)}\r\n                      placeholder=\"Category name\"\r\n                      className=\"flex-1 px-2 py-1 text-sm border border-gray-300 rounded focus:outline-none focus:ring-1 focus:ring-blue-500 text-gray-900 bg-white\"\r\n                      disabled={isCreatingCategory}\r\n                    />\r\n                    <input\r\n                      type=\"color\"\r\n                      value={newCategoryColor}\r\n                      onChange={(e) => setNewCategoryColor(e.target.value)}\r\n                      className=\"w-10 h-8 border border-gray-300 rounded cursor-pointer\"\r\n                      disabled={isCreatingCategory}\r\n                      title=\"Category color\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex space-x-2\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={handleCreateCategory}\r\n                      disabled={!newCategoryName.trim() || isCreatingCategory}\r\n                      className=\"px-3 py-1 text-sm bg-blue-600 text-white rounded hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    >\r\n                      {isCreatingCategory ? 'Creating...' : 'Create'}\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        setShowCategoryForm(false);\r\n                        setNewCategoryName('');\r\n                        setNewCategoryColor('#3B82F6');\r\n                      }}\r\n                      className=\"px-3 py-1 text-sm bg-gray-200 text-gray-700 rounded hover:bg-gray-300\"\r\n                      disabled={isCreatingCategory}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {errors.categoryId && (\r\n              <p className=\"mt-1 text-sm text-red-600 flex items-center\">\r\n                <AlertCircle size={16} className=\"mr-1\" />\r\n                {errors.categoryId}\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Priority and Duration Row */}\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            {/* Priority */}\r\n            <div>\r\n              <label htmlFor=\"priority\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Priority\r\n              </label>\r\n              <select\r\n                id=\"priority\"\r\n                value={formData.priority}\r\n                onChange={(e) => handleInputChange('priority', e.target.value as Task['priority'])}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900 bg-white\"\r\n                disabled={isLoading}\r\n              >\r\n                <option value=\"low\">Low</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"high\">High</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Estimated Duration */}\r\n            <div>\r\n              <label htmlFor=\"duration\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Duration (min)\r\n              </label>\r\n              <div className=\"relative\">\r\n                <Clock size={16} className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"duration\"\r\n                  value={formData.estimatedDuration || ''}\r\n                  onChange={(e) => handleInputChange('estimatedDuration', e.target.value ? parseInt(e.target.value) : undefined)}\r\n                  className={`w-full pl-10 pr-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900 bg-white ${\r\n                    errors.estimatedDuration ? 'border-red-500' : 'border-gray-300'\r\n                  }`}\r\n                  placeholder=\"30\"\r\n                  min=\"1\"\r\n                  disabled={isLoading}\r\n                />\r\n              </div>\r\n              {errors.estimatedDuration && (\r\n                <p className=\"mt-1 text-sm text-red-600 flex items-center\">\r\n                  <AlertCircle size={16} className=\"mr-1\" />\r\n                  {errors.estimatedDuration}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Due Date */}\r\n          <div>\r\n            <label htmlFor=\"dueDate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Due Date\r\n            </label>\r\n            <div className=\"relative\">\r\n              <Calendar size={16} className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n              <input\r\n                type=\"date\"\r\n                id=\"dueDate\"\r\n                value={formData.dueDate || ''}\r\n                onChange={(e) => handleInputChange('dueDate', e.target.value || undefined)}\r\n                className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 text-gray-900 bg-white\"\r\n                disabled={isLoading}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Form Actions */}\r\n          <div className=\"flex justify-end space-x-3 pt-4\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md transition-colors\"\r\n              disabled={isLoading}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'Saving...' : (task ? 'Update Task' : 'Create Task')}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;","import React, { useState } from 'react';\r\nimport { \r\n  CheckCircle2, \r\n  Circle, \r\n  Clock, \r\n  Calendar, \r\n  Edit3, \r\n  Trash2, \r\n  AlertTriangle,\r\n  Play\r\n} from 'lucide-react';\r\nimport { Task } from '../../../../shared/types';\r\nimport { useCategoryStore } from '../../stores/categoryStore';\r\n\r\ninterface TaskItemProps {\r\n  task: Task;\r\n  onEdit: (task: Task) => void;\r\n  onDelete: (task: Task) => void;\r\n  onComplete: (task: Task) => void;\r\n  onStartSession?: (task: Task) => void;\r\n}\r\n\r\nconst TaskItem: React.FC<TaskItemProps> = ({\r\n  task,\r\n  onEdit,\r\n  onDelete,\r\n  onComplete,\r\n  onStartSession\r\n}) => {\r\n  const { categories } = useCategoryStore();\r\n  const [showActions, setShowActions] = useState(false);\r\n\r\n  const category = categories.find(c => c.id === task.categoryId);\r\n  \r\n  const isOverdue = task.dueDate && task.dueDate < new Date() && task.status === 'active';\r\n  const isDueToday = task.dueDate && \r\n    task.dueDate.toDateString() === new Date().toDateString() && \r\n    task.status === 'active';\r\n\r\n  const getPriorityColor = (priority: Task['priority']) => {\r\n    switch (priority) {\r\n      case 'high': return 'text-red-600 bg-red-50';\r\n      case 'medium': return 'text-yellow-600 bg-yellow-50';\r\n      case 'low': return 'text-green-600 bg-green-50';\r\n      default: return 'text-gray-600 bg-gray-50';\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: Task['status']) => {\r\n    switch (status) {\r\n      case 'completed': return 'text-green-600';\r\n      case 'archived': return 'text-gray-400';\r\n      case 'active': return 'text-blue-600';\r\n      default: return 'text-gray-600';\r\n    }\r\n  };\r\n\r\n  const formatDuration = (minutes: number) => {\r\n    if (minutes < 60) return `${minutes}m`;\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    return mins > 0 ? `${hours}h ${mins}m` : `${hours}h`;\r\n  };\r\n\r\n  const formatDate = (date: Date) => {\r\n    const today = new Date();\r\n    const tomorrow = new Date(today);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    \r\n    if (date.toDateString() === today.toDateString()) {\r\n      return 'Today';\r\n    } else if (date.toDateString() === tomorrow.toDateString()) {\r\n      return 'Tomorrow';\r\n    } else {\r\n      return date.toLocaleDateString();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`group task-card card-interactive p-6 transition-all duration-300 ${\r\n        task.status === 'completed' ? 'opacity-70' : ''\r\n      } ${isOverdue ? 'border-danger-200 !bg-danger-25' : ''} ${\r\n        isDueToday && !isOverdue ? 'border-warning-200 !bg-warning-25' : ''\r\n      }`}\r\n      onMouseEnter={() => setShowActions(true)}\r\n      onMouseLeave={() => setShowActions(false)}\r\n    >\r\n      <div className=\"flex items-start justify-between\">\r\n        <div className=\"flex items-start space-x-3 flex-1\">\r\n          {/* Completion Toggle */}\r\n          <button\r\n            onClick={() => onComplete(task)}\r\n            className={`mt-1.5 transition-all duration-200 hover:scale-110 ${\r\n              task.status === 'completed'\r\n                ? 'text-success-600 hover:text-success-700'\r\n                : 'text-neutral-300 hover:text-success-500'\r\n            }`}\r\n            disabled={task.status === 'archived'}\r\n          >\r\n            {task.status === 'completed' ? (\r\n              <CheckCircle2 size={22} className=\"drop-shadow-sm\" />\r\n            ) : (\r\n              <Circle size={22} />\r\n            )}\r\n          </button>\r\n\r\n          {/* Task Content */}\r\n          <div className=\"flex-1 min-w-0\">\r\n            <div className=\"flex items-center space-x-3 mb-2\">\r\n              <h3 className={`font-semibold text-neutral-900 text-lg tracking-tight ${\r\n                task.status === 'completed' ? 'line-through opacity-60' : ''\r\n              }`}>\r\n                {task.title}\r\n              </h3>\r\n\r\n              {/* Priority Badge */}\r\n              <span className={`status-indicator priority-${task.priority} text-xs font-semibold`}>\r\n                {task.priority}\r\n              </span>\r\n\r\n              {/* Overdue/Due Today Indicators */}\r\n              {isOverdue && (\r\n                <span className=\"flex items-center text-danger-600 text-xs font-medium bg-danger-100 px-2 py-1 rounded-lg\">\r\n                  <AlertTriangle size={12} className=\"mr-1\" />\r\n                  Overdue\r\n                </span>\r\n              )}\r\n              {isDueToday && !isOverdue && (\r\n                <span className=\"flex items-center text-warning-600 text-xs font-medium bg-warning-100 px-2 py-1 rounded-lg\">\r\n                  <Calendar size={12} className=\"mr-1\" />\r\n                  Due Today\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            {/* Description */}\r\n            {task.description && (\r\n              <p className=\"text-neutral-600 mb-3 line-clamp-2 leading-relaxed\">\r\n                {task.description}\r\n              </p>\r\n            )}\r\n\r\n            {/* Task Meta Information */}\r\n            <div className=\"flex items-center space-x-4 text-sm text-neutral-500\">\r\n              {/* Category */}\r\n              {category && (\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div\r\n                    className=\"w-3 h-3 rounded-full shadow-sm\"\r\n                    style={{ backgroundColor: category.color }}\r\n                  />\r\n                  <span className=\"font-medium\">{category.name}</span>\r\n                </div>\r\n              )}\r\n\r\n              {/* Duration Info */}\r\n              {(task.estimatedDuration || task.actualDuration > 0) && (\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Clock size={14} />\r\n                  <span>\r\n                    {task.actualDuration > 0 && (\r\n                      <span className=\"text-success-600 font-semibold\">\r\n                        {formatDuration(task.actualDuration)}\r\n                      </span>\r\n                    )}\r\n                    {task.estimatedDuration && task.actualDuration > 0 && (\r\n                      <span className=\"text-neutral-400 mx-1\">/</span>\r\n                    )}\r\n                    {task.estimatedDuration && (\r\n                      <span className=\"text-neutral-600\">\r\n                        {formatDuration(task.estimatedDuration)} est.\r\n                      </span>\r\n                    )}\r\n                  </span>\r\n                </div>\r\n              )}\r\n\r\n              {/* Due Date */}\r\n              {task.dueDate && (\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Calendar size={14} />\r\n                  <span className={isOverdue ? 'text-danger-600 font-semibold' : 'font-medium'}>\r\n                    {formatDate(task.dueDate)}\r\n                  </span>\r\n                </div>\r\n              )}\r\n\r\n              {/* Status */}\r\n              <span className={`status-${task.status} text-xs`}>\r\n                {task.status}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Action Buttons */}\r\n        <div className={`flex items-center space-x-2 transition-all duration-300 ${\r\n          showActions ? 'opacity-100 translate-x-0' : 'opacity-0 translate-x-2'\r\n        }`}>\r\n          {/* Start Session Button */}\r\n          {task.status === 'active' && onStartSession && (\r\n            <button\r\n              onClick={() => onStartSession(task)}\r\n              className=\"p-2.5 text-success-600 hover:text-success-700 hover:bg-success-50 rounded-xl transition-all duration-200 hover:scale-110 active:scale-95 shadow-soft\"\r\n              title=\"Start focus session\"\r\n            >\r\n              <Play size={16} />\r\n            </button>\r\n          )}\r\n\r\n          {/* Edit Button */}\r\n          {task.status !== 'archived' && (\r\n            <button\r\n              onClick={() => onEdit(task)}\r\n              className=\"p-2.5 text-primary-600 hover:text-primary-700 hover:bg-primary-50 rounded-xl transition-all duration-200 hover:scale-110 active:scale-95 shadow-soft\"\r\n              title=\"Edit task\"\r\n            >\r\n              <Edit3 size={16} />\r\n            </button>\r\n          )}\r\n\r\n          {/* Delete Button */}\r\n          <button\r\n            onClick={() => onDelete(task)}\r\n            className=\"p-2.5 text-danger-500 hover:text-danger-600 hover:bg-danger-50 rounded-xl transition-all duration-200 hover:scale-110 active:scale-95 shadow-soft\"\r\n            title=\"Delete task\"\r\n          >\r\n            <Trash2 size={16} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;","import React, { useMemo, useCallback } from 'react';\r\nimport { Task } from '../../../../shared/types';\r\nimport TaskItem from './TaskItem';\r\nimport { useCategoryStore } from '../../stores/categoryStore';\r\n\r\ninterface TaskListProps {\r\n  tasks: Task[];\r\n  onEditTask: (task: Task) => void;\r\n  onDeleteTask: (task: Task) => void;\r\n  onCompleteTask: (task: Task) => void;\r\n  onStartSession?: (task: Task) => void;\r\n  groupByCategory?: boolean;\r\n  showEmptyState?: boolean;\r\n}\r\n\r\nconst TaskList: React.FC<TaskListProps> = React.memo(({\r\n  tasks,\r\n  onEditTask,\r\n  onDeleteTask,\r\n  onCompleteTask,\r\n  onStartSession,\r\n  groupByCategory = false,\r\n  showEmptyState = true\r\n}) => {\r\n  const { categories } = useCategoryStore();\r\n\r\n  // Memoize task categorization to prevent unnecessary recalculations\r\n  const { activeTasks, completedTasks, archivedTasks } = useMemo(() => ({\r\n    activeTasks: tasks.filter(task => task.status === 'active'),\r\n    completedTasks: tasks.filter(task => task.status === 'completed'),\r\n    archivedTasks: tasks.filter(task => task.status === 'archived')\r\n  }), [tasks]);\r\n\r\n  // Memoize category grouping function\r\n  const groupTasksByCategory = useCallback((taskList: Task[]) => {\r\n    return taskList.reduce((acc, task) => {\r\n      const categoryId = task.categoryId;\r\n      if (!acc[categoryId]) {\r\n        acc[categoryId] = [];\r\n      }\r\n      acc[categoryId].push(task);\r\n      return acc;\r\n    }, {} as Record<number, Task[]>);\r\n  }, []);\r\n\r\n  if (tasks.length === 0 && showEmptyState) {\r\n    return (\r\n      <div className=\"text-center py-16 animate-fade-in\">\r\n        <div className=\"text-neutral-300 mb-6\">\r\n          <svg\r\n            className=\"mx-auto h-16 w-16\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={1.5}\r\n              d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <h3 className=\"text-xl font-semibold text-neutral-900 mb-3 tracking-tight\">No tasks found</h3>\r\n        <p className=\"text-neutral-600 max-w-sm mx-auto leading-relaxed\">\r\n          Create your first task to get started with organizing and tracking your work.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!groupByCategory) {\r\n    return (\r\n      <div className=\"space-y-8\">\r\n        {/* Active Tasks Section */}\r\n        {activeTasks.length > 0 && (\r\n          <div className=\"space-y-4 animate-slide-up\">\r\n            {activeTasks.map((task, index) => (\r\n              <div\r\n                key={task.id}\r\n                className=\"animate-slide-up\"\r\n                style={{ animationDelay: `${index * 50}ms` }}\r\n              >\r\n                <TaskItem\r\n                  task={task}\r\n                  onEdit={onEditTask}\r\n                  onDelete={onDeleteTask}\r\n                  onComplete={onCompleteTask}\r\n                  onStartSession={onStartSession}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Completed Tasks Section */}\r\n        {completedTasks.length > 0 && (\r\n          <div className=\"space-y-4\">\r\n            {/* Completed Tasks Header */}\r\n            <div className=\"flex items-center space-x-4 pt-8 border-t border-neutral-200\">\r\n              <div className=\"w-5 h-5 rounded-full bg-success-500 shadow-soft\" />\r\n              <h3 className=\"text-xl font-semibold text-neutral-700 tracking-tight\">\r\n                Completed Tasks\r\n              </h3>\r\n              <span className=\"text-sm text-neutral-500 bg-neutral-100 px-2.5 py-1 rounded-full font-medium\">\r\n                {completedTasks.length} task{completedTasks.length !== 1 ? 's' : ''}\r\n              </span>\r\n            </div>\r\n\r\n            {/* Completed Tasks List */}\r\n            <div className=\"space-y-4\">\r\n              {completedTasks.map((task, index) => (\r\n                <div\r\n                  key={task.id}\r\n                  className=\"animate-slide-up\"\r\n                  style={{ animationDelay: `${index * 50}ms` }}\r\n                >\r\n                  <TaskItem\r\n                    task={task}\r\n                    onEdit={onEditTask}\r\n                    onDelete={onDeleteTask}\r\n                    onComplete={onCompleteTask}\r\n                    onStartSession={onStartSession}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Archived Tasks Section */}\r\n        {archivedTasks.length > 0 && (\r\n          <div className=\"space-y-4\">\r\n            {/* Archived Tasks Header */}\r\n            <div className=\"flex items-center space-x-4 pt-8 border-t border-neutral-200\">\r\n              <div className=\"w-5 h-5 rounded-full bg-neutral-400 shadow-soft\" />\r\n              <h3 className=\"text-xl font-semibold text-neutral-600 tracking-tight\">\r\n                Archived Tasks\r\n              </h3>\r\n              <span className=\"text-sm text-neutral-500 bg-neutral-100 px-2.5 py-1 rounded-full font-medium\">\r\n                {archivedTasks.length} task{archivedTasks.length !== 1 ? 's' : ''}\r\n              </span>\r\n            </div>\r\n\r\n            {/* Archived Tasks List */}\r\n            <div className=\"space-y-4 opacity-60\">\r\n              {archivedTasks.map((task, index) => (\r\n                <div\r\n                  key={task.id}\r\n                  className=\"animate-slide-up\"\r\n                  style={{ animationDelay: `${index * 50}ms` }}\r\n                >\r\n                  <TaskItem\r\n                    task={task}\r\n                    onEdit={onEditTask}\r\n                    onDelete={onDeleteTask}\r\n                    onComplete={onCompleteTask}\r\n                    onStartSession={onStartSession}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const renderCategorySection = useCallback((tasksByCategory: Record<number, Task[]>, sectionOpacity = \"opacity-100\") => {\r\n    // Sort categories by name\r\n    const sortedCategoryIds = Object.keys(tasksByCategory)\r\n      .map(id => parseInt(id))\r\n      .sort((a, b) => {\r\n        const categoryA = categories.find(c => c.id === a);\r\n        const categoryB = categories.find(c => c.id === b);\r\n        return (categoryA?.name || '').localeCompare(categoryB?.name || '');\r\n      });\r\n\r\n    return sortedCategoryIds.map(categoryId => {\r\n      const category = categories.find(c => c.id === categoryId);\r\n      const categoryTasks = tasksByCategory[categoryId];\r\n\r\n      if (!category || categoryTasks.length === 0) return null;\r\n\r\n      return (\r\n        <div key={categoryId} className={`space-y-3 ${sectionOpacity}`}>\r\n          {/* Category Header */}\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div\r\n              className=\"w-4 h-4 rounded-full\"\r\n              style={{ backgroundColor: category.color }}\r\n            />\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">\r\n              {category.name}\r\n            </h3>\r\n            <span className=\"text-sm text-gray-500\">\r\n              ({categoryTasks.length} task{categoryTasks.length !== 1 ? 's' : ''})\r\n            </span>\r\n          </div>\r\n\r\n          {/* Category Tasks */}\r\n          <div className=\"space-y-3 ml-7\">\r\n            {categoryTasks.map(task => (\r\n              <TaskItem\r\n                key={task.id}\r\n                task={task}\r\n                onEdit={onEditTask}\r\n                onDelete={onDeleteTask}\r\n                onComplete={onCompleteTask}\r\n                onStartSession={onStartSession}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }, [categories]);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Active Tasks by Category */}\r\n      {activeTasks.length > 0 && (\r\n        <div className=\"space-y-6\">\r\n          {renderCategorySection(groupTasksByCategory(activeTasks))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Completed Tasks by Category */}\r\n      {completedTasks.length > 0 && (\r\n        <div className=\"space-y-6\">\r\n          {/* Completed Tasks Section Header */}\r\n          <div className=\"flex items-center space-x-3 pt-6 border-t border-gray-200\">\r\n            <div className=\"w-4 h-4 rounded-full bg-green-500\" />\r\n            <h3 className=\"text-lg font-semibold text-gray-700\">\r\n              Completed Tasks\r\n            </h3>\r\n            <span className=\"text-sm text-gray-500\">\r\n              ({completedTasks.length} task{completedTasks.length !== 1 ? 's' : ''})\r\n            </span>\r\n          </div>\r\n          {renderCategorySection(groupTasksByCategory(completedTasks), \"opacity-75\")}\r\n        </div>\r\n      )}\r\n\r\n      {/* Archived Tasks by Category */}\r\n      {archivedTasks.length > 0 && (\r\n        <div className=\"space-y-6\">\r\n          {/* Archived Tasks Section Header */}\r\n          <div className=\"flex items-center space-x-3 pt-6 border-t border-gray-200\">\r\n            <div className=\"w-4 h-4 rounded-full bg-gray-400\" />\r\n            <h3 className=\"text-lg font-semibold text-gray-600\">\r\n              Archived Tasks\r\n            </h3>\r\n            <span className=\"text-sm text-gray-500\">\r\n              ({archivedTasks.length} task{archivedTasks.length !== 1 ? 's' : ''})\r\n            </span>\r\n          </div>\r\n          {renderCategorySection(groupTasksByCategory(archivedTasks), \"opacity-50\")}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nTaskList.displayName = 'TaskList';\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport { Search, Filter, X } from 'lucide-react';\r\nimport { Task } from '../../../../shared/types';\r\nimport { useCategoryStore } from '../../stores/categoryStore';\r\n\r\ninterface TaskFiltersProps {\r\n  filters: {\r\n    categoryId?: number;\r\n    status?: Task['status'];\r\n    priority?: Task['priority'];\r\n    searchQuery?: string;\r\n  };\r\n  onFiltersChange: (filters: any) => void;\r\n  taskCounts?: {\r\n    total: number;\r\n    active: number;\r\n    completed: number;\r\n    archived: number;\r\n  };\r\n}\r\n\r\nconst TaskFilters: React.FC<TaskFiltersProps> = ({\r\n  filters,\r\n  onFiltersChange,\r\n  taskCounts\r\n}) => {\r\n  const { categories } = useCategoryStore();\r\n\r\n  const handleFilterChange = (key: string, value: any) => {\r\n    onFiltersChange({\r\n      ...filters,\r\n      [key]: value === '' ? undefined : value\r\n    });\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    onFiltersChange({});\r\n  };\r\n\r\n  const hasActiveFilters = Object.values(filters).some(value => value !== undefined && value !== '');\r\n\r\n  return (\r\n    <div className=\"card p-6 space-y-4\">\r\n      {/* Search Bar */}\r\n      <div className=\"relative\">\r\n        <Search size={18} className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-neutral-400\" />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search tasks...\"\r\n          value={filters.searchQuery || ''}\r\n          onChange={(e) => handleFilterChange('searchQuery', e.target.value)}\r\n          className=\"input pl-10 text-neutral-900\"\r\n        />\r\n      </div>\r\n\r\n      {/* Filter Controls */}\r\n      <div className=\"flex flex-wrap items-center gap-4\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Filter size={16} className=\"text-neutral-500\" />\r\n          <span className=\"text-sm font-medium text-neutral-700\">Filters:</span>\r\n        </div>\r\n\r\n        {/* Category Filter */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <label htmlFor=\"category-filter\" className=\"text-sm text-neutral-600\">\r\n            Category:\r\n          </label>\r\n          <select\r\n            id=\"category-filter\"\r\n            value={filters.categoryId || ''}\r\n            onChange={(e) => handleFilterChange('categoryId', e.target.value ? parseInt(e.target.value) : undefined)}\r\n            className=\"text-sm border border-neutral-200 rounded-lg px-3 py-1.5 focus:outline-none focus:ring-2 focus:ring-neutral-200 focus:border-neutral-400 text-neutral-900 bg-white transition-all duration-200\"\r\n          >\r\n            <option value=\"\" className=\"text-neutral-900\">All Categories</option>\r\n            {categories.map(category => (\r\n              <option key={category.id} value={category.id} className=\"text-neutral-900\">\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Status Filter */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <label htmlFor=\"status-filter\" className=\"text-sm text-neutral-600\">\r\n            Status:\r\n          </label>\r\n          <select\r\n            id=\"status-filter\"\r\n            value={filters.status || ''}\r\n            onChange={(e) => handleFilterChange('status', e.target.value || undefined)}\r\n            className=\"text-sm border border-neutral-200 rounded-lg px-3 py-1.5 focus:outline-none focus:ring-2 focus:ring-neutral-200 focus:border-neutral-400 text-neutral-900 bg-white transition-all duration-200\"\r\n          >\r\n            <option value=\"\" className=\"text-neutral-900\">All Status</option>\r\n            <option value=\"active\" className=\"text-neutral-900\">Active</option>\r\n            <option value=\"completed\" className=\"text-neutral-900\">Completed</option>\r\n            <option value=\"archived\" className=\"text-neutral-900\">Archived</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* Priority Filter */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <label htmlFor=\"priority-filter\" className=\"text-sm text-neutral-600\">\r\n            Priority:\r\n          </label>\r\n          <select\r\n            id=\"priority-filter\"\r\n            value={filters.priority || ''}\r\n            onChange={(e) => handleFilterChange('priority', e.target.value || undefined)}\r\n            className=\"text-sm border border-neutral-200 rounded-lg px-3 py-1.5 focus:outline-none focus:ring-2 focus:ring-neutral-200 focus:border-neutral-400 text-neutral-900 bg-white transition-all duration-200\"\r\n          >\r\n            <option value=\"\" className=\"text-neutral-900\">All Priorities</option>\r\n            <option value=\"high\" className=\"text-neutral-900\">High</option>\r\n            <option value=\"medium\" className=\"text-neutral-900\">Medium</option>\r\n            <option value=\"low\" className=\"text-neutral-900\">Low</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* Clear Filters */}\r\n        {hasActiveFilters && (\r\n          <button\r\n            onClick={clearFilters}\r\n            className=\"flex items-center space-x-1 text-sm text-danger-600 hover:text-danger-700 transition-colors\"\r\n          >\r\n            <X size={16} />\r\n            <span>Clear Filters</span>\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Task Counts */}\r\n      {taskCounts && (\r\n        <div className=\"flex items-center space-x-6 text-sm text-neutral-600 pt-4 border-t border-neutral-100\">\r\n          <div className=\"flex items-center space-x-1\">\r\n            <span className=\"font-medium\">{taskCounts.total}</span>\r\n            <span>Total</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-1\">\r\n            <div className=\"w-2 h-2 bg-neutral-400 rounded-full\"></div>\r\n            <span className=\"font-medium\">{taskCounts.active}</span>\r\n            <span>Active</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-1\">\r\n            <div className=\"w-2 h-2 bg-success-500 rounded-full\"></div>\r\n            <span className=\"font-medium\">{taskCounts.completed}</span>\r\n            <span>Completed</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-1\">\r\n            <div className=\"w-2 h-2 bg-neutral-300 rounded-full\"></div>\r\n            <span className=\"font-medium\">{taskCounts.archived}</span>\r\n            <span>Archived</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskFilters;","import React from 'react';\r\nimport { AlertTriangle, X } from 'lucide-react';\r\n\r\ninterface ConfirmDialogProps {\r\n  isOpen: boolean;\r\n  title: string;\r\n  message: string;\r\n  confirmText?: string;\r\n  cancelText?: string;\r\n  onConfirm: () => void;\r\n  onCancel: () => void;\r\n  isLoading?: boolean;\r\n  variant?: 'danger' | 'warning' | 'info';\r\n}\r\n\r\nconst ConfirmDialog: React.FC<ConfirmDialogProps> = ({\r\n  isOpen,\r\n  title,\r\n  message,\r\n  confirmText = 'Confirm',\r\n  cancelText = 'Cancel',\r\n  onConfirm,\r\n  onCancel,\r\n  isLoading = false,\r\n  variant = 'danger'\r\n}) => {\r\n  if (!isOpen) return null;\r\n\r\n  const getVariantStyles = () => {\r\n    switch (variant) {\r\n      case 'danger':\r\n        return {\r\n          icon: 'text-red-600',\r\n          button: 'bg-red-600 hover:bg-red-700 focus:ring-red-500'\r\n        };\r\n      case 'warning':\r\n        return {\r\n          icon: 'text-yellow-600',\r\n          button: 'bg-yellow-600 hover:bg-yellow-700 focus:ring-yellow-500'\r\n        };\r\n      case 'info':\r\n        return {\r\n          icon: 'text-blue-600',\r\n          button: 'bg-blue-600 hover:bg-blue-700 focus:ring-blue-500'\r\n        };\r\n      default:\r\n        return {\r\n          icon: 'text-red-600',\r\n          button: 'bg-red-600 hover:bg-red-700 focus:ring-red-500'\r\n        };\r\n    }\r\n  };\r\n\r\n  const styles = getVariantStyles();\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md mx-4\">\r\n        <div className=\"flex items-center justify-between p-6 border-b\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <AlertTriangle size={24} className={styles.icon} />\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">\r\n              {title}\r\n            </h2>\r\n          </div>\r\n          <button\r\n            onClick={onCancel}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n            disabled={isLoading}\r\n          >\r\n            <X size={24} />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          <p className=\"text-gray-700 mb-6\">\r\n            {message}\r\n          </p>\r\n\r\n          <div className=\"flex justify-end space-x-3\">\r\n            <button\r\n              onClick={onCancel}\r\n              className=\"px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-md transition-colors\"\r\n              disabled={isLoading}\r\n            >\r\n              {cancelText}\r\n            </button>\r\n            <button\r\n              onClick={onConfirm}\r\n              className={`px-4 py-2 text-white rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed ${styles.button}`}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'Processing...' : confirmText}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;","import React, { useState, useEffect } from 'react';\r\nimport { Plus, LayoutGrid, List } from 'lucide-react';\r\nimport { Task } from '../../../shared/types';\r\nimport { useTaskStore } from '../stores/taskStore';\r\nimport { useCategoryStore } from '../stores/categoryStore';\r\nimport TaskForm from '../components/Task/TaskForm';\r\nimport TaskList from '../components/Task/TaskList';\r\nimport TaskFilters from '../components/Task/TaskFilters';\r\nimport ConfirmDialog from '../components/Task/ConfirmDialog';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst Tasks: React.FC = () => {\r\n  const {\r\n    filteredTasks,\r\n    filters,\r\n    isLoading,\r\n    error,\r\n    fetchTasks,\r\n    createTask,\r\n    updateTask,\r\n    deleteTask,\r\n    completeTask,\r\n    setFilters,\r\n    clearError\r\n  } = useTaskStore();\r\n\r\n  const { categories, fetchCategories } = useCategoryStore();\r\n\r\n  const [isTaskFormOpen, setIsTaskFormOpen] = useState(false);\r\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\r\n  const [deletingTask, setDeletingTask] = useState<Task | null>(null);\r\n  const [groupByCategory, setGroupByCategory] = useState(false);\r\n\r\n  // Load data on component mount\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    if (categories.length === 0) {\r\n      fetchCategories();\r\n    }\r\n  }, [fetchTasks, fetchCategories, categories.length]);\r\n\r\n  // Show error toast\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error(error);\r\n      clearError();\r\n    }\r\n  }, [error, clearError]);\r\n\r\n  // Calculate task counts\r\n  const taskCounts = {\r\n    total: filteredTasks.length,\r\n    active: filteredTasks.filter(t => t.status === 'active').length,\r\n    completed: filteredTasks.filter(t => t.status === 'completed').length,\r\n    archived: filteredTasks.filter(t => t.status === 'archived').length\r\n  };\r\n\r\n  const handleCreateTask = async (taskData: any) => {\r\n    try {\r\n      await createTask(taskData);\r\n      toast.success('Task created successfully!');\r\n      setIsTaskFormOpen(false);\r\n    } catch (error) {\r\n      // Error is handled by the store and shown via toast\r\n    }\r\n  };\r\n\r\n  const handleUpdateTask = async (taskData: any) => {\r\n    if (!editingTask) return;\r\n    \r\n    try {\r\n      await updateTask(editingTask.id, taskData);\r\n      toast.success('Task updated successfully!');\r\n      setEditingTask(null);\r\n    } catch (error) {\r\n      // Error is handled by the store and shown via toast\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async () => {\r\n    if (!deletingTask) return;\r\n    \r\n    try {\r\n      await deleteTask(deletingTask.id);\r\n      toast.success('Task deleted successfully!');\r\n      setDeletingTask(null);\r\n    } catch (error) {\r\n      // Error is handled by the store and shown via toast\r\n    }\r\n  };\r\n\r\n  const handleCompleteTask = async (task: Task) => {\r\n    try {\r\n      if (task.status === 'completed') {\r\n        // Reactivate task\r\n        await updateTask(task.id, { status: 'active', completedAt: undefined });\r\n        toast.success('Task reactivated!');\r\n      } else {\r\n        // Complete task\r\n        await completeTask(task.id);\r\n        toast.success('Task completed!');\r\n      }\r\n    } catch (error) {\r\n      // Error is handled by the store and shown via toast\r\n    }\r\n  };\r\n\r\n  const handleStartSession = (task: Task) => {\r\n    // This would integrate with the timer functionality\r\n    // For now, just show a toast\r\n    toast.success(`Starting focus session for: ${task.title}`);\r\n    // TODO: Integrate with timer store to start a session with this task\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-8 animate-fade-in\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-start\">\r\n        <div className=\"space-y-1\">\r\n          <h1 className=\"text-3xl font-bold text-neutral-900 tracking-tight\">Tasks</h1>\r\n          <p className=\"text-neutral-600\">Manage your tasks and track your progress</p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          {/* View Toggle */}\r\n          <div className=\"flex items-center bg-neutral-100 rounded-xl p-1 shadow-inner-soft\">\r\n            <button\r\n              onClick={() => setGroupByCategory(false)}\r\n              className={`p-2.5 rounded-lg transition-all duration-200 ${\r\n                !groupByCategory\r\n                  ? 'bg-white text-neutral-900 shadow-soft'\r\n                  : 'text-neutral-500 hover:text-neutral-700 hover:bg-neutral-50'\r\n              }`}\r\n              title=\"List view\"\r\n            >\r\n              <List size={16} />\r\n            </button>\r\n            <button\r\n              onClick={() => setGroupByCategory(true)}\r\n              className={`p-2.5 rounded-lg transition-all duration-200 ${\r\n                groupByCategory\r\n                  ? 'bg-white text-neutral-900 shadow-soft'\r\n                  : 'text-neutral-500 hover:text-neutral-700 hover:bg-neutral-50'\r\n              }`}\r\n              title=\"Group by category\"\r\n            >\r\n              <LayoutGrid size={16} />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Add Task Button */}\r\n          <button\r\n            onClick={() => setIsTaskFormOpen(true)}\r\n            className=\"btn-primary btn-md flex items-center space-x-2\"\r\n          >\r\n            <Plus size={18} />\r\n            <span>Add Task</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <TaskFilters\r\n        filters={filters}\r\n        onFiltersChange={setFilters}\r\n        taskCounts={taskCounts}\r\n      />\r\n\r\n      {/* Task List */}\r\n      <div className=\"card\">\r\n        {isLoading ? (\r\n          <div className=\"flex items-center justify-center py-16\">\r\n            <div className=\"flex flex-col items-center space-y-4\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-2 border-primary-200 border-t-primary-600\"></div>\r\n              <span className=\"text-sm text-neutral-600 font-medium\">Loading tasks...</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"p-8\">\r\n            <TaskList\r\n              tasks={filteredTasks}\r\n              onEditTask={setEditingTask}\r\n              onDeleteTask={setDeletingTask}\r\n              onCompleteTask={handleCompleteTask}\r\n              onStartSession={handleStartSession}\r\n              groupByCategory={groupByCategory}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Task Form Modal */}\r\n      <TaskForm\r\n        task={editingTask || undefined}\r\n        isOpen={isTaskFormOpen || editingTask !== null}\r\n        onClose={() => {\r\n          setIsTaskFormOpen(false);\r\n          setEditingTask(null);\r\n        }}\r\n        onSubmit={editingTask ? handleUpdateTask : handleCreateTask}\r\n        isLoading={isLoading}\r\n      />\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <ConfirmDialog\r\n        isOpen={deletingTask !== null}\r\n        title=\"Delete Task\"\r\n        message={`Are you sure you want to delete \"${deletingTask?.title}\"? This action cannot be undone.`}\r\n        confirmText=\"Delete\"\r\n        cancelText=\"Cancel\"\r\n        onConfirm={handleDeleteTask}\r\n        onCancel={() => setDeletingTask(null)}\r\n        isLoading={isLoading}\r\n        variant=\"danger\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;"],"names":["TaskForm","task","isOpen","onClose","onSubmit","isLoading","categories","fetchCategories","createCategory","useCategoryStore","formData","setFormData","useState","title","description","categoryId","estimatedDuration","priority","dueDate","errors","setErrors","showCategoryForm","setShowCategoryForm","newCategoryName","setNewCategoryName","newCategoryColor","setNewCategoryColor","isCreatingCategory","setIsCreatingCategory","useEffect","length","toISOString","split","id","handleInputChange","field","value","prev","className","children","jsxs","jsx","onClick","disabled","X","size","async","e","preventDefault","newErrors","trim","Object","keys","validateForm","error","htmlFor","type","onChange","target","placeholder","AlertCircle","rows","parseInt","map","category","name","Plus","newCategory","color","weeklyGoal","Clock","min","Calendar","TaskItem","onEdit","onDelete","onComplete","onStartSession","showActions","setShowActions","find","c","isOverdue","Date","status","isDueToday","toDateString","formatDuration","minutes","hours","Math","floor","mins","onMouseEnter","onMouseLeave","CheckCircle2","Circle","AlertTriangle","style","backgroundColor","actualDuration","date","today","tomorrow","setDate","getDate","toLocaleDateString","formatDate","Play","Edit3","Trash2","TaskList","React","memo","tasks","onEditTask","onDeleteTask","onCompleteTask","groupByCategory","showEmptyState","activeTasks","completedTasks","archivedTasks","useMemo","filter","groupTasksByCategory","useCallback","taskList","reduce","acc","push","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","index","animationDelay","renderCategorySection","tasksByCategory","sectionOpacity","sort","a","b","categoryA","categoryB","localeCompare","categoryTasks","displayName","TaskFilters","filters","onFiltersChange","taskCounts","handleFilterChange","key","hasActiveFilters","values","some","Search","searchQuery","Filter","total","active","completed","archived","ConfirmDialog","message","confirmText","cancelText","onConfirm","onCancel","variant","styles","icon","button","getVariantStyles","Tasks","filteredTasks","fetchTasks","createTask","updateTask","deleteTask","completeTask","setFilters","clearError","useTaskStore","isTaskFormOpen","setIsTaskFormOpen","editingTask","setEditingTask","deletingTask","setDeletingTask","setGroupByCategory","toast","t","List","LayoutGrid","completedAt","success","taskData"],"mappings":"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"}