import{c as e,s as t}from"./vendor-state-Jewp0_hO.js";const n=new class{clientId;heartbeatInterval=null;statusCheckInterval=null;HEARTBEAT_INTERVAL=3e4;STATUS_CHECK_INTERVAL=1e3;constructor(){this.clientId=this.generateClientId(),this.startHeartbeat()}async startTimer(e,t,n,s){const i=await fetch("/api/timer/start",{method:"POST",headers:{"Content-Type":"application/json","X-Client-Id":this.clientId},body:JSON.stringify({sessionType:e,plannedDuration:t,taskId:n,categoryId:s})});if(!i.ok)throw new Error("Failed to start background timer");const a=await i.json();if(!a.success)throw new Error(a.error?.message||"Failed to start background timer");return this.startStatusChecking(),a.data}async pauseTimer(){const e=await fetch("/api/timer/pause",{method:"POST",headers:{"Content-Type":"application/json","X-Client-Id":this.clientId}});if(!e.ok)throw new Error("Failed to pause background timer");const t=await e.json();if(!t.success)throw new Error(t.error?.message||"Failed to pause background timer")}async resumeTimer(){const e=await fetch("/api/timer/resume",{method:"POST",headers:{"Content-Type":"application/json","X-Client-Id":this.clientId}});if(!e.ok)throw new Error("Failed to resume background timer");const t=await e.json();if(!t.success)throw new Error(t.error?.message||"Failed to resume background timer");this.startStatusChecking()}async stopTimer(){const e=await fetch("/api/timer/stop",{method:"POST",headers:{"Content-Type":"application/json","X-Client-Id":this.clientId}});if(!e.ok)throw new Error("Failed to stop background timer");const t=await e.json();if(!t.success)throw new Error(t.error?.message||"Failed to stop background timer");this.stopStatusChecking()}async completeTimer(e,t){const n=await fetch("/api/timer/complete",{method:"POST",headers:{"Content-Type":"application/json","X-Client-Id":this.clientId},body:JSON.stringify({qualityRating:e,notes:t})});if(!n.ok)throw new Error("Failed to complete background timer");const s=await n.json();if(!s.success)throw new Error(s.error?.message||"Failed to complete background timer");this.stopStatusChecking()}async getTimerStatus(){const e=await fetch("/api/timer/status",{method:"GET",headers:{"X-Client-Id":this.clientId}});if(!e.ok)throw new Error("Failed to get timer status");const t=await e.json();if(!t.success)throw new Error(t.error?.message||"Failed to get timer status");return t.data}async testNotification(){const e=await fetch("/api/timer/test-notification",{method:"POST",headers:{"Content-Type":"application/json"}});if(!e.ok)throw new Error("Failed to send test notification");const t=await e.json();if(!t.success)throw new Error(t.error?.message||"Failed to send test notification")}async getTrayStatus(){const e=await fetch("/api/timer/tray-status",{method:"GET"});if(!e.ok)throw new Error("Failed to get tray status");const t=await e.json();if(!t.success)throw new Error(t.error?.message||"Failed to get tray status");return t.data}startHeartbeat(){this.heartbeatInterval||(this.heartbeatInterval=window.setInterval(async()=>{try{await fetch("/api/timer/heartbeat",{method:"POST",headers:{"Content-Type":"application/json","X-Client-Id":this.clientId}})}catch(e){}},this.HEARTBEAT_INTERVAL))}stopHeartbeat(){this.heartbeatInterval&&(clearInterval(this.heartbeatInterval),this.heartbeatInterval=null)}startStatusChecking(){if(this.statusCheckInterval)return;let e=0;let t=!0;this.statusCheckInterval=window.setInterval(async()=>{try{const n=await this.getTimerStatus();e>0&&(e=0,window.dispatchEvent(new CustomEvent("timerConnectionRestored",{detail:{reconnected:!0}}))),t=!0,window.dispatchEvent(new CustomEvent("timerStatusUpdate",{detail:n}))}catch(n){e++,t&&e>=3&&(t=!1,window.dispatchEvent(new CustomEvent("timerConnectionLost",{detail:{failureCount:e,message:"Backend connection lost, timer may be out of sync"}}))),e>=5&&(this.stopStatusChecking(),window.dispatchEvent(new CustomEvent("timerConnectionFailed",{detail:{message:"Timer synchronization failed, please refresh the page"}})))}},this.STATUS_CHECK_INTERVAL)}stopStatusChecking(){this.statusCheckInterval&&(clearInterval(this.statusCheckInterval),this.statusCheckInterval=null)}async attemptReconnection(){try{await this.getTimerStatus();return this.startStatusChecking(),window.dispatchEvent(new CustomEvent("timerConnectionRestored",{detail:{reconnected:!0,manual:!0}})),!0}catch(e){return!1}}generateClientId(){return`client_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}getClientId(){return this.clientId}isSupported(){return"undefined"!=typeof fetch}cleanup(){this.stopHeartbeat(),this.stopStatusChecking()}},s={deepWorkDuration:50,quickTaskDuration:15,breakDuration:10,customDuration:25,autoStartBreaks:!1,soundEnabled:!0,notificationsEnabled:!0},i={isRunning:!1,isPaused:!1,currentSession:null,remainingTime:60*s.deepWorkDuration,sessionType:"deep_work",plannedDuration:s.deepWorkDuration,startTime:null,pausedTime:0,lastTickTime:null,sessionPreferences:s,isSystemSleepDetected:!1,lastActiveTime:Date.now()},a=e()(t((e,t)=>({...i,startTimer:(n,s,i,a=null)=>{const o=Date.now(),r={id:0,...void 0!==i&&{taskId:i},categoryId:a,sessionType:n,startTime:new Date(o),plannedDuration:s,completed:!1,createdAt:new Date(o)};e({isRunning:!0,isPaused:!1,currentSession:r,remainingTime:60*s,sessionType:n,plannedDuration:s,startTime:o,pausedTime:0,lastTickTime:o,isSystemSleepDetected:!1,lastActiveTime:o}),t().createSessionOnServer(r)},pauseTimer:()=>{const s=t();s.isRunning&&!s.isPaused&&(e({isPaused:!0,lastTickTime:null}),n.pauseTimer().catch(e=>{}))},resumeTimer:()=>{const s=t();s.isRunning&&s.isPaused&&(e({isPaused:!1,lastTickTime:Date.now(),lastActiveTime:Date.now(),isSystemSleepDetected:!1}),n.resumeTimer().catch(e=>{}))},stopTimer:()=>{const n=t();if(!n.isRunning)return;const s=Math.round((60*n.plannedDuration-n.remainingTime)/60);e({isRunning:!1,isPaused:!1,remainingTime:0,startTime:null,pausedTime:0,lastTickTime:null}),n.currentSession&&t().updateSessionOnServer({...n.currentSession,endTime:new Date,actualDuration:s,completed:!1})},tick:()=>{const n=t();if(!n.isRunning||n.isPaused||!n.lastTickTime)return;const s=Date.now(),i=Math.floor((s-n.lastTickTime)/1e3);if(i>120)return void e({isSystemSleepDetected:!0,isPaused:!0,lastTickTime:null});const a=Math.max(0,n.remainingTime-i);e({remainingTime:a,lastTickTime:s,lastActiveTime:s}),0===a&&t().completeSession()},completeSession:async(n,s)=>{const i=t();if(!i.currentSession)return;const a=Math.round((60*i.plannedDuration-i.remainingTime)/60),o={...i.currentSession,endTime:new Date,actualDuration:a,...void 0!==n&&{qualityRating:n},...void 0!==s&&{notes:s},completed:!0};e({isRunning:!1,isPaused:!1,remainingTime:0,startTime:null,pausedTime:0,lastTickTime:null,currentSession:null}),await t().updateSessionOnServer(o),t().showCompletionNotification(o)},updateSessionType:n=>{const s=t(),i=t().getDurationForSessionType(n);e({sessionType:n,plannedDuration:i,remainingTime:s.isRunning?s.remainingTime:60*i}),s.currentSession&&e({currentSession:{...s.currentSession,sessionType:n,plannedDuration:i}})},updatePlannedDuration:n=>{const s=t();e({plannedDuration:n,remainingTime:s.isRunning?s.remainingTime:60*n}),s.currentSession&&e({currentSession:{...s.currentSession,plannedDuration:n}})},detectSystemSleep:()=>{const n=t();Date.now()-n.lastActiveTime>12e4&&n.isRunning&&!n.isPaused&&e({isSystemSleepDetected:!0,isPaused:!0,lastTickTime:null})},updateLastActiveTime:()=>{e({lastActiveTime:Date.now(),isSystemSleepDetected:!1})},updateSessionPreferences:n=>{e({sessionPreferences:{...t().sessionPreferences,...n}}),localStorage.setItem("sessionPreferences",JSON.stringify(t().sessionPreferences))},resetTimer:()=>{e(i)},getDurationForSessionType:e=>{const n=t().sessionPreferences;switch(e){case"deep_work":default:return n.deepWorkDuration;case"quick_task":return n.quickTaskDuration;case"break":return n.breakDuration;case"custom":return n.customDuration}},createSessionOnServer:async s=>{try{const i=await n.startTimer(s.sessionType,s.plannedDuration,s.taskId,s.categoryId);e({currentSession:{...t().currentSession,id:i.sessionId}})}catch(i){}},updateSessionOnServer:async e=>{try{e.completed?await n.completeTimer(e.qualityRating,e.notes):await n.stopTimer()}catch(t){}},switchTask:async n=>{const s=t();if(!s.currentSession||!s.isRunning)return;const i=Math.round((60*s.plannedDuration-s.remainingTime)/60);s.currentSession.taskId&&i>0&&await t().updateTaskActualDuration(s.currentSession.taskId,i);const a={...s.currentSession,taskId:n,startTime:new Date};e({currentSession:a}),await t().updateSessionOnServer(a)},completeCurrentTask:async()=>{const e=t();if(e.currentSession?.taskId)try{const n=Math.round((60*e.plannedDuration-e.remainingTime)/60);n>0&&await t().updateTaskActualDuration(e.currentSession.taskId,n);if(!(await fetch(`http://localhost:8765/api/tasks/${e.currentSession.taskId}/complete`,{method:"PATCH"})).ok)throw new Error("Failed to complete task");t().sessionPreferences.notificationsEnabled&&"Notification"in window&&"granted"===Notification.permission&&new Notification("Task Completed!",{body:`Task completed with ${n} minutes of work`,icon:"/favicon.ico"})}catch(n){throw n}},updateTaskActualDuration:async(e,t)=>{try{if(!(await fetch(`http://localhost:8765/api/tasks/${e}/add-time`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({additionalMinutes:t})})).ok)throw new Error("Failed to update task duration")}catch(n){}},showCompletionNotification:e=>{if(!t().sessionPreferences.notificationsEnabled)return;const n=`${e.sessionType.replace("_"," ")} session completed! Duration: ${e.actualDuration} minutes`;"Notification"in window&&"granted"===Notification.permission&&new Notification("Session Complete",{body:n,icon:"/favicon.ico"})}}))),o=localStorage.getItem("sessionPreferences");if(o)try{const e=JSON.parse(o);a.getState().updateSessionPreferences(e)}catch(l){}if("undefined"!=typeof window){let e=null;window.addEventListener("timerStatusUpdate",e=>{const t=e.detail,n=a.getState();if(t&&"object"==typeof t){const{timerState:e,remainingTime:s,isIdle:i}=t;if(!e&&n.isRunning)return void a.setState({isRunning:!1,isPaused:!1,lastTickTime:null});if(e){const{isRunning:t,isPaused:i,sessionType:o,plannedDuration:r}=e,c={};t!==n.isRunning&&(c.isRunning=t),i!==n.isPaused&&(c.isPaused=i),void 0!==s&&s>=0&&t&&!i?(c.remainingTime=s,c.lastTickTime=Date.now()):i&&(c.lastTickTime=null),o&&o!==n.sessionType&&(c.sessionType=o),void 0!==r&&r!==n.plannedDuration&&(c.plannedDuration=r),Object.keys(c).length>0&&a.setState(c)}}});let t=null,s=0;const i=3,o=[5e3,1e4,3e4];window.addEventListener("timerConnectionLost",e=>{if(s<i){const e=o[Math.min(s,o.length-1)];t=window.setTimeout(async()=>{s++;await n.attemptReconnection()&&(s=0)},e)}}),window.addEventListener("timerConnectionRestored",e=>{t&&(clearTimeout(t),t=null),s=0}),window.addEventListener("timerConnectionFailed",e=>{t&&(clearTimeout(t),t=null),s=i});const r=()=>{e&&clearInterval(e),e=window.setInterval(()=>{const e=a.getState();if(e.isRunning&&!e.isPaused&&e.lastTickTime){const t=Date.now();if(Math.floor((t-e.lastTickTime)/1e3)>=1&&e.remainingTime>0){const n=Math.max(0,e.remainingTime-1);a.setState({remainingTime:n,lastTickTime:t}),0===n&&e.completeSession()}}else e.isPaused&&e.lastTickTime&&a.setState({lastTickTime:null})},1e3)};a.subscribe(e=>({isRunning:e.isRunning,isPaused:e.isPaused}),(t,n)=>{!t.isRunning||t.isPaused||n.isRunning&&!n.isPaused||r(),t.isRunning&&!t.isPaused||!e||(clearInterval(e),e=null)})}const r={showMindfulnessPrompt:!1,showBreathingExercise:!1,showTransitionAnimation:!1,showSessionReflection:!1,currentTransitionType:null,currentMindfulnessType:"manual",mindfulnessEnabled:!0,transitionAnimationsEnabled:!0,breathingExerciseEnabled:!0,sessionReflectionEnabled:!0,autoShowOnSessionEnd:!0,autoShowOnSessionStart:!1,autoShowOnBreakStart:!0,mindfulnessSessionsCompleted:0,totalMindfulnessTime:0,favoriteExercises:[],streakDays:0,lastMindfulnessDate:null},c=e()(t((e,t)=>({...r,showMindfulnessPromptModal:n=>{t().mindfulnessEnabled&&e({showMindfulnessPrompt:!0,currentMindfulnessType:n})},hideMindfulnessPrompt:()=>{e({showMindfulnessPrompt:!1})},showBreathingExerciseModal:()=>{t().breathingExerciseEnabled&&e({showBreathingExercise:!0})},hideBreathingExercise:()=>{e({showBreathingExercise:!1})},showTransitionAnimationModal:n=>{t().transitionAnimationsEnabled&&e({showTransitionAnimation:!0,currentTransitionType:n})},hideTransitionAnimation:()=>{e({showTransitionAnimation:!1,currentTransitionType:null})},showSessionReflectionModal:()=>{t().sessionReflectionEnabled&&e({showSessionReflection:!0})},hideSessionReflection:()=>{e({showSessionReflection:!1})},updateMindfulnessSettings:n=>{e(n),t().saveSettings()},recordMindfulnessSession:(n,s)=>{e(e=>({mindfulnessSessionsCompleted:e.mindfulnessSessionsCompleted+1,totalMindfulnessTime:e.totalMindfulnessTime+s,lastMindfulnessDate:new Date})),t().updateStreak();const i=t();i.favoriteExercises.filter(e=>e===n).length>=3&&!i.favoriteExercises.includes(n)&&t().addFavoriteExercise(n),t().saveSettings()},updateStreak:()=>{const n=t(),s=new Date,i=n.lastMindfulnessDate;if(!i)return void e({streakDays:1});const a=Math.floor((s.getTime()-i.getTime())/864e5);0!==a&&e(1===a?e=>({streakDays:e.streakDays+1}):{streakDays:1})},addFavoriteExercise:t=>{e(e=>({favoriteExercises:[...e.favoriteExercises.filter(e=>e!==t),t]}))},removeFavoriteExercise:t=>{e(e=>({favoriteExercises:e.favoriteExercises.filter(e=>e!==t)}))},checkAutoTriggers:e=>{const n=t();if(n.mindfulnessEnabled)switch(e){case"session_start":n.autoShowOnSessionStart?(t().showTransitionAnimationModal("session_start"),setTimeout(()=>{t().hideTransitionAnimation(),t().showMindfulnessPromptModal("session_start")},3e3)):n.transitionAnimationsEnabled&&(t().showTransitionAnimationModal("session_start"),setTimeout(()=>{t().hideTransitionAnimation()},3e3));break;case"session_end":n.autoShowOnSessionEnd?(t().showTransitionAnimationModal("session_end"),setTimeout(()=>{t().hideTransitionAnimation(),n.sessionReflectionEnabled?t().showSessionReflectionModal():t().showMindfulnessPromptModal("session_end")},3e3)):n.transitionAnimationsEnabled&&(t().showTransitionAnimationModal("session_end"),setTimeout(()=>{t().hideTransitionAnimation()},3e3));break;case"break_start":n.autoShowOnBreakStart?(t().showTransitionAnimationModal("break_start"),setTimeout(()=>{t().hideTransitionAnimation(),t().showMindfulnessPromptModal("break_start")},3e3)):n.transitionAnimationsEnabled&&(t().showTransitionAnimationModal("break_start"),setTimeout(()=>{t().hideTransitionAnimation()},3e3));break;case"break_end":n.transitionAnimationsEnabled&&(t().showTransitionAnimationModal("break_end"),setTimeout(()=>{t().hideTransitionAnimation()},3e3));break;case"task_complete":n.transitionAnimationsEnabled&&(t().showTransitionAnimationModal("task_complete"),setTimeout(()=>{t().hideTransitionAnimation()},3e3))}},resetMindfulnessData:()=>{e({mindfulnessSessionsCompleted:0,totalMindfulnessTime:0,favoriteExercises:[],streakDays:0,lastMindfulnessDate:null}),t().saveSettings()},loadSettings:()=>{try{const t=localStorage.getItem("mindfulnessSettings");if(t){const n=JSON.parse(t);e({...n,lastMindfulnessDate:n.lastMindfulnessDate?new Date(n.lastMindfulnessDate):null})}}catch(l){}},saveSettings:()=>{try{const e=t(),n={mindfulnessEnabled:e.mindfulnessEnabled,transitionAnimationsEnabled:e.transitionAnimationsEnabled,breathingExerciseEnabled:e.breathingExerciseEnabled,sessionReflectionEnabled:e.sessionReflectionEnabled,autoShowOnSessionEnd:e.autoShowOnSessionEnd,autoShowOnSessionStart:e.autoShowOnSessionStart,autoShowOnBreakStart:e.autoShowOnBreakStart,mindfulnessSessionsCompleted:e.mindfulnessSessionsCompleted,totalMindfulnessTime:e.totalMindfulnessTime,favoriteExercises:e.favoriteExercises,streakDays:e.streakDays,lastMindfulnessDate:e.lastMindfulnessDate?.toISOString()};localStorage.setItem("mindfulnessSettings",JSON.stringify(n))}catch(l){}}})));c.getState().loadSettings();export{c as a,a as u};
//# sourceMappingURL=mindfulnessStore-BwCctBeq.js.map
