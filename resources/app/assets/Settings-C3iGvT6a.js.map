{"version":3,"file":"Settings-C3iGvT6a.js","sources":["../../src/components/Notifications/NotificationPreferences.tsx","../../src/components/Settings/AppearanceSettings.tsx","../../src/stores/keyboardStore.ts","../../src/components/Settings/KeyboardShortcuts.tsx","../../src/components/Settings/AccessibilitySettings.tsx","../../src/components/Settings/DataExportSettings.tsx","../../src/utils/PerformanceOptimizer.ts","../../src/components/Settings/PerformanceSettings.tsx","../../src/hooks/usePerformanceMonitoring.ts","../../src/pages/Settings.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bell, Volume2, VolumeX, Clock, Target, Zap, Moon, AlertTriangle } from 'lucide-react';\r\nimport { NotificationPreferences } from '../../../../shared/types';\r\n\r\ninterface NotificationPreferencesProps {\r\n  preferences: NotificationPreferences;\r\n  onUpdate: (preferences: NotificationPreferences) => void;\r\n}\r\n\r\n/**\r\n * Comprehensive notification preferences UI component with granular controls\r\n * Allows users to customize all aspects of the notification system\r\n */\r\nconst NotificationPreferencesComponent: React.FC<NotificationPreferencesProps> = ({\r\n  preferences,\r\n  onUpdate,\r\n}) => {\r\n  const [localPreferences, setLocalPreferences] = useState<NotificationPreferences>(preferences);\r\n\r\n  // Update local state when props change\r\n  useEffect(() => {\r\n    setLocalPreferences(preferences);\r\n  }, [preferences]);\r\n\r\n  // Handle preference updates with immediate save\r\n  const updatePreference = (path: string, value: any) => {\r\n    const keys = path.split('.');\r\n    const updated = { ...localPreferences };\r\n    \r\n    let current: any = updated;\r\n    for (let i = 0; i < keys.length - 1; i++) {\r\n      current = current[keys[i]];\r\n    }\r\n    current[keys[keys.length - 1]] = value;\r\n    \r\n    setLocalPreferences(updated);\r\n    onUpdate(updated);\r\n  };\r\n\r\n  // Toggle section enabled state\r\n  const toggleSection = (section: keyof NotificationPreferences) => {\r\n    if (typeof localPreferences[section] === 'object' && 'enabled' in localPreferences[section]) {\r\n      updatePreference(`${section}.enabled`, !localPreferences[section].enabled);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Master notification toggle */}\r\n      <div className=\"card p-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <Bell className=\"w-5 h-5 text-blue-600\" />\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Notifications</h3>\r\n              <p className=\"text-sm text-gray-600\">Enable or disable all notifications</p>\r\n            </div>\r\n          </div>\r\n          <label className=\"relative inline-flex items-center cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={localPreferences.enabled}\r\n              onChange={(e) => updatePreference('enabled', e.target.checked)}\r\n              className=\"sr-only peer\"\r\n            />\r\n            <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Session completion notifications */}\r\n      <div className=\"card p-6\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <Zap className=\"w-5 h-5 text-green-600\" />\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Session Completion</h3>\r\n              <p className=\"text-sm text-gray-600\">Notifications when focus sessions end</p>\r\n            </div>\r\n          </div>\r\n          <label className=\"relative inline-flex items-center cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={localPreferences.sessionComplete.enabled}\r\n              onChange={() => toggleSection('sessionComplete')}\r\n              className=\"sr-only peer\"\r\n              disabled={!localPreferences.enabled}\r\n            />\r\n            <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600 disabled:opacity-50\"></div>\r\n          </label>\r\n        </div>\r\n        \r\n        {localPreferences.sessionComplete.enabled && localPreferences.enabled && (\r\n          <div className=\"space-y-4 pl-8 border-l-2 border-green-100\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-gray-700\">Play sound</span>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={localPreferences.sessionComplete.sound}\r\n                  onChange={(e) => updatePreference('sessionComplete.sound', e.target.checked)}\r\n                  className=\"sr-only peer\"\r\n                />\r\n                <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-green-600\"></div>\r\n              </label>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-gray-700\">Show task information</span>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={localPreferences.sessionComplete.showTaskInfo}\r\n                  onChange={(e) => updatePreference('sessionComplete.showTaskInfo', e.target.checked)}\r\n                  className=\"sr-only peer\"\r\n                />\r\n                <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-green-600\"></div>\r\n              </label>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm text-gray-700 mb-2\">Display duration (seconds)</label>\r\n              <input\r\n                type=\"range\"\r\n                min=\"3\"\r\n                max=\"30\"\r\n                value={localPreferences.sessionComplete.duration}\r\n                onChange={(e) => updatePreference('sessionComplete.duration', parseInt(e.target.value))}\r\n                className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider\"\r\n              />\r\n              <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n                <span>3s</span>\r\n                <span>{localPreferences.sessionComplete.duration}s</span>\r\n                <span>30s</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Break reminder notifications */}\r\n      <div className=\"card p-6\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <Clock className=\"w-5 h-5 text-orange-600\" />\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Break Reminders</h3>\r\n              <p className=\"text-sm text-gray-600\">Smart suggestions for taking breaks</p>\r\n            </div>\r\n          </div>\r\n          <label className=\"relative inline-flex items-center cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={localPreferences.breakReminders.enabled}\r\n              onChange={() => toggleSection('breakReminders')}\r\n              className=\"sr-only peer\"\r\n              disabled={!localPreferences.enabled}\r\n            />\r\n            <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-orange-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-orange-600 disabled:opacity-50\"></div>\r\n          </label>\r\n        </div>\r\n        \r\n        {localPreferences.breakReminders.enabled && localPreferences.enabled && (\r\n          <div className=\"space-y-4 pl-8 border-l-2 border-orange-100\">\r\n            <div>\r\n              <label className=\"block text-sm text-gray-700 mb-2\">Break reminder frequency</label>\r\n              <select\r\n                value={localPreferences.breakReminders.frequency}\r\n                onChange={(e) => updatePreference('breakReminders.frequency', e.target.value)}\r\n                className=\"input\"\r\n              >\r\n                <option value=\"after_each\">After each session</option>\r\n                <option value=\"after_2\">After 2 sessions</option>\r\n                <option value=\"after_3\">After 3 sessions</option>\r\n                <option value=\"smart\">Smart (based on patterns)</option>\r\n              </select>\r\n            </div>\r\n            \r\n            {localPreferences.breakReminders.frequency === 'smart' && (\r\n              <div>\r\n                <label className=\"block text-sm text-gray-700 mb-2\">\r\n                  Smart threshold (minutes of continuous work)\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"30\"\r\n                  max=\"180\"\r\n                  value={localPreferences.breakReminders.smartThreshold}\r\n                  onChange={(e) => updatePreference('breakReminders.smartThreshold', parseInt(e.target.value))}\r\n                  className=\"input\"\r\n                />\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-gray-700\">Play sound</span>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={localPreferences.breakReminders.sound}\r\n                  onChange={(e) => updatePreference('breakReminders.sound', e.target.checked)}\r\n                  className=\"sr-only peer\"\r\n                />\r\n                <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-orange-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-orange-600\"></div>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>      {\r\n/* Daily review notifications */}\r\n      <div className=\"card p-6\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <Moon className=\"w-5 h-5 text-purple-600\" />\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Daily Review</h3>\r\n              <p className=\"text-sm text-gray-600\">End-of-day reflection prompts</p>\r\n            </div>\r\n          </div>\r\n          <label className=\"relative inline-flex items-center cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={localPreferences.dailyReview.enabled}\r\n              onChange={() => toggleSection('dailyReview')}\r\n              className=\"sr-only peer\"\r\n              disabled={!localPreferences.enabled}\r\n            />\r\n            <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-purple-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-purple-600 disabled:opacity-50\"></div>\r\n          </label>\r\n        </div>\r\n        \r\n        {localPreferences.dailyReview.enabled && localPreferences.enabled && (\r\n          <div className=\"space-y-4 pl-8 border-l-2 border-purple-100\">\r\n            <div>\r\n              <label className=\"block text-sm text-gray-700 mb-2\">Review time</label>\r\n              <input\r\n                type=\"time\"\r\n                value={localPreferences.dailyReview.time}\r\n                onChange={(e) => updatePreference('dailyReview.time', e.target.value)}\r\n                className=\"input\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-gray-700\">Include weekends</span>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={localPreferences.dailyReview.weekendsIncluded}\r\n                  onChange={(e) => updatePreference('dailyReview.weekendsIncluded', e.target.checked)}\r\n                  className=\"sr-only peer\"\r\n                />\r\n                <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-purple-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-purple-600\"></div>\r\n              </label>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-gray-700\">Play sound</span>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={localPreferences.dailyReview.sound}\r\n                  onChange={(e) => updatePreference('dailyReview.sound', e.target.checked)}\r\n                  className=\"sr-only peer\"\r\n                />\r\n                <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-purple-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-purple-600\"></div>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Weekly review notifications */}\r\n      <div className=\"card p-6\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <Target className=\"w-5 h-5 text-indigo-600\" />\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Weekly Review</h3>\r\n              <p className=\"text-sm text-gray-600\">Weekly progress and planning prompts</p>\r\n            </div>\r\n          </div>\r\n          <label className=\"relative inline-flex items-center cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={localPreferences.weeklyReview.enabled}\r\n              onChange={() => toggleSection('weeklyReview')}\r\n              className=\"sr-only peer\"\r\n              disabled={!localPreferences.enabled}\r\n            />\r\n            <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-indigo-600 disabled:opacity-50\"></div>\r\n          </label>\r\n        </div>\r\n        \r\n        {localPreferences.weeklyReview.enabled && localPreferences.enabled && (\r\n          <div className=\"space-y-4 pl-8 border-l-2 border-indigo-100\">\r\n            <div>\r\n              <label className=\"block text-sm text-gray-700 mb-2\">Day of week</label>\r\n              <select\r\n                value={localPreferences.weeklyReview.dayOfWeek}\r\n                onChange={(e) => updatePreference('weeklyReview.dayOfWeek', parseInt(e.target.value))}\r\n                className=\"input\"\r\n              >\r\n                <option value={0}>Sunday</option>\r\n                <option value={1}>Monday</option>\r\n                <option value={2}>Tuesday</option>\r\n                <option value={3}>Wednesday</option>\r\n                <option value={4}>Thursday</option>\r\n                <option value={5}>Friday</option>\r\n                <option value={6}>Saturday</option>\r\n              </select>\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-sm text-gray-700 mb-2\">Review time</label>\r\n              <input\r\n                type=\"time\"\r\n                value={localPreferences.weeklyReview.time}\r\n                onChange={(e) => updatePreference('weeklyReview.time', e.target.value)}\r\n                className=\"input\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-gray-700\">Play sound</span>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={localPreferences.weeklyReview.sound}\r\n                  onChange={(e) => updatePreference('weeklyReview.sound', e.target.checked)}\r\n                  className=\"sr-only peer\"\r\n                />\r\n                <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-indigo-600\"></div>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Goal achievement notifications */}\r\n      <div className=\"card p-6\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <Target className=\"w-5 h-5 text-emerald-600\" />\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Goal Achievements</h3>\r\n              <p className=\"text-sm text-gray-600\">Celebrate when you reach your goals</p>\r\n            </div>\r\n          </div>\r\n          <label className=\"relative inline-flex items-center cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={localPreferences.goalAchievements.enabled}\r\n              onChange={() => toggleSection('goalAchievements')}\r\n              className=\"sr-only peer\"\r\n              disabled={!localPreferences.enabled}\r\n            />\r\n            <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-emerald-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-emerald-600 disabled:opacity-50\"></div>\r\n          </label>\r\n        </div>\r\n        \r\n        {localPreferences.goalAchievements.enabled && localPreferences.enabled && (\r\n          <div className=\"space-y-4 pl-8 border-l-2 border-emerald-100\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-gray-700\">Play sound</span>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={localPreferences.goalAchievements.sound}\r\n                  onChange={(e) => updatePreference('goalAchievements.sound', e.target.checked)}\r\n                  className=\"sr-only peer\"\r\n                />\r\n                <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-emerald-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-emerald-600\"></div>\r\n              </label>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-gray-700\">Show progress details</span>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={localPreferences.goalAchievements.showProgress}\r\n                  onChange={(e) => updatePreference('goalAchievements.showProgress', e.target.checked)}\r\n                  className=\"sr-only peer\"\r\n                />\r\n                <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-emerald-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-emerald-600\"></div>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Streak milestone notifications */}\r\n      <div className=\"card p-6\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <Zap className=\"w-5 h-5 text-yellow-600\" />\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Streak Milestones</h3>\r\n              <p className=\"text-sm text-gray-600\">Celebrate consistency achievements</p>\r\n            </div>\r\n          </div>\r\n          <label className=\"relative inline-flex items-center cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={localPreferences.streakMilestones.enabled}\r\n              onChange={() => toggleSection('streakMilestones')}\r\n              className=\"sr-only peer\"\r\n              disabled={!localPreferences.enabled}\r\n            />\r\n            <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-yellow-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-yellow-600 disabled:opacity-50\"></div>\r\n          </label>\r\n        </div>\r\n        \r\n        {localPreferences.streakMilestones.enabled && localPreferences.enabled && (\r\n          <div className=\"space-y-4 pl-8 border-l-2 border-yellow-100\">\r\n            <div>\r\n              <label className=\"block text-sm text-gray-700 mb-2\">Milestone days (comma-separated)</label>\r\n              <input\r\n                type=\"text\"\r\n                value={localPreferences.streakMilestones.milestones.join(', ')}\r\n                onChange={(e) => {\r\n                  const milestones = e.target.value\r\n                    .split(',')\r\n                    .map(s => parseInt(s.trim()))\r\n                    .filter(n => !isNaN(n) && n > 0)\r\n                    .sort((a, b) => a - b);\r\n                  updatePreference('streakMilestones.milestones', milestones);\r\n                }}\r\n                placeholder=\"7, 14, 30, 60, 100\"\r\n                className=\"input\"\r\n              />\r\n              <p className=\"text-xs text-gray-500 mt-1\">\r\n                Current: {localPreferences.streakMilestones.milestones.join(', ')} days\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-gray-700\">Play sound</span>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={localPreferences.streakMilestones.sound}\r\n                  onChange={(e) => updatePreference('streakMilestones.sound', e.target.checked)}\r\n                  className=\"sr-only peer\"\r\n                />\r\n                <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-yellow-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-yellow-600\"></div>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* System notifications */}\r\n      <div className=\"card p-6\">\r\n        <div className=\"mb-4\">\r\n          <div className=\"flex items-center space-x-3 mb-2\">\r\n            <AlertTriangle className=\"w-5 h-5 text-red-600\" />\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">System Notifications</h3>\r\n          </div>\r\n          <p className=\"text-sm text-gray-600\">Idle detection and system sleep alerts</p>\r\n        </div>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {/* Idle detection */}\r\n          <div className=\"border rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between mb-3\">\r\n              <span className=\"font-medium text-gray-900\">Idle Detection</span>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={localPreferences.idleDetection.enabled}\r\n                  onChange={() => toggleSection('idleDetection')}\r\n                  className=\"sr-only peer\"\r\n                  disabled={!localPreferences.enabled}\r\n                />\r\n                <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-red-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-red-600 disabled:opacity-50\"></div>\r\n              </label>\r\n            </div>\r\n            \r\n            {localPreferences.idleDetection.enabled && localPreferences.enabled && (\r\n              <div className=\"space-y-3\">\r\n                <div>\r\n                  <label className=\"block text-sm text-gray-700 mb-1\">Idle threshold (minutes)</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"30\"\r\n                    value={localPreferences.idleDetection.threshold}\r\n                    onChange={(e) => updatePreference('idleDetection.threshold', parseInt(e.target.value))}\r\n                    className=\"input\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm text-gray-700\">Play sound</span>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={localPreferences.idleDetection.sound}\r\n                      onChange={(e) => updatePreference('idleDetection.sound', e.target.checked)}\r\n                      className=\"sr-only peer\"\r\n                    />\r\n                    <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-red-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-red-600\"></div>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          \r\n          {/* System sleep detection */}\r\n          <div className=\"border rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between mb-3\">\r\n              <span className=\"font-medium text-gray-900\">System Sleep Detection</span>\r\n              <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={localPreferences.systemSleep.enabled}\r\n                  onChange={() => toggleSection('systemSleep')}\r\n                  className=\"sr-only peer\"\r\n                  disabled={!localPreferences.enabled}\r\n                />\r\n                <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-red-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-red-600 disabled:opacity-50\"></div>\r\n              </label>\r\n            </div>\r\n            \r\n            {localPreferences.systemSleep.enabled && localPreferences.enabled && (\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-700\">Play sound</span>\r\n                <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={localPreferences.systemSleep.sound}\r\n                    onChange={(e) => updatePreference('systemSleep.sound', e.target.checked)}\r\n                    className=\"sr-only peer\"\r\n                  />\r\n                  <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-red-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-red-600\"></div>\r\n                </label>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Focus mode notification settings */}\r\n      <div className=\"card p-6\">\r\n        <div className=\"mb-4\">\r\n          <div className=\"flex items-center space-x-3 mb-2\">\r\n            <Volume2 className=\"w-5 h-5 text-blue-600\" />\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">Focus Mode</h3>\r\n          </div>\r\n          <p className=\"text-sm text-gray-600\">Control notifications during focus sessions</p>\r\n        </div>\r\n        \r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm text-gray-700\">Suppress other notifications</span>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={localPreferences.focusMode.suppressOtherNotifications}\r\n                onChange={(e) => updatePreference('focusMode.suppressOtherNotifications', e.target.checked)}\r\n                className=\"sr-only peer\"\r\n                disabled={!localPreferences.enabled}\r\n              />\r\n              <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-blue-600 disabled:opacity-50\"></div>\r\n            </label>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm text-gray-700\">Allow break reminders</span>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={localPreferences.focusMode.allowBreakReminders}\r\n                onChange={(e) => updatePreference('focusMode.allowBreakReminders', e.target.checked)}\r\n                className=\"sr-only peer\"\r\n                disabled={!localPreferences.enabled}\r\n              />\r\n              <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-blue-600 disabled:opacity-50\"></div>\r\n            </label>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm text-gray-700\">Allow urgent notifications only</span>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={localPreferences.focusMode.allowUrgentOnly}\r\n                onChange={(e) => updatePreference('focusMode.allowUrgentOnly', e.target.checked)}\r\n                className=\"sr-only peer\"\r\n                disabled={!localPreferences.enabled}\r\n              />\r\n              <div className=\"w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-blue-600 disabled:opacity-50\"></div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationPreferencesComponent;","import React from 'react';\r\nimport { Palette, Monitor, Sun, Moon, Type, Layout, Eye } from 'lucide-react';\r\nimport { useThemeStore, ThemeMode, FontSize, DashboardLayout } from '../../stores/themeStore';\r\n\r\nexport const AppearanceSettings: React.FC = () => {\r\n  const {\r\n    mode,\r\n    fontSize,\r\n    compactMode,\r\n    showSecondsInTimer,\r\n    dashboardLayout,\r\n    isDark,\r\n    setMode,\r\n    setFontSize,\r\n    setCompactMode,\r\n    setShowSecondsInTimer,\r\n    setDashboardLayout,\r\n  } = useThemeStore();\r\n\r\n  const themeOptions = [\r\n    { value: 'light' as ThemeMode, label: 'Light', icon: Sun, description: 'Always use light theme' },\r\n    { value: 'dark' as ThemeMode, label: 'Dark', icon: Moon, description: 'Always use dark theme' },\r\n    { value: 'system' as ThemeMode, label: 'System', icon: Monitor, description: 'Follow system preference' },\r\n  ];\r\n\r\n  const fontSizeOptions = [\r\n    { value: 'small' as FontSize, label: 'Small', description: '14px base size' },\r\n    { value: 'medium' as FontSize, label: 'Medium', description: '16px base size' },\r\n    { value: 'large' as FontSize, label: 'Large', description: '18px base size' },\r\n  ];\r\n\r\n  const layoutOptions = [\r\n    { value: 'default' as DashboardLayout, label: 'Default', description: 'Standard layout with all widgets' },\r\n    { value: 'compact' as DashboardLayout, label: 'Compact', description: 'Condensed view with essential info' },\r\n    { value: 'detailed' as DashboardLayout, label: 'Detailed', description: 'Expanded view with extra metrics' },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n      {/* Theme Settings */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n          <Palette className=\"w-5 h-5 text-purple-600\" />\r\n          <span>Theme</span>\r\n        </h2>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {/* Color Scheme */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n              Color scheme\r\n            </label>\r\n            <div className=\"grid grid-cols-1 gap-2\">\r\n              {themeOptions.map((option) => {\r\n                const Icon = option.icon;\r\n                const isSelected = mode === option.value;\r\n                \r\n                return (\r\n                  <button\r\n                    key={option.value}\r\n                    onClick={() => setMode(option.value)}\r\n                    className={`p-3 rounded-lg border-2 text-left transition-all ${\r\n                      isSelected\r\n                        ? 'border-purple-500 bg-purple-50 dark:bg-purple-900/20'\r\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <div className={`w-8 h-8 rounded-lg flex items-center justify-center ${\r\n                        isSelected \r\n                          ? 'bg-purple-100 dark:bg-purple-800' \r\n                          : 'bg-gray-100 dark:bg-gray-800'\r\n                      }`}>\r\n                        <Icon className={`w-4 h-4 ${\r\n                          isSelected \r\n                            ? 'text-purple-600 dark:text-purple-400' \r\n                            : 'text-gray-600 dark:text-gray-400'\r\n                        }`} />\r\n                      </div>\r\n                      <div>\r\n                        <div className={`font-medium text-sm ${\r\n                          isSelected \r\n                            ? 'text-gray-900 dark:text-gray-100' \r\n                            : 'text-gray-700 dark:text-gray-300'\r\n                        }`}>\r\n                          {option.label}\r\n                        </div>\r\n                        <div className={`text-xs ${\r\n                          isSelected \r\n                            ? 'text-gray-600 dark:text-gray-400' \r\n                            : 'text-gray-500 dark:text-gray-500'\r\n                        }`}>\r\n                          {option.description}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Current Theme Preview */}\r\n          <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-3\">\r\n            <div className=\"flex items-center space-x-2 text-sm\">\r\n              <div className={`w-3 h-3 rounded-full ${isDark ? 'bg-gray-700' : 'bg-white'} border-2 border-gray-300 dark:border-gray-600`}></div>\r\n              <span className=\"text-gray-600 dark:text-gray-400\">\r\n                Currently using {isDark ? 'dark' : 'light'} theme\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Typography Settings */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n          <Type className=\"w-5 h-5 text-blue-600\" />\r\n          <span>Typography</span>\r\n        </h2>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {/* Font Size */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n              Font size\r\n            </label>\r\n            <div className=\"grid grid-cols-1 gap-2\">\r\n              {fontSizeOptions.map((option) => {\r\n                const isSelected = fontSize === option.value;\r\n                \r\n                return (\r\n                  <button\r\n                    key={option.value}\r\n                    onClick={() => setFontSize(option.value)}\r\n                    className={`p-3 rounded-lg border-2 text-left transition-all ${\r\n                      isSelected\r\n                        ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'\r\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div>\r\n                        <div className={`font-medium text-sm ${\r\n                          isSelected \r\n                            ? 'text-gray-900 dark:text-gray-100' \r\n                            : 'text-gray-700 dark:text-gray-300'\r\n                        }`}>\r\n                          {option.label}\r\n                        </div>\r\n                        <div className={`text-xs ${\r\n                          isSelected \r\n                            ? 'text-gray-600 dark:text-gray-400' \r\n                            : 'text-gray-500 dark:text-gray-500'\r\n                        }`}>\r\n                          {option.description}\r\n                        </div>\r\n                      </div>\r\n                      <div className={`text-lg font-medium ${\r\n                        isSelected \r\n                          ? 'text-blue-600 dark:text-blue-400' \r\n                          : 'text-gray-400 dark:text-gray-500'\r\n                      }`}>\r\n                        Aa\r\n                      </div>\r\n                    </div>\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Compact Mode */}\r\n          <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-900 rounded-lg\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Compact mode</label>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Use smaller spacing and components</p>\r\n            </div>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={compactMode}\r\n                onChange={(e) => setCompactMode(e.target.checked)}\r\n                className=\"sr-only peer\"\r\n              />\r\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Display Settings */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n          <Eye className=\"w-5 h-5 text-green-600\" />\r\n          <span>Display</span>\r\n        </h2>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {/* Show Seconds in Timer */}\r\n          <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-900 rounded-lg\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Show seconds in timer</label>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">Display seconds in the countdown timer</p>\r\n            </div>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={showSecondsInTimer}\r\n                onChange={(e) => setShowSecondsInTimer(e.target.checked)}\r\n                className=\"sr-only peer\"\r\n              />\r\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 dark:peer-focus:ring-green-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-green-600\"></div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Layout Settings */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n          <Layout className=\"w-5 h-5 text-orange-600\" />\r\n          <span>Layout</span>\r\n        </h2>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {/* Dashboard Layout */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n              Dashboard layout\r\n            </label>\r\n            <div className=\"grid grid-cols-1 gap-2\">\r\n              {layoutOptions.map((option) => {\r\n                const isSelected = dashboardLayout === option.value;\r\n                \r\n                return (\r\n                  <button\r\n                    key={option.value}\r\n                    onClick={() => setDashboardLayout(option.value)}\r\n                    className={`p-3 rounded-lg border-2 text-left transition-all ${\r\n                      isSelected\r\n                        ? 'border-orange-500 bg-orange-50 dark:bg-orange-900/20'\r\n                        : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n                    }`}\r\n                  >\r\n                    <div>\r\n                      <div className={`font-medium text-sm ${\r\n                        isSelected \r\n                          ? 'text-gray-900 dark:text-gray-100' \r\n                          : 'text-gray-700 dark:text-gray-300'\r\n                      }`}>\r\n                        {option.label}\r\n                      </div>\r\n                      <div className={`text-xs ${\r\n                        isSelected \r\n                          ? 'text-gray-600 dark:text-gray-400' \r\n                          : 'text-gray-500 dark:text-gray-500'\r\n                      }`}>\r\n                        {option.description}\r\n                      </div>\r\n                    </div>\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\n\r\nexport interface KeyboardShortcut {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  defaultKeys: string[];\r\n  keys: string[];\r\n  category: 'timer' | 'navigation' | 'tasks' | 'general';\r\n  action: () => void;\r\n}\r\n\r\nexport interface KeyboardState {\r\n  shortcuts: KeyboardShortcut[];\r\n  isRecording: string | null; // ID of shortcut being recorded\r\n  \r\n  // Actions\r\n  updateShortcut: (id: string, keys: string[]) => void;\r\n  resetShortcut: (id: string) => void;\r\n  resetAllShortcuts: () => void;\r\n  startRecording: (id: string) => void;\r\n  stopRecording: () => void;\r\n  registerShortcuts: () => void;\r\n  unregisterShortcuts: () => void;\r\n}\r\n\r\n// Default shortcuts configuration\r\nconst defaultShortcuts: Omit<KeyboardShortcut, 'action'>[] = [\r\n  // Timer shortcuts\r\n  {\r\n    id: 'timer-start-pause',\r\n    name: 'Start/Pause Timer',\r\n    description: 'Start or pause the current timer session',\r\n    defaultKeys: ['Space'],\r\n    keys: ['Space'],\r\n    category: 'timer'\r\n  },\r\n  {\r\n    id: 'timer-stop',\r\n    name: 'Stop Timer',\r\n    description: 'Stop the current timer session',\r\n    defaultKeys: ['Escape'],\r\n    keys: ['Escape'],\r\n    category: 'timer'\r\n  },\r\n  {\r\n    id: 'timer-quick-start-25',\r\n    name: 'Quick Start 25min',\r\n    description: 'Start a 25-minute focus session',\r\n    defaultKeys: ['Ctrl', '1'],\r\n    keys: ['Ctrl', '1'],\r\n    category: 'timer'\r\n  },\r\n  {\r\n    id: 'timer-quick-start-45',\r\n    name: 'Quick Start 45min',\r\n    description: 'Start a 45-minute focus session',\r\n    defaultKeys: ['Ctrl', '2'],\r\n    keys: ['Ctrl', '2'],\r\n    category: 'timer'\r\n  },\r\n  \r\n  // Navigation shortcuts\r\n  {\r\n    id: 'nav-dashboard',\r\n    name: 'Go to Dashboard',\r\n    description: 'Navigate to the dashboard page',\r\n    defaultKeys: ['Ctrl', 'D'],\r\n    keys: ['Ctrl', 'D'],\r\n    category: 'navigation'\r\n  },\r\n  {\r\n    id: 'nav-timer',\r\n    name: 'Go to Timer',\r\n    description: 'Navigate to the timer page',\r\n    defaultKeys: ['Ctrl', 'T'],\r\n    keys: ['Ctrl', 'T'],\r\n    category: 'navigation'\r\n  },\r\n  {\r\n    id: 'nav-tasks',\r\n    name: 'Go to Tasks',\r\n    description: 'Navigate to the tasks page',\r\n    defaultKeys: ['Ctrl', 'K'],\r\n    keys: ['Ctrl', 'K'],\r\n    category: 'navigation'\r\n  },\r\n  {\r\n    id: 'nav-analytics',\r\n    name: 'Go to Analytics',\r\n    description: 'Navigate to the analytics page',\r\n    defaultKeys: ['Ctrl', 'A'],\r\n    keys: ['Ctrl', 'A'],\r\n    category: 'navigation'\r\n  },\r\n  {\r\n    id: 'nav-settings',\r\n    name: 'Go to Settings',\r\n    description: 'Navigate to the settings page',\r\n    defaultKeys: ['Ctrl', ','],\r\n    keys: ['Ctrl', ','],\r\n    category: 'navigation'\r\n  },\r\n  \r\n  // Task shortcuts\r\n  {\r\n    id: 'task-new',\r\n    name: 'New Task',\r\n    description: 'Create a new task',\r\n    defaultKeys: ['Ctrl', 'N'],\r\n    keys: ['Ctrl', 'N'],\r\n    category: 'tasks'\r\n  },\r\n  {\r\n    id: 'task-search',\r\n    name: 'Search Tasks',\r\n    description: 'Focus on task search input',\r\n    defaultKeys: ['Ctrl', 'F'],\r\n    keys: ['Ctrl', 'F'],\r\n    category: 'tasks'\r\n  },\r\n  \r\n  // General shortcuts\r\n  {\r\n    id: 'general-help',\r\n    name: 'Show Help',\r\n    description: 'Show keyboard shortcuts help',\r\n    defaultKeys: ['Ctrl', '?'],\r\n    keys: ['Ctrl', '?'],\r\n    category: 'general'\r\n  },\r\n  {\r\n    id: 'general-command-palette',\r\n    name: 'Command Palette',\r\n    description: 'Open command palette',\r\n    defaultKeys: ['Ctrl', 'Shift', 'P'],\r\n    keys: ['Ctrl', 'Shift', 'P'],\r\n    category: 'general'\r\n  }\r\n];\r\n\r\n// Helper function to format key combination\r\nexport const formatKeys = (keys: string[]): string => {\r\n  return keys.map(key => {\r\n    switch (key) {\r\n      case 'Ctrl': return 'Ctrl';\r\n      case 'Alt': return 'Alt';\r\n      case 'Shift': return 'Shift';\r\n      case 'Meta': return 'Cmd';\r\n      case ' ': return 'Space';\r\n      case 'Escape': return 'Esc';\r\n      case 'ArrowUp': return '↑';\r\n      case 'ArrowDown': return '↓';\r\n      case 'ArrowLeft': return '←';\r\n      case 'ArrowRight': return '→';\r\n      default: return key.toUpperCase();\r\n    }\r\n  }).join(' + ');\r\n};\r\n\r\n// Helper function to check if key combination matches\r\nconst keysMatch = (keys1: string[], keys2: string[]): boolean => {\r\n  if (keys1.length !== keys2.length) return false;\r\n  return keys1.every((key, index) => key === keys2[index]);\r\n};\r\n\r\nexport const useKeyboardStore = create<KeyboardState>()(\r\n  persist(\r\n    (set, get) => ({\r\n      shortcuts: defaultShortcuts.map(shortcut => ({\r\n        ...shortcut,\r\n        action: () => {} // Will be set when registering shortcuts\r\n      })),\r\n      isRecording: null,\r\n      \r\n      updateShortcut: (id: string, keys: string[]) => {\r\n        set((state) => ({\r\n          shortcuts: state.shortcuts.map(shortcut =>\r\n            shortcut.id === id ? { ...shortcut, keys } : shortcut\r\n          )\r\n        }));\r\n      },\r\n      \r\n      resetShortcut: (id: string) => {\r\n        set((state) => ({\r\n          shortcuts: state.shortcuts.map(shortcut =>\r\n            shortcut.id === id ? { ...shortcut, keys: [...shortcut.defaultKeys] } : shortcut\r\n          )\r\n        }));\r\n      },\r\n      \r\n      resetAllShortcuts: () => {\r\n        set((state) => ({\r\n          shortcuts: state.shortcuts.map(shortcut => ({\r\n            ...shortcut,\r\n            keys: [...shortcut.defaultKeys]\r\n          }))\r\n        }));\r\n      },\r\n      \r\n      startRecording: (id: string) => {\r\n        set({ isRecording: id });\r\n      },\r\n      \r\n      stopRecording: () => {\r\n        set({ isRecording: null });\r\n      },\r\n      \r\n      registerShortcuts: () => {\r\n        const handleKeyDown = (event: KeyboardEvent) => {\r\n          const { shortcuts } = get();\r\n          \r\n          // Build current key combination\r\n          const currentKeys: string[] = [];\r\n          if (event.ctrlKey) currentKeys.push('Ctrl');\r\n          if (event.altKey) currentKeys.push('Alt');\r\n          if (event.shiftKey) currentKeys.push('Shift');\r\n          if (event.metaKey) currentKeys.push('Meta');\r\n          \r\n          // Add the main key\r\n          if (event.key !== 'Control' && event.key !== 'Alt' && event.key !== 'Shift' && event.key !== 'Meta') {\r\n            currentKeys.push(event.key);\r\n          }\r\n          \r\n          // Find matching shortcut\r\n          const matchingShortcut = shortcuts.find(shortcut =>\r\n            keysMatch(shortcut.keys, currentKeys)\r\n          );\r\n          \r\n          if (matchingShortcut) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            matchingShortcut.action();\r\n          }\r\n        };\r\n        \r\n        document.addEventListener('keydown', handleKeyDown);\r\n        \r\n        // Store cleanup function\r\n        (window as any).__keyboardCleanup = () => {\r\n          document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n      },\r\n      \r\n      unregisterShortcuts: () => {\r\n        if ((window as any).__keyboardCleanup) {\r\n          (window as any).__keyboardCleanup();\r\n          delete (window as any).__keyboardCleanup;\r\n        }\r\n      }\r\n    }),\r\n    {\r\n      name: 'keyboard-shortcuts',\r\n      version: 1,\r\n      // Only persist the key mappings, not the action functions\r\n      partialize: (state) => ({\r\n        shortcuts: state.shortcuts.map(({ action, ...shortcut }) => shortcut)\r\n      }),\r\n    }\r\n  )\r\n);","import React, { useState, useEffect } from 'react';\r\nimport { Keyboard, RotateCcw, Search, Zap } from 'lucide-react';\r\nimport { useKeyboardStore, formatKeys } from '../../stores/keyboardStore';\r\n\r\nexport const KeyboardShortcuts: React.FC = () => {\r\n  const {\r\n    shortcuts,\r\n    isRecording,\r\n    updateShortcut,\r\n    resetShortcut,\r\n    resetAllShortcuts,\r\n    startRecording,\r\n    stopRecording\r\n  } = useKeyboardStore();\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [recordingKeys, setRecordingKeys] = useState<string[]>([]);\r\n\r\n  // Filter shortcuts based on search term\r\n  const filteredShortcuts = shortcuts.filter(shortcut =>\r\n    shortcut.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    shortcut.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    formatKeys(shortcut.keys).toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Group shortcuts by category\r\n  const groupedShortcuts = filteredShortcuts.reduce((groups, shortcut) => {\r\n    const category = shortcut.category;\r\n    if (!groups[category]) {\r\n      groups[category] = [];\r\n    }\r\n    groups[category].push(shortcut);\r\n    return groups;\r\n  }, {} as Record<string, typeof shortcuts>);\r\n\r\n  const categoryLabels = {\r\n    timer: 'Timer Controls',\r\n    navigation: 'Navigation',\r\n    tasks: 'Task Management',\r\n    general: 'General'\r\n  };\r\n\r\n  const categoryIcons = {\r\n    timer: Zap,\r\n    navigation: Search,\r\n    tasks: Keyboard,\r\n    general: RotateCcw\r\n  };\r\n\r\n  // Handle key recording\r\n  useEffect(() => {\r\n    if (!isRecording) return;\r\n\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      const keys: string[] = [];\r\n      if (event.ctrlKey) keys.push('Ctrl');\r\n      if (event.altKey) keys.push('Alt');\r\n      if (event.shiftKey) keys.push('Shift');\r\n      if (event.metaKey) keys.push('Meta');\r\n\r\n      // Add the main key (ignore modifier keys)\r\n      if (!['Control', 'Alt', 'Shift', 'Meta'].includes(event.key)) {\r\n        keys.push(event.key);\r\n        \r\n        // Update the shortcut and stop recording\r\n        updateShortcut(isRecording, keys);\r\n        stopRecording();\r\n        setRecordingKeys([]);\r\n      } else {\r\n        // Just show the modifiers while recording\r\n        setRecordingKeys(keys);\r\n      }\r\n    };\r\n\r\n    const handleKeyUp = (event: KeyboardEvent) => {\r\n      // If only modifiers were pressed and released, cancel recording\r\n      if (['Control', 'Alt', 'Shift', 'Meta'].includes(event.key) && recordingKeys.length > 0) {\r\n        setRecordingKeys([]);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown, true);\r\n    document.addEventListener('keyup', handleKeyUp, true);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown, true);\r\n      document.removeEventListener('keyup', handleKeyUp, true);\r\n    };\r\n  }, [isRecording, recordingKeys, updateShortcut, stopRecording]);\r\n\r\n  const handleStartRecording = (shortcutId: string) => {\r\n    startRecording(shortcutId);\r\n    setRecordingKeys([]);\r\n  };\r\n\r\n  const handleCancelRecording = () => {\r\n    stopRecording();\r\n    setRecordingKeys([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n            Keyboard Shortcuts\r\n          </h2>\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n            Customize keyboard shortcuts for faster navigation and control\r\n          </p>\r\n        </div>\r\n        <button\r\n          onClick={resetAllShortcuts}\r\n          className=\"px-3 py-2 text-sm bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 \r\n                   rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\r\n                   flex items-center space-x-2\"\r\n        >\r\n          <RotateCcw className=\"w-4 h-4\" />\r\n          <span>Reset All</span>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Search */}\r\n      <div className=\"relative\">\r\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search shortcuts...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 \r\n                   rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\r\n                   focus:ring-2 focus:ring-primary-500 focus:border-primary-500\r\n                   placeholder-gray-400 dark:placeholder-gray-500\"\r\n        />\r\n      </div>\r\n\r\n      {/* Recording Indicator */}\r\n      {isRecording && (\r\n        <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"w-3 h-3 bg-red-500 rounded-full animate-pulse\"></div>\r\n              <div>\r\n                <p className=\"text-sm font-medium text-blue-900 dark:text-blue-100\">\r\n                  Recording shortcut...\r\n                </p>\r\n                <p className=\"text-xs text-blue-700 dark:text-blue-300\">\r\n                  Press the key combination you want to use\r\n                  {recordingKeys.length > 0 && ` (${formatKeys(recordingKeys)}...)`}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={handleCancelRecording}\r\n              className=\"px-3 py-1 text-xs bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 \r\n                       rounded hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Shortcuts by Category */}\r\n      <div className=\"space-y-6\">\r\n        {Object.entries(groupedShortcuts).map(([category, categoryShortcuts]) => {\r\n          const Icon = categoryIcons[category as keyof typeof categoryIcons];\r\n          \r\n          return (\r\n            <div key={category} className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n              <h3 className=\"text-md font-medium text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n                <Icon className=\"w-4 h-4 text-primary-600\" />\r\n                <span>{categoryLabels[category as keyof typeof categoryLabels]}</span>\r\n              </h3>\r\n              \r\n              <div className=\"space-y-3\">\r\n                {categoryShortcuts.map((shortcut) => (\r\n                  <div\r\n                    key={shortcut.id}\r\n                    className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-900 rounded-lg\"\r\n                  >\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"font-medium text-sm text-gray-900 dark:text-gray-100\">\r\n                        {shortcut.name}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">\r\n                        {shortcut.description}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center space-x-2\">\r\n                      {/* Current Shortcut Display */}\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        {isRecording === shortcut.id ? (\r\n                          <div className=\"px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 \r\n                                        rounded border-2 border-blue-300 dark:border-blue-700 text-xs font-mono\">\r\n                            Recording...\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"px-3 py-1 bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 \r\n                                        rounded border text-xs font-mono\">\r\n                            {formatKeys(shortcut.keys)}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      \r\n                      {/* Action Buttons */}\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <button\r\n                          onClick={() => handleStartRecording(shortcut.id)}\r\n                          disabled={isRecording !== null}\r\n                          className=\"px-2 py-1 text-xs bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 \r\n                                   rounded hover:bg-primary-200 dark:hover:bg-primary-800 transition-colors\r\n                                   disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        \r\n                        <button\r\n                          onClick={() => resetShortcut(shortcut.id)}\r\n                          disabled={isRecording !== null}\r\n                          className=\"px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 \r\n                                   rounded hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\r\n                                   disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                        >\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Help Text */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-4\">\r\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 mb-2\">\r\n          Tips for customizing shortcuts:\r\n        </h4>\r\n        <ul className=\"text-xs text-gray-600 dark:text-gray-400 space-y-1\">\r\n          <li>• Use Ctrl/Cmd + letter combinations for best compatibility</li>\r\n          <li>• Avoid system shortcuts like Ctrl+C, Ctrl+V, etc.</li>\r\n          <li>• Function keys (F1-F12) work well for global actions</li>\r\n          <li>• Single keys work only when not typing in input fields</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { Eye, Volume2, MousePointer, Zap, Heart, Shield } from 'lucide-react';\r\nimport { useThemeStore } from '../../stores/themeStore';\r\n\r\nexport const AccessibilitySettings: React.FC = () => {\r\n  const {\r\n    fontSize,\r\n    compactMode,\r\n    setFontSize,\r\n    setCompactMode\r\n  } = useThemeStore();\r\n\r\n  // Local state for accessibility features\r\n  const [settings, setSettings] = React.useState({\r\n    highContrast: false,\r\n    reduceMotion: false,\r\n    screenReaderOptimized: false,\r\n    keyboardNavigation: true,\r\n    focusIndicators: true,\r\n    soundAlerts: true,\r\n    visualAlerts: true,\r\n    autoplayMedia: false,\r\n    largeClickTargets: false,\r\n    simplifiedInterface: false\r\n  });\r\n\r\n  const updateSetting = (key: keyof typeof settings, value: boolean) => {\r\n    setSettings(prev => ({ ...prev, [key]: value }));\r\n    \r\n    // Apply accessibility settings to document\r\n    if (typeof document !== 'undefined') {\r\n      const root = document.documentElement;\r\n      \r\n      switch (key) {\r\n        case 'highContrast':\r\n          if (value) {\r\n            root.classList.add('high-contrast');\r\n          } else {\r\n            root.classList.remove('high-contrast');\r\n          }\r\n          break;\r\n        case 'reduceMotion':\r\n          if (value) {\r\n            root.classList.add('reduce-motion');\r\n          } else {\r\n            root.classList.remove('reduce-motion');\r\n          }\r\n          break;\r\n        case 'largeClickTargets':\r\n          if (value) {\r\n            root.classList.add('large-targets');\r\n          } else {\r\n            root.classList.remove('large-targets');\r\n          }\r\n          break;\r\n        case 'simplifiedInterface':\r\n          if (value) {\r\n            root.classList.add('simplified-ui');\r\n          } else {\r\n            root.classList.remove('simplified-ui');\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const accessibilityFeatures = [\r\n    {\r\n      category: 'Visual',\r\n      icon: Eye,\r\n      color: 'blue',\r\n      features: [\r\n        {\r\n          key: 'highContrast' as const,\r\n          name: 'High Contrast Mode',\r\n          description: 'Increase contrast for better visibility',\r\n          value: settings.highContrast\r\n        },\r\n        {\r\n          key: 'largeClickTargets' as const,\r\n          name: 'Large Click Targets',\r\n          description: 'Make buttons and links larger for easier clicking',\r\n          value: settings.largeClickTargets\r\n        },\r\n        {\r\n          key: 'focusIndicators' as const,\r\n          name: 'Enhanced Focus Indicators',\r\n          description: 'Show clear focus outlines for keyboard navigation',\r\n          value: settings.focusIndicators\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      category: 'Motion & Animation',\r\n      icon: Zap,\r\n      color: 'purple',\r\n      features: [\r\n        {\r\n          key: 'reduceMotion' as const,\r\n          name: 'Reduce Motion',\r\n          description: 'Minimize animations and transitions',\r\n          value: settings.reduceMotion\r\n        },\r\n        {\r\n          key: 'autoplayMedia' as const,\r\n          name: 'Autoplay Media',\r\n          description: 'Automatically play sounds and animations',\r\n          value: settings.autoplayMedia\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      category: 'Audio & Alerts',\r\n      icon: Volume2,\r\n      color: 'green',\r\n      features: [\r\n        {\r\n          key: 'soundAlerts' as const,\r\n          name: 'Sound Alerts',\r\n          description: 'Play audio notifications for important events',\r\n          value: settings.soundAlerts\r\n        },\r\n        {\r\n          key: 'visualAlerts' as const,\r\n          name: 'Visual Alerts',\r\n          description: 'Show visual notifications alongside audio alerts',\r\n          value: settings.visualAlerts\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      category: 'Navigation',\r\n      icon: MousePointer,\r\n      color: 'orange',\r\n      features: [\r\n        {\r\n          key: 'keyboardNavigation' as const,\r\n          name: 'Keyboard Navigation',\r\n          description: 'Enable full keyboard navigation support',\r\n          value: settings.keyboardNavigation\r\n        },\r\n        {\r\n          key: 'screenReaderOptimized' as const,\r\n          name: 'Screen Reader Optimization',\r\n          description: 'Optimize interface for screen readers',\r\n          value: settings.screenReaderOptimized\r\n        },\r\n        {\r\n          key: 'simplifiedInterface' as const,\r\n          name: 'Simplified Interface',\r\n          description: 'Reduce visual complexity and distractions',\r\n          value: settings.simplifiedInterface\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div>\r\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 flex items-center space-x-2\">\r\n          <Shield className=\"w-5 h-5 text-blue-600\" />\r\n          <span>Accessibility Settings</span>\r\n        </h2>\r\n        <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n          Configure accessibility features to make the app more comfortable to use\r\n        </p>\r\n      </div>\r\n\r\n      {/* WCAG Compliance Notice */}\r\n      <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4\">\r\n        <div className=\"flex items-start space-x-3\">\r\n          <Heart className=\"w-5 h-5 text-blue-600 dark:text-blue-400 flex-shrink-0 mt-0.5\" />\r\n          <div>\r\n            <h4 className=\"text-sm font-medium text-blue-900 dark:text-blue-100\">\r\n              WCAG 2.1 AA Compliant\r\n            </h4>\r\n            <p className=\"text-xs text-blue-700 dark:text-blue-300 mt-1\">\r\n              This application follows Web Content Accessibility Guidelines (WCAG) 2.1 Level AA standards \r\n              to ensure accessibility for users with disabilities.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Font Size Quick Settings */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n        <h3 className=\"text-md font-medium text-gray-900 dark:text-gray-100 mb-4\">\r\n          Text & Display\r\n        </h3>\r\n        \r\n        <div className=\"space-y-4\">\r\n          {/* Font Size */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Font Size\r\n            </label>\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n              {[\r\n                { value: 'small' as const, label: 'Small', size: '14px' },\r\n                { value: 'medium' as const, label: 'Medium', size: '16px' },\r\n                { value: 'large' as const, label: 'Large', size: '18px' }\r\n              ].map((option) => (\r\n                <button\r\n                  key={option.value}\r\n                  onClick={() => setFontSize(option.value)}\r\n                  className={`p-3 rounded-lg border-2 text-center transition-all ${\r\n                    fontSize === option.value\r\n                      ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'\r\n                      : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n                  }`}\r\n                >\r\n                  <div className={`font-medium text-sm ${\r\n                    fontSize === option.value \r\n                      ? 'text-blue-600 dark:text-blue-400' \r\n                      : 'text-gray-900 dark:text-gray-100'\r\n                  }`}>\r\n                    {option.label}\r\n                  </div>\r\n                  <div className={`text-xs ${\r\n                    fontSize === option.value \r\n                      ? 'text-blue-500 dark:text-blue-500' \r\n                      : 'text-gray-500 dark:text-gray-400'\r\n                  }`}>\r\n                    {option.size}\r\n                  </div>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Compact Mode */}\r\n          <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-900 rounded-lg\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                Compact Mode\r\n              </label>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                Reduce spacing for more content on screen\r\n              </p>\r\n            </div>\r\n            <label className=\"relative inline-flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={compactMode}\r\n                onChange={(e) => setCompactMode(e.target.checked)}\r\n                className=\"sr-only peer\"\r\n              />\r\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Accessibility Features by Category */}\r\n      {accessibilityFeatures.map((category) => {\r\n        const Icon = category.icon;\r\n        \r\n        return (\r\n          <div key={category.category} className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n            <h3 className=\"text-md font-medium text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n              <Icon className={`w-4 h-4 text-${category.color}-600`} />\r\n              <span>{category.category}</span>\r\n            </h3>\r\n            \r\n            <div className=\"space-y-3\">\r\n              {category.features.map((feature) => (\r\n                <div\r\n                  key={feature.key}\r\n                  className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-900 rounded-lg\"\r\n                >\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                      {feature.name}\r\n                    </label>\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                      {feature.description}\r\n                    </p>\r\n                  </div>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={feature.value}\r\n                      onChange={(e) => updateSetting(feature.key, e.target.checked)}\r\n                      className=\"sr-only peer\"\r\n                    />\r\n                    <div className={`w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-${category.color}-300 dark:peer-focus:ring-${category.color}-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-${category.color}-600`}></div>\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {/* Accessibility Resources */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-4\">\r\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 mb-2\">\r\n          Accessibility Resources\r\n        </h4>\r\n        <ul className=\"text-xs text-gray-600 dark:text-gray-400 space-y-1\">\r\n          <li>• Use Tab and Shift+Tab to navigate between elements</li>\r\n          <li>• Press Enter or Space to activate buttons and links</li>\r\n          <li>• Use arrow keys to navigate within menus and lists</li>\r\n          <li>• Press Escape to close dialogs and menus</li>\r\n          <li>• Screen readers are supported with proper ARIA labels</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport { Download, Upload, Database, FileText, Calendar, Shield, AlertTriangle } from 'lucide-react';\r\n\r\nexport const DataExportSettings: React.FC = () => {\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [isImporting, setIsImporting] = useState(false);\r\n  const [exportFormat, setExportFormat] = useState<'json' | 'csv'>('json');\r\n  const [exportData, setExportData] = useState({\r\n    sessions: true,\r\n    tasks: true,\r\n    categories: true,\r\n    settings: true,\r\n    analytics: true\r\n  });\r\n\r\n  const handleExport = async () => {\r\n    setIsExporting(true);\r\n    \r\n    try {\r\n      // Simulate export process\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      \r\n      // Create export data\r\n      const exportPayload = {\r\n        exportDate: new Date().toISOString(),\r\n        version: '1.0',\r\n        data: {\r\n          ...(exportData.sessions && { sessions: [] }),\r\n          ...(exportData.tasks && { tasks: [] }),\r\n          ...(exportData.categories && { categories: [] }),\r\n          ...(exportData.settings && { settings: {} }),\r\n          ...(exportData.analytics && { analytics: {} })\r\n        }\r\n      };\r\n\r\n      // Create and download file\r\n      const blob = new Blob([JSON.stringify(exportPayload, null, 2)], {\r\n        type: exportFormat === 'json' ? 'application/json' : 'text/csv'\r\n      });\r\n      \r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `task-tracker-export-${new Date().toISOString().split('T')[0]}.${exportFormat}`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n      \r\n    } catch (error) {\r\n      console.error('Export failed:', error);\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const handleImport = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    setIsImporting(true);\r\n    \r\n    try {\r\n      const text = await file.text();\r\n      const data = JSON.parse(text);\r\n      \r\n      // Validate import data structure\r\n      if (!data.version || !data.data) {\r\n        throw new Error('Invalid export file format');\r\n      }\r\n      \r\n      // Simulate import process\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      \r\n      console.log('Import data:', data);\r\n      // Here you would actually import the data to your stores/database\r\n      \r\n    } catch (error) {\r\n      console.error('Import failed:', error);\r\n      alert('Failed to import data. Please check the file format.');\r\n    } finally {\r\n      setIsImporting(false);\r\n      // Reset file input\r\n      event.target.value = '';\r\n    }\r\n  };\r\n\r\n  const exportOptions = [\r\n    {\r\n      key: 'sessions' as const,\r\n      name: 'Focus Sessions',\r\n      description: 'All your completed focus sessions and time tracking data',\r\n      icon: Calendar,\r\n      size: '~2-5MB for 1 year of data'\r\n    },\r\n    {\r\n      key: 'tasks' as const,\r\n      name: 'Tasks & Projects',\r\n      description: 'Tasks, categories, and project organization',\r\n      icon: FileText,\r\n      size: '~100KB-1MB typical'\r\n    },\r\n    {\r\n      key: 'categories' as const,\r\n      name: 'Categories',\r\n      description: 'Custom categories with colors and goals',\r\n      icon: Database,\r\n      size: '~1-10KB'\r\n    },\r\n    {\r\n      key: 'settings' as const,\r\n      name: 'App Settings',\r\n      description: 'Preferences, themes, and configuration',\r\n      icon: Shield,\r\n      size: '~1-5KB'\r\n    },\r\n    {\r\n      key: 'analytics' as const,\r\n      name: 'Analytics Data',\r\n      description: 'Productivity insights and statistics',\r\n      icon: Database,\r\n      size: '~500KB-2MB'\r\n    }\r\n  ];\r\n\r\n  const totalSelectedSize = exportOptions\r\n    .filter(option => exportData[option.key])\r\n    .length;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div>\r\n        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 flex items-center space-x-2\">\r\n          <Database className=\"w-5 h-5 text-green-600\" />\r\n          <span>Data Export & Backup</span>\r\n        </h2>\r\n        <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n          Export your data for backup or transfer to another device\r\n        </p>\r\n      </div>\r\n\r\n      {/* Privacy Notice */}\r\n      <div className=\"bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-4\">\r\n        <div className=\"flex items-start space-x-3\">\r\n          <Shield className=\"w-5 h-5 text-green-600 dark:text-green-400 flex-shrink-0 mt-0.5\" />\r\n          <div>\r\n            <h4 className=\"text-sm font-medium text-green-900 dark:text-green-100\">\r\n              Your Data Stays Private\r\n            </h4>\r\n            <p className=\"text-xs text-green-700 dark:text-green-300 mt-1\">\r\n              All exports are generated locally on your device. No data is sent to external servers.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Export Section */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n        <h3 className=\"text-md font-medium text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n          <Download className=\"w-4 h-4 text-blue-600\" />\r\n          <span>Export Data</span>\r\n        </h3>\r\n\r\n        {/* Export Format */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n            Export Format\r\n          </label>\r\n          <div className=\"grid grid-cols-2 gap-2\">\r\n            <button\r\n              onClick={() => setExportFormat('json')}\r\n              className={`p-3 rounded-lg border-2 text-left transition-all ${\r\n                exportFormat === 'json'\r\n                  ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'\r\n                  : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n              }`}\r\n            >\r\n              <div className={`font-medium text-sm ${\r\n                exportFormat === 'json' \r\n                  ? 'text-blue-600 dark:text-blue-400' \r\n                  : 'text-gray-900 dark:text-gray-100'\r\n              }`}>\r\n                JSON\r\n              </div>\r\n              <div className={`text-xs ${\r\n                exportFormat === 'json' \r\n                  ? 'text-blue-500 dark:text-blue-500' \r\n                  : 'text-gray-500 dark:text-gray-400'\r\n              }`}>\r\n                Complete data with structure\r\n              </div>\r\n            </button>\r\n            \r\n            <button\r\n              onClick={() => setExportFormat('csv')}\r\n              className={`p-3 rounded-lg border-2 text-left transition-all ${\r\n                exportFormat === 'csv'\r\n                  ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'\r\n                  : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600'\r\n              }`}\r\n            >\r\n              <div className={`font-medium text-sm ${\r\n                exportFormat === 'csv' \r\n                  ? 'text-blue-600 dark:text-blue-400' \r\n                  : 'text-gray-900 dark:text-gray-100'\r\n              }`}>\r\n                CSV\r\n              </div>\r\n              <div className={`text-xs ${\r\n                exportFormat === 'csv' \r\n                  ? 'text-blue-500 dark:text-blue-500' \r\n                  : 'text-gray-500 dark:text-gray-400'\r\n              }`}>\r\n                Spreadsheet compatible\r\n              </div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Data Selection */}\r\n        <div className=\"mb-6\">\r\n          <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n            Select Data to Export\r\n          </label>\r\n          <div className=\"space-y-2\">\r\n            {exportOptions.map((option) => {\r\n              const Icon = option.icon;\r\n              const isSelected = exportData[option.key];\r\n              \r\n              return (\r\n                <div\r\n                  key={option.key}\r\n                  className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-900 rounded-lg\"\r\n                >\r\n                  <div className=\"flex items-start space-x-3\">\r\n                    <Icon className=\"w-4 h-4 text-gray-600 dark:text-gray-400 mt-0.5\" />\r\n                    <div>\r\n                      <div className=\"font-medium text-sm text-gray-900 dark:text-gray-100\">\r\n                        {option.name}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">\r\n                        {option.description}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500 dark:text-gray-500 mt-1\">\r\n                        {option.size}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={isSelected}\r\n                      onChange={(e) => setExportData(prev => ({\r\n                        ...prev,\r\n                        [option.key]: e.target.checked\r\n                      }))}\r\n                      className=\"sr-only peer\"\r\n                    />\r\n                    <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Export Summary */}\r\n        <div className=\"bg-blue-50 dark:bg-blue-900/20 rounded-lg p-3 mb-4\">\r\n          <div className=\"text-sm text-blue-900 dark:text-blue-100\">\r\n            <strong>{totalSelectedSize}</strong> data types selected for export\r\n          </div>\r\n          <div className=\"text-xs text-blue-700 dark:text-blue-300 mt-1\">\r\n            Export will be saved as: task-tracker-export-{new Date().toISOString().split('T')[0]}.{exportFormat}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Export Button */}\r\n        <button\r\n          onClick={handleExport}\r\n          disabled={isExporting || totalSelectedSize === 0}\r\n          className=\"w-full px-4 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 \r\n                   focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 \r\n                   transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed\r\n                   flex items-center justify-center space-x-2\"\r\n        >\r\n          {isExporting ? (\r\n            <>\r\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n              <span>Exporting...</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Download className=\"w-4 h-4\" />\r\n              <span>Export Data</span>\r\n            </>\r\n          )}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Import Section */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n        <h3 className=\"text-md font-medium text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n          <Upload className=\"w-4 h-4 text-orange-600\" />\r\n          <span>Import Data</span>\r\n        </h3>\r\n\r\n        {/* Warning */}\r\n        <div className=\"bg-orange-50 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg p-4 mb-4\">\r\n          <div className=\"flex items-start space-x-3\">\r\n            <AlertTriangle className=\"w-5 h-5 text-orange-600 dark:text-orange-400 flex-shrink-0 mt-0.5\" />\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-orange-900 dark:text-orange-100\">\r\n                Import Warning\r\n              </h4>\r\n              <p className=\"text-xs text-orange-700 dark:text-orange-300 mt-1\">\r\n                Importing data will merge with your existing data. Some settings may be overwritten. \r\n                Consider exporting your current data first as a backup.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Import Button */}\r\n        <div className=\"space-y-4\">\r\n          <label className=\"block\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\".json,.csv\"\r\n              onChange={handleImport}\r\n              disabled={isImporting}\r\n              className=\"hidden\"\r\n            />\r\n            <div className=\"w-full px-4 py-3 border-2 border-dashed border-gray-300 dark:border-gray-600 \r\n                          rounded-lg text-center cursor-pointer hover:border-orange-400 dark:hover:border-orange-500 \r\n                          transition-colors disabled:opacity-50 disabled:cursor-not-allowed\">\r\n              {isImporting ? (\r\n                <div className=\"flex items-center justify-center space-x-2\">\r\n                  <div className=\"w-4 h-4 border-2 border-orange-600 border-t-transparent rounded-full animate-spin\"></div>\r\n                  <span className=\"text-orange-600 dark:text-orange-400\">Importing...</span>\r\n                </div>\r\n              ) : (\r\n                <div className=\"flex items-center justify-center space-x-2\">\r\n                  <Upload className=\"w-4 h-4 text-gray-600 dark:text-gray-400\" />\r\n                  <span className=\"text-gray-600 dark:text-gray-400\">\r\n                    Click to select export file (.json or .csv)\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </label>\r\n\r\n          <div className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\r\n            Only import files that were exported from Local Task Tracker\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Backup Tips */}\r\n      <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg p-4\">\r\n        <h4 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 mb-2\">\r\n          Backup Best Practices\r\n        </h4>\r\n        <ul className=\"text-xs text-gray-600 dark:text-gray-400 space-y-1\">\r\n          <li>• Export your data regularly (weekly or monthly)</li>\r\n          <li>• Store backups in multiple locations (cloud storage, external drive)</li>\r\n          <li>• Test your backups by importing them on a test device</li>\r\n          <li>• Keep multiple backup versions in case of data corruption</li>\r\n          <li>• Export before major app updates or system changes</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};","/**\r\n * Client-side performance optimization utilities for maintaining 60fps UI responsiveness\r\n * Provides frame rate monitoring, animation optimization, and performance budgeting\r\n */\r\n\r\nexport interface PerformanceMetrics {\r\n  fps: number;\r\n  frameTime: number;\r\n  memoryUsage: number;\r\n  renderTime: number;\r\n  layoutTime: number;\r\n  paintTime: number;\r\n}\r\n\r\nexport interface PerformanceBudget {\r\n  maxFrameTime: number; // 16.67ms for 60fps\r\n  maxRenderTime: number; // 10ms budget for rendering\r\n  maxLayoutTime: number; // 3ms budget for layout\r\n  maxPaintTime: number; // 3ms budget for painting\r\n}\r\n\r\n/**\r\n * Performance optimizer for maintaining 60fps UI responsiveness\r\n */\r\nexport class PerformanceOptimizer {\r\n  private static instance: PerformanceOptimizer;\r\n  private frameCount = 0;\r\n  private lastFrameTime = performance.now();\r\n  private frameTimeHistory: number[] = [];\r\n  private performanceObserver: PerformanceObserver | null = null;\r\n  private animationFrameId: number | null = null;\r\n  private isMonitoring = false;\r\n\r\n  // Performance budgets for 60fps (16.67ms per frame)\r\n  private budget: PerformanceBudget = {\r\n    maxFrameTime: 16.67, // 60fps target\r\n    maxRenderTime: 10,   // Rendering budget\r\n    maxLayoutTime: 3,    // Layout budget\r\n    maxPaintTime: 3,     // Paint budget\r\n  };\r\n\r\n  private callbacks: {\r\n    onFrameDrop: (metrics: PerformanceMetrics) => void;\r\n    onPerformanceWarning: (warning: string, metrics: PerformanceMetrics) => void;\r\n  } = {\r\n    onFrameDrop: () => {},\r\n    onPerformanceWarning: () => {},\r\n  };\r\n\r\n  private constructor() {\r\n    this.setupPerformanceObserver();\r\n  }\r\n\r\n  public static getInstance(): PerformanceOptimizer {\r\n    if (!PerformanceOptimizer.instance) {\r\n      PerformanceOptimizer.instance = new PerformanceOptimizer();\r\n    }\r\n    return PerformanceOptimizer.instance;\r\n  }\r\n\r\n  /**\r\n   * Start monitoring frame rate and performance\r\n   */\r\n  public startMonitoring(): void {\r\n    if (this.isMonitoring) return;\r\n    \r\n    this.isMonitoring = true;\r\n    this.frameCount = 0;\r\n    this.lastFrameTime = performance.now();\r\n    this.frameTimeHistory = [];\r\n    \r\n    this.monitorFrameRate();\r\n    console.log('Performance monitoring started - targeting 60fps');\r\n  }\r\n\r\n  /**\r\n   * Stop monitoring performance\r\n   */\r\n  public stopMonitoring(): void {\r\n    this.isMonitoring = false;\r\n    \r\n    if (this.animationFrameId) {\r\n      cancelAnimationFrame(this.animationFrameId);\r\n      this.animationFrameId = null;\r\n    }\r\n    \r\n    console.log('Performance monitoring stopped');\r\n  }\r\n\r\n  /**\r\n   * Set performance event callbacks\r\n   */\r\n  public setCallbacks(callbacks: Partial<typeof this.callbacks>): void {\r\n    this.callbacks = { ...this.callbacks, ...callbacks };\r\n  }\r\n\r\n  /**\r\n   * Get current performance metrics\r\n   */\r\n  public getCurrentMetrics(): PerformanceMetrics {\r\n    const frameTime = this.frameTimeHistory.length > 0 \r\n      ? this.frameTimeHistory[this.frameTimeHistory.length - 1] \r\n      : 0;\r\n    \r\n    const fps = this.calculateFPS();\r\n    \r\n    return {\r\n      fps,\r\n      frameTime,\r\n      memoryUsage: this.getMemoryUsage(),\r\n      renderTime: this.getLastRenderTime(),\r\n      layoutTime: this.getLastLayoutTime(),\r\n      paintTime: this.getLastPaintTime(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Check if performance is within budget\r\n   */\r\n  public isPerformanceWithinBudget(): boolean {\r\n    const metrics = this.getCurrentMetrics();\r\n    \r\n    return (\r\n      metrics.frameTime <= this.budget.maxFrameTime &&\r\n      metrics.renderTime <= this.budget.maxRenderTime &&\r\n      metrics.layoutTime <= this.budget.maxLayoutTime &&\r\n      metrics.paintTime <= this.budget.maxPaintTime\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Optimize animation using requestAnimationFrame with performance monitoring\r\n   */\r\n  public optimizedAnimation(callback: (timestamp: number, deltaTime: number) => void): number {\r\n    let lastTimestamp = 0;\r\n    \r\n    const animationLoop = (timestamp: number) => {\r\n      const deltaTime = timestamp - lastTimestamp;\r\n      lastTimestamp = timestamp;\r\n      \r\n      // Monitor frame time\r\n      if (deltaTime > this.budget.maxFrameTime) {\r\n        const metrics = this.getCurrentMetrics();\r\n        this.callbacks.onFrameDrop(metrics);\r\n      }\r\n      \r\n      // Execute callback with performance tracking\r\n      const startTime = performance.now();\r\n      callback(timestamp, deltaTime);\r\n      const executionTime = performance.now() - startTime;\r\n      \r\n      // Warn if callback takes too long\r\n      if (executionTime > this.budget.maxRenderTime) {\r\n        const metrics = this.getCurrentMetrics();\r\n        this.callbacks.onPerformanceWarning(\r\n          `Animation callback exceeded render budget: ${executionTime.toFixed(2)}ms > ${this.budget.maxRenderTime}ms`,\r\n          metrics\r\n        );\r\n      }\r\n      \r\n      return requestAnimationFrame(animationLoop);\r\n    };\r\n    \r\n    return requestAnimationFrame(animationLoop);\r\n  }\r\n\r\n  /**\r\n   * Throttle function calls to maintain 60fps\r\n   */\r\n  public throttleForFrameRate<T extends (...args: any[]) => any>(\r\n    func: T,\r\n    fps: number = 60\r\n  ): T {\r\n    const interval = 1000 / fps;\r\n    let lastCall = 0;\r\n    \r\n    return ((...args: Parameters<T>) => {\r\n      const now = performance.now();\r\n      if (now - lastCall >= interval) {\r\n        lastCall = now;\r\n        return func(...args);\r\n      }\r\n    }) as T;\r\n  }\r\n\r\n  /**\r\n   * Debounce function calls with performance consideration\r\n   */\r\n  public debounceForPerformance<T extends (...args: any[]) => any>(\r\n    func: T,\r\n    delay: number = 16.67 // One frame at 60fps\r\n  ): T {\r\n    let timeoutId: number;\r\n    \r\n    return ((...args: Parameters<T>) => {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = window.setTimeout(() => {\r\n        const startTime = performance.now();\r\n        const result = func(...args);\r\n        const executionTime = performance.now() - startTime;\r\n        \r\n        if (executionTime > this.budget.maxRenderTime) {\r\n          const metrics = this.getCurrentMetrics();\r\n          this.callbacks.onPerformanceWarning(\r\n            `Debounced function exceeded render budget: ${executionTime.toFixed(2)}ms`,\r\n            metrics\r\n          );\r\n        }\r\n        \r\n        return result;\r\n      }, delay);\r\n    }) as T;\r\n  }\r\n\r\n  /**\r\n   * Batch DOM operations to minimize layout thrashing\r\n   */\r\n  public batchDOMOperations(operations: (() => void)[]): void {\r\n    // Use requestAnimationFrame to batch operations\r\n    requestAnimationFrame(() => {\r\n      const startTime = performance.now();\r\n      \r\n      // Execute all operations in a single frame\r\n      operations.forEach(operation => {\r\n        try {\r\n          operation();\r\n        } catch (error) {\r\n          console.error('Error in batched DOM operation:', error);\r\n        }\r\n      });\r\n      \r\n      const executionTime = performance.now() - startTime;\r\n      \r\n      if (executionTime > this.budget.maxFrameTime) {\r\n        const metrics = this.getCurrentMetrics();\r\n        this.callbacks.onPerformanceWarning(\r\n          `Batched DOM operations exceeded frame budget: ${executionTime.toFixed(2)}ms`,\r\n          metrics\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Optimize React component updates using time slicing\r\n   */\r\n  public timeSliceUpdates<T>(\r\n    items: T[],\r\n    processItem: (item: T) => void,\r\n    batchSize: number = 10\r\n  ): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      let index = 0;\r\n      \r\n      const processBatch = () => {\r\n        const startTime = performance.now();\r\n        const endIndex = Math.min(index + batchSize, items.length);\r\n        \r\n        // Process batch\r\n        for (let i = index; i < endIndex; i++) {\r\n          processItem(items[i]);\r\n        }\r\n        \r\n        index = endIndex;\r\n        const batchTime = performance.now() - startTime;\r\n        \r\n        // Check if we need to continue\r\n        if (index < items.length) {\r\n          // If batch took too long, reduce batch size\r\n          if (batchTime > this.budget.maxRenderTime) {\r\n            batchSize = Math.max(1, Math.floor(batchSize * 0.8));\r\n          }\r\n          \r\n          // Schedule next batch\r\n          requestAnimationFrame(processBatch);\r\n        } else {\r\n          resolve();\r\n        }\r\n      };\r\n      \r\n      processBatch();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Monitor frame rate using requestAnimationFrame\r\n   */\r\n  private monitorFrameRate(): void {\r\n    const frameCallback = (timestamp: number) => {\r\n      if (!this.isMonitoring) return;\r\n      \r\n      const frameTime = timestamp - this.lastFrameTime;\r\n      this.lastFrameTime = timestamp;\r\n      this.frameCount++;\r\n      \r\n      // Record frame time\r\n      this.frameTimeHistory.push(frameTime);\r\n      \r\n      // Keep only last 60 frames (1 second at 60fps)\r\n      if (this.frameTimeHistory.length > 60) {\r\n        this.frameTimeHistory.shift();\r\n      }\r\n      \r\n      // Check for frame drops\r\n      if (frameTime > this.budget.maxFrameTime * 1.5) { // 25ms threshold\r\n        const metrics = this.getCurrentMetrics();\r\n        this.callbacks.onFrameDrop(metrics);\r\n      }\r\n      \r\n      this.animationFrameId = requestAnimationFrame(frameCallback);\r\n    };\r\n    \r\n    this.animationFrameId = requestAnimationFrame(frameCallback);\r\n  }\r\n\r\n  /**\r\n   * Calculate current FPS\r\n   */\r\n  private calculateFPS(): number {\r\n    if (this.frameTimeHistory.length < 2) return 0;\r\n    \r\n    const avgFrameTime = this.frameTimeHistory.reduce((sum, time) => sum + time, 0) / this.frameTimeHistory.length;\r\n    return avgFrameTime > 0 ? 1000 / avgFrameTime : 0;\r\n  }\r\n\r\n  /**\r\n   * Get memory usage (if available)\r\n   */\r\n  private getMemoryUsage(): number {\r\n    if ('memory' in performance) {\r\n      return (performance as any).memory.usedJSHeapSize / 1024 / 1024; // MB\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Get last render time from performance entries\r\n   */\r\n  private getLastRenderTime(): number {\r\n    const entries = performance.getEntriesByType('measure');\r\n    const renderEntries = entries.filter(entry => entry.name.includes('render'));\r\n    return renderEntries.length > 0 ? renderEntries[renderEntries.length - 1].duration : 0;\r\n  }\r\n\r\n  /**\r\n   * Get last layout time from performance entries\r\n   */\r\n  private getLastLayoutTime(): number {\r\n    const entries = performance.getEntriesByType('measure');\r\n    const layoutEntries = entries.filter(entry => entry.name.includes('layout'));\r\n    return layoutEntries.length > 0 ? layoutEntries[layoutEntries.length - 1].duration : 0;\r\n  }\r\n\r\n  /**\r\n   * Get last paint time from performance entries\r\n   */\r\n  private getLastPaintTime(): number {\r\n    const entries = performance.getEntriesByType('paint');\r\n    return entries.length > 0 ? entries[entries.length - 1].startTime : 0;\r\n  }\r\n\r\n  /**\r\n   * Setup performance observer for detailed metrics\r\n   */\r\n  private setupPerformanceObserver(): void {\r\n    if ('PerformanceObserver' in window) {\r\n      try {\r\n        this.performanceObserver = new PerformanceObserver((list) => {\r\n          const entries = list.getEntries();\r\n          \r\n          entries.forEach(entry => {\r\n            // Monitor long tasks that could cause frame drops\r\n            if (entry.entryType === 'longtask' && entry.duration > this.budget.maxFrameTime) {\r\n              const metrics = this.getCurrentMetrics();\r\n              this.callbacks.onPerformanceWarning(\r\n                `Long task detected: ${entry.duration.toFixed(2)}ms`,\r\n                metrics\r\n              );\r\n            }\r\n            \r\n            // Monitor layout shifts\r\n            if (entry.entryType === 'layout-shift' && (entry as any).value > 0.1) {\r\n              const metrics = this.getCurrentMetrics();\r\n              this.callbacks.onPerformanceWarning(\r\n                `Layout shift detected: ${(entry as any).value.toFixed(3)}`,\r\n                metrics\r\n              );\r\n            }\r\n          });\r\n        });\r\n        \r\n        // Observe long tasks and layout shifts\r\n        this.performanceObserver.observe({ entryTypes: ['longtask', 'layout-shift'] });\r\n      } catch (error) {\r\n        console.warn('Performance Observer not supported:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get performance report\r\n   */\r\n  public getPerformanceReport(): {\r\n    averageFPS: number;\r\n    frameDrops: number;\r\n    performanceScore: number;\r\n    recommendations: string[];\r\n  } {\r\n    const metrics = this.getCurrentMetrics();\r\n    const frameDrops = this.frameTimeHistory.filter(time => time > this.budget.maxFrameTime).length;\r\n    const frameDropRate = this.frameTimeHistory.length > 0 ? frameDrops / this.frameTimeHistory.length : 0;\r\n    \r\n    // Calculate performance score (0-100)\r\n    const fpsScore = Math.min(100, (metrics.fps / 60) * 100);\r\n    const frameDropScore = Math.max(0, 100 - (frameDropRate * 200));\r\n    const performanceScore = (fpsScore + frameDropScore) / 2;\r\n    \r\n    const recommendations: string[] = [];\r\n    \r\n    if (metrics.fps < 55) {\r\n      recommendations.push('Consider reducing animation complexity or frequency');\r\n    }\r\n    \r\n    if (frameDropRate > 0.1) {\r\n      recommendations.push('Optimize heavy operations using time slicing or web workers');\r\n    }\r\n    \r\n    if (metrics.memoryUsage > 50) {\r\n      recommendations.push('Monitor memory usage - consider implementing object pooling');\r\n    }\r\n    \r\n    return {\r\n      averageFPS: metrics.fps,\r\n      frameDrops,\r\n      performanceScore,\r\n      recommendations,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Cleanup resources\r\n   */\r\n  public cleanup(): void {\r\n    this.stopMonitoring();\r\n    \r\n    if (this.performanceObserver) {\r\n      this.performanceObserver.disconnect();\r\n      this.performanceObserver = null;\r\n    }\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const performanceOptimizer = PerformanceOptimizer.getInstance();","import { useState, useEffect } from 'react';\r\nimport { Activity, Zap, AlertTriangle, CheckCircle, BarChart3, Settings } from 'lucide-react';\r\nimport { usePerformanceMonitoring } from '../../hooks/usePerformanceMonitoring';\r\n\r\n/**\r\n * Performance monitoring and settings component\r\n * Displays real-time performance metrics and allows users to configure performance settings\r\n */\r\nexport function PerformanceSettings() {\r\n  const {\r\n    metrics,\r\n    isMonitoring,\r\n    performanceWarnings,\r\n    startMonitoring,\r\n    stopMonitoring,\r\n    clearWarnings,\r\n    getPerformanceReport,\r\n    isPerformanceGood,\r\n  } = usePerformanceMonitoring('PerformanceSettings');\r\n\r\n  const [performanceReport, setPerformanceReport] = useState<any>(null);\r\n  const [autoOptimize, setAutoOptimize] = useState(true);\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n\r\n  // Update performance report periodically\r\n  useEffect(() => {\r\n    if (isMonitoring) {\r\n      const interval = setInterval(() => {\r\n        setPerformanceReport(getPerformanceReport());\r\n      }, 2000);\r\n      \r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [isMonitoring, getPerformanceReport]);\r\n\r\n  const handleToggleMonitoring = () => {\r\n    if (isMonitoring) {\r\n      stopMonitoring();\r\n    } else {\r\n      startMonitoring();\r\n    }\r\n  };\r\n\r\n  const getPerformanceStatus = () => {\r\n    if (!isMonitoring) return { status: 'inactive', color: 'text-gray-500', icon: Activity };\r\n    \r\n    const good = isPerformanceGood();\r\n    if (good && metrics.fps >= 55) {\r\n      return { status: 'excellent', color: 'text-green-500', icon: CheckCircle };\r\n    } else if (metrics.fps >= 45) {\r\n      return { status: 'good', color: 'text-yellow-500', icon: Zap };\r\n    } else {\r\n      return { status: 'poor', color: 'text-red-500', icon: AlertTriangle };\r\n    }\r\n  };\r\n\r\n  const performanceStatus = getPerformanceStatus();\r\n  const StatusIcon = performanceStatus.icon;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <BarChart3 className=\"w-6 h-6 text-blue-500\" />\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n              Performance Monitoring\r\n            </h3>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              Monitor and optimize app performance for 60fps responsiveness\r\n            </p>\r\n          </div>\r\n        </div>\r\n        \r\n        <button\r\n          onClick={handleToggleMonitoring}\r\n          className={`px-4 py-2 rounded-lg font-medium transition-colors ${\r\n            isMonitoring\r\n              ? 'bg-red-100 text-red-700 hover:bg-red-200 dark:bg-red-900/20 dark:text-red-400'\r\n              : 'bg-green-100 text-green-700 hover:bg-green-200 dark:bg-green-900/20 dark:text-green-400'\r\n          }`}\r\n        >\r\n          {isMonitoring ? 'Stop Monitoring' : 'Start Monitoring'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Performance Status */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h4 className=\"text-md font-medium text-gray-900 dark:text-white\">\r\n            Current Performance\r\n          </h4>\r\n          <div className={`flex items-center space-x-2 ${performanceStatus.color}`}>\r\n            <StatusIcon className=\"w-5 h-5\" />\r\n            <span className=\"font-medium capitalize\">{performanceStatus.status}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {isMonitoring ? (\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                {metrics.fps.toFixed(1)}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">FPS</div>\r\n              <div className=\"text-xs text-gray-500\">Target: 60</div>\r\n            </div>\r\n            \r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                {metrics.frameTime.toFixed(1)}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Frame Time (ms)</div>\r\n              <div className=\"text-xs text-gray-500\">Budget: 16.7</div>\r\n            </div>\r\n            \r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                {metrics.memoryUsage.toFixed(1)}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Memory (MB)</div>\r\n              <div className=\"text-xs text-gray-500\">Client-side</div>\r\n            </div>\r\n            \r\n            <div className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                {metrics.renderTime.toFixed(1)}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Render (ms)</div>\r\n              <div className=\"text-xs text-gray-500\">Budget: 10</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n            Start monitoring to see real-time performance metrics\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Performance Report */}\r\n      {performanceReport && (\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\">\r\n          <h4 className=\"text-md font-medium text-gray-900 dark:text-white mb-4\">\r\n            Performance Report\r\n          </h4>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-xl font-bold text-blue-600 dark:text-blue-400\">\r\n                {performanceReport.averageFPS.toFixed(1)}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Average FPS</div>\r\n            </div>\r\n            \r\n            <div className=\"text-center\">\r\n              <div className=\"text-xl font-bold text-orange-600 dark:text-orange-400\">\r\n                {performanceReport.frameDrops}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Frame Drops</div>\r\n            </div>\r\n            \r\n            <div className=\"text-center\">\r\n              <div className={`text-xl font-bold ${\r\n                performanceReport.performanceScore >= 80 \r\n                  ? 'text-green-600 dark:text-green-400'\r\n                  : performanceReport.performanceScore >= 60\r\n                  ? 'text-yellow-600 dark:text-yellow-400'\r\n                  : 'text-red-600 dark:text-red-400'\r\n              }`}>\r\n                {performanceReport.performanceScore.toFixed(0)}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Performance Score</div>\r\n            </div>\r\n          </div>\r\n\r\n          {performanceReport.recommendations.length > 0 && (\r\n            <div className=\"mt-4\">\r\n              <h5 className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\r\n                Recommendations:\r\n              </h5>\r\n              <ul className=\"space-y-1\">\r\n                {performanceReport.recommendations.map((rec: string, index: number) => (\r\n                  <li key={index} className=\"text-sm text-gray-600 dark:text-gray-400 flex items-start\">\r\n                    <span className=\"text-blue-500 mr-2\">•</span>\r\n                    {rec}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Performance Warnings */}\r\n      {performanceWarnings.length > 0 && (\r\n        <div className=\"bg-yellow-50 dark:bg-yellow-900/20 rounded-lg p-4 border border-yellow-200 dark:border-yellow-800\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <AlertTriangle className=\"w-5 h-5 text-yellow-600 dark:text-yellow-400\" />\r\n              <h4 className=\"text-sm font-medium text-yellow-800 dark:text-yellow-200\">\r\n                Performance Warnings ({performanceWarnings.length})\r\n              </h4>\r\n            </div>\r\n            <button\r\n              onClick={clearWarnings}\r\n              className=\"text-xs text-yellow-600 dark:text-yellow-400 hover:text-yellow-800 dark:hover:text-yellow-200\"\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"space-y-1 max-h-32 overflow-y-auto\">\r\n            {performanceWarnings.slice(-5).map((warning, index) => (\r\n              <div key={index} className=\"text-xs text-yellow-700 dark:text-yellow-300\">\r\n                {warning}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Performance Settings */}\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 border border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h4 className=\"text-md font-medium text-gray-900 dark:text-white\">\r\n            Performance Settings\r\n          </h4>\r\n          <Settings className=\"w-5 h-5 text-gray-400\" />\r\n        </div>\r\n\r\n        <div className=\"space-y-4\">\r\n          {/* Auto Optimization */}\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                Auto Optimization\r\n              </label>\r\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">\r\n                Automatically optimize performance when frame drops are detected\r\n              </p>\r\n            </div>\r\n            <button\r\n              onClick={() => setAutoOptimize(!autoOptimize)}\r\n              className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n                autoOptimize\r\n                  ? 'bg-blue-600'\r\n                  : 'bg-gray-200 dark:bg-gray-700'\r\n              }`}\r\n            >\r\n              <span\r\n                className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n                  autoOptimize ? 'translate-x-6' : 'translate-x-1'\r\n                }`}\r\n              />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Advanced Settings Toggle */}\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                Advanced Settings\r\n              </label>\r\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">\r\n                Show detailed performance configuration options\r\n              </p>\r\n            </div>\r\n            <button\r\n              onClick={() => setShowAdvanced(!showAdvanced)}\r\n              className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n                showAdvanced\r\n                  ? 'bg-blue-600'\r\n                  : 'bg-gray-200 dark:bg-gray-700'\r\n              }`}\r\n            >\r\n              <span\r\n                className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n                  showAdvanced ? 'translate-x-6' : 'translate-x-1'\r\n                }`}\r\n              />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Advanced Settings */}\r\n          {showAdvanced && (\r\n            <div className=\"mt-4 p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg space-y-3\">\r\n              <div className=\"text-xs text-gray-600 dark:text-gray-400\">\r\n                <strong>Performance Budgets:</strong>\r\n              </div>\r\n              <div className=\"grid grid-cols-2 gap-3 text-xs\">\r\n                <div>Frame Time: 16.67ms (60fps)</div>\r\n                <div>Render Time: 10ms</div>\r\n                <div>Layout Time: 3ms</div>\r\n                <div>Paint Time: 3ms</div>\r\n              </div>\r\n              \r\n              <div className=\"text-xs text-gray-600 dark:text-gray-400 mt-3\">\r\n                <strong>Optimization Features:</strong>\r\n              </div>\r\n              <div className=\"text-xs space-y-1\">\r\n                <div>• Automatic frame rate monitoring</div>\r\n                <div>• DOM operation batching</div>\r\n                <div>• Time-sliced updates for large datasets</div>\r\n                <div>• Memory usage optimization</div>\r\n                <div>• Animation performance optimization</div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useEffect, useState, useCallback, useRef } from 'react';\r\nimport { performanceOptimizer, PerformanceMetrics } from '../utils/PerformanceOptimizer';\r\n\r\n/**\r\n * React hook for monitoring and optimizing component performance\r\n * Provides 60fps monitoring, performance metrics, and optimization utilities\r\n */\r\nexport function usePerformanceMonitoring(componentName?: string) {\r\n  const [metrics, setMetrics] = useState<PerformanceMetrics>({\r\n    fps: 0,\r\n    frameTime: 0,\r\n    memoryUsage: 0,\r\n    renderTime: 0,\r\n    layoutTime: 0,\r\n    paintTime: 0,\r\n  });\r\n  \r\n  const [isMonitoring, setIsMonitoring] = useState(false);\r\n  const [performanceWarnings, setPerformanceWarnings] = useState<string[]>([]);\r\n  const renderCountRef = useRef(0);\r\n  const lastRenderTimeRef = useRef(performance.now());\r\n\r\n  // Track component renders\r\n  useEffect(() => {\r\n    renderCountRef.current++;\r\n    const renderTime = performance.now() - lastRenderTimeRef.current;\r\n    lastRenderTimeRef.current = performance.now();\r\n    \r\n    if (componentName && renderTime > 16.67) { // Slower than 60fps\r\n      console.warn(`${componentName} render took ${renderTime.toFixed(2)}ms (>16.67ms budget)`);\r\n    }\r\n  });\r\n\r\n  // Start performance monitoring\r\n  const startMonitoring = useCallback(() => {\r\n    if (isMonitoring) return;\r\n    \r\n    setIsMonitoring(true);\r\n    \r\n    // Set up performance callbacks\r\n    performanceOptimizer.setCallbacks({\r\n      onFrameDrop: (frameMetrics) => {\r\n        setMetrics(frameMetrics);\r\n        if (componentName) {\r\n          console.warn(`Frame drop detected in ${componentName}:`, frameMetrics);\r\n        }\r\n      },\r\n      onPerformanceWarning: (warning, warningMetrics) => {\r\n        setMetrics(warningMetrics);\r\n        setPerformanceWarnings(prev => [...prev.slice(-9), warning]); // Keep last 10 warnings\r\n        if (componentName) {\r\n          console.warn(`Performance warning in ${componentName}: ${warning}`);\r\n        }\r\n      },\r\n    });\r\n    \r\n    performanceOptimizer.startMonitoring();\r\n    \r\n    // Update metrics periodically\r\n    const metricsInterval = setInterval(() => {\r\n      const currentMetrics = performanceOptimizer.getCurrentMetrics();\r\n      setMetrics(currentMetrics);\r\n    }, 1000); // Update every second\r\n    \r\n    return () => {\r\n      clearInterval(metricsInterval);\r\n    };\r\n  }, [isMonitoring, componentName]);\r\n\r\n  // Stop performance monitoring\r\n  const stopMonitoring = useCallback(() => {\r\n    setIsMonitoring(false);\r\n    performanceOptimizer.stopMonitoring();\r\n  }, []);\r\n\r\n  // Get performance report\r\n  const getPerformanceReport = useCallback(() => {\r\n    return performanceOptimizer.getPerformanceReport();\r\n  }, []);\r\n\r\n  // Optimized animation frame\r\n  const useOptimizedAnimation = useCallback((\r\n    callback: (timestamp: number, deltaTime: number) => void\r\n  ) => {\r\n    return performanceOptimizer.optimizedAnimation(callback);\r\n  }, []);\r\n\r\n  // Throttled function for performance\r\n  const useThrottledCallback = useCallback(<T extends (...args: any[]) => any>(\r\n    func: T,\r\n    fps: number = 60\r\n  ): T => {\r\n    return performanceOptimizer.throttleForFrameRate(func, fps);\r\n  }, []);\r\n\r\n  // Debounced function for performance\r\n  const useDebouncedCallback = useCallback(<T extends (...args: any[]) => any>(\r\n    func: T,\r\n    delay: number = 16.67\r\n  ): T => {\r\n    return performanceOptimizer.debounceForPerformance(func, delay);\r\n  }, []);\r\n\r\n  // Batch DOM operations\r\n  const batchDOMOperations = useCallback((operations: (() => void)[]) => {\r\n    performanceOptimizer.batchDOMOperations(operations);\r\n  }, []);\r\n\r\n  // Time slice large updates\r\n  const timeSliceUpdates = useCallback(<T>(\r\n    items: T[],\r\n    processItem: (item: T) => void,\r\n    batchSize: number = 10\r\n  ): Promise<void> => {\r\n    return performanceOptimizer.timeSliceUpdates(items, processItem, batchSize);\r\n  }, []);\r\n\r\n  // Check if performance is within budget\r\n  const isPerformanceGood = useCallback(() => {\r\n    return performanceOptimizer.isPerformanceWithinBudget();\r\n  }, []);\r\n\r\n  // Clear performance warnings\r\n  const clearWarnings = useCallback(() => {\r\n    setPerformanceWarnings([]);\r\n  }, []);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (isMonitoring) {\r\n        performanceOptimizer.stopMonitoring();\r\n      }\r\n    };\r\n  }, [isMonitoring]);\r\n\r\n  return {\r\n    // State\r\n    metrics,\r\n    isMonitoring,\r\n    performanceWarnings,\r\n    renderCount: renderCountRef.current,\r\n    \r\n    // Actions\r\n    startMonitoring,\r\n    stopMonitoring,\r\n    clearWarnings,\r\n    \r\n    // Utilities\r\n    getPerformanceReport,\r\n    isPerformanceGood,\r\n    \r\n    // Optimization helpers\r\n    useOptimizedAnimation,\r\n    useThrottledCallback,\r\n    useDebouncedCallback,\r\n    batchDOMOperations,\r\n    timeSliceUpdates,\r\n  };\r\n}\r\n\r\n/**\r\n * Hook for monitoring specific component render performance\r\n */\r\nexport function useRenderPerformance(componentName: string) {\r\n  const renderStartTime = useRef<number>(0);\r\n  const renderTimes = useRef<number[]>([]);\r\n\r\n  useEffect(() => {\r\n    renderStartTime.current = performance.now();\r\n  });\r\n\r\n  useEffect(() => {\r\n    const renderTime = performance.now() - renderStartTime.current;\r\n    renderTimes.current.push(renderTime);\r\n    \r\n    // Keep only last 10 render times\r\n    if (renderTimes.current.length > 10) {\r\n      renderTimes.current.shift();\r\n    }\r\n    \r\n    // Warn about slow renders\r\n    if (renderTime > 16.67) {\r\n      console.warn(`${componentName} slow render: ${renderTime.toFixed(2)}ms`);\r\n    }\r\n  });\r\n\r\n  const getAverageRenderTime = useCallback(() => {\r\n    if (renderTimes.current.length === 0) return 0;\r\n    const sum = renderTimes.current.reduce((a, b) => a + b, 0);\r\n    return sum / renderTimes.current.length;\r\n  }, []);\r\n\r\n  const getLastRenderTime = useCallback(() => {\r\n    return renderTimes.current[renderTimes.current.length - 1] || 0;\r\n  }, []);\r\n\r\n  return {\r\n    averageRenderTime: getAverageRenderTime(),\r\n    lastRenderTime: getLastRenderTime(),\r\n    renderCount: renderTimes.current.length,\r\n  };\r\n}\r\n\r\n/**\r\n * Hook for optimizing expensive computations\r\n */\r\nexport function useOptimizedComputation<T>(\r\n  computation: () => T,\r\n  dependencies: React.DependencyList,\r\n  options: {\r\n    timeSlice?: boolean;\r\n    maxExecutionTime?: number;\r\n  } = {}\r\n): { result: T | null; isComputing: boolean; error: Error | null } {\r\n  const [result, setResult] = useState<T | null>(null);\r\n  const [isComputing, setIsComputing] = useState(false);\r\n  const [error, setError] = useState<Error | null>(null);\r\n  \r\n  const { timeSlice = false, maxExecutionTime = 16.67 } = options;\r\n\r\n  useEffect(() => {\r\n    setIsComputing(true);\r\n    setError(null);\r\n    \r\n    const executeComputation = async () => {\r\n      try {\r\n        if (timeSlice) {\r\n          // Time-sliced execution for heavy computations\r\n          let computationResult: T;\r\n          \r\n          await new Promise<void>((resolve) => {\r\n            const timeSlicedExecution = () => {\r\n              const sliceStartTime = performance.now();\r\n              \r\n              try {\r\n                computationResult = computation();\r\n                setResult(computationResult);\r\n                resolve();\r\n              } catch (err) {\r\n                const executionTime = performance.now() - sliceStartTime;\r\n                \r\n                if (executionTime > maxExecutionTime) {\r\n                  // If execution is taking too long, defer to next frame\r\n                  requestAnimationFrame(timeSlicedExecution);\r\n                } else {\r\n                  throw err;\r\n                }\r\n              }\r\n            };\r\n            \r\n            timeSlicedExecution();\r\n          });\r\n        } else {\r\n          // Regular execution with performance monitoring\r\n          const startTime = performance.now();\r\n          const computationResult = computation();\r\n          const executionTime = performance.now() - startTime;\r\n          \r\n          if (executionTime > maxExecutionTime) {\r\n            console.warn(`Computation exceeded time budget: ${executionTime.toFixed(2)}ms > ${maxExecutionTime}ms`);\r\n          }\r\n          \r\n          setResult(computationResult);\r\n        }\r\n      } catch (err) {\r\n        setError(err as Error);\r\n        console.error('Computation error:', err);\r\n      } finally {\r\n        setIsComputing(false);\r\n      }\r\n    };\r\n\r\n    executeComputation();\r\n  }, dependencies);\r\n\r\n  return { result, isComputing, error };\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Bell, Settings as SettingsIcon, Palette, Timer, Heart, Keyboard, Shield, Database, BarChart3 } from 'lucide-react';\r\nimport { NotificationPreferences } from '../components/Notifications';\r\nimport { AppearanceSettings, KeyboardShortcuts, AccessibilitySettings, DataExportSettings, PerformanceSettings } from '../components/Settings';\r\nimport { useNotificationStore } from '../stores/notificationStore';\r\nimport { useTimerStore } from '../stores/timerStore';\r\nimport { useMindfulnessStore } from '../stores/mindfulnessStore';\r\n\r\nconst Settings: React.FC = () => {\r\n  const [activeTab, setActiveTab] = useState<'session' | 'notifications' | 'mindfulness' | 'appearance' | 'keyboard' | 'accessibility' | 'data' | 'performance'>('session');\r\n  \r\n  // Timer store for session preferences\r\n  const { sessionPreferences, updateSessionPreferences } = useTimerStore();\r\n  \r\n  // Notification store\r\n  const { preferences: notificationPreferences, updatePreferences: updateNotificationPreferences } = useNotificationStore();\r\n  \r\n  // Mindfulness store\r\n  const { \r\n    mindfulnessEnabled,\r\n    transitionAnimationsEnabled,\r\n    breathingExerciseEnabled,\r\n    sessionReflectionEnabled,\r\n    updateMindfulnessSettings \r\n  } = useMindfulnessStore();\r\n  \r\n  // Local state for session preferences\r\n  const [sessionPrefs, setSessionPrefs] = useState(sessionPreferences);\r\n  \r\n  // Update local session preferences when store changes\r\n  useEffect(() => {\r\n    setSessionPrefs(sessionPreferences);\r\n  }, [sessionPreferences]);\r\n  \r\n  // Handle session preference changes\r\n  const handleSessionPrefChange = (key: keyof typeof sessionPrefs, value: any) => {\r\n    const updated = { ...sessionPrefs, [key]: value };\r\n    setSessionPrefs(updated);\r\n    updateSessionPreferences(updated);\r\n  };\r\n\r\n  const tabs = [\r\n    { id: 'session' as const, label: 'Session', icon: Timer },\r\n    { id: 'notifications' as const, label: 'Notifications', icon: Bell },\r\n    { id: 'mindfulness' as const, label: 'Mindfulness', icon: Heart },\r\n    { id: 'appearance' as const, label: 'Appearance', icon: Palette },\r\n    { id: 'keyboard' as const, label: 'Shortcuts', icon: Keyboard },\r\n    { id: 'accessibility' as const, label: 'Accessibility', icon: Shield },\r\n    { id: 'performance' as const, label: 'Performance', icon: BarChart3 },\r\n    { id: 'data' as const, label: 'Data', icon: Database },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Settings</h1>\r\n        <p className=\"text-gray-600 dark:text-gray-400 mt-1\">Customize your productivity experience</p>\r\n      </div>\r\n      \r\n      {/* Tab navigation */}\r\n      <div className=\"border-b border-gray-200 dark:border-gray-700\">\r\n        <nav className=\"-mb-px flex space-x-8\">\r\n          {tabs.map((tab) => {\r\n            const Icon = tab.icon;\r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 transition-colors ${\r\n                  activeTab === tab.id\r\n                    ? 'border-blue-500 text-blue-600 dark:text-blue-400'\r\n                    : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300 dark:hover:border-gray-600'\r\n                }`}\r\n              >\r\n                <Icon className=\"w-4 h-4\" />\r\n                <span>{tab.label}</span>\r\n              </button>\r\n            );\r\n          })}\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Tab content */}\r\n      <div className=\"mt-6\">\r\n        {activeTab === 'session' && (\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n                <Timer className=\"w-5 h-5 text-blue-600\" />\r\n                <span>Session Durations</span>\r\n              </h2>\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Deep Work Duration (minutes)</label>\r\n                  <input \r\n                    type=\"number\" \r\n                    className=\"block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\" \r\n                    value={sessionPrefs.deepWorkDuration}\r\n                    onChange={(e) => handleSessionPrefChange('deepWorkDuration', parseInt(e.target.value))}\r\n                    min=\"5\"\r\n                    max=\"180\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"label\">Quick Task Duration (minutes)</label>\r\n                  <input \r\n                    type=\"number\" \r\n                    className=\"input\" \r\n                    value={sessionPrefs.quickTaskDuration}\r\n                    onChange={(e) => handleSessionPrefChange('quickTaskDuration', parseInt(e.target.value))}\r\n                    min=\"5\"\r\n                    max=\"60\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"label\">Break Duration (minutes)</label>\r\n                  <input \r\n                    type=\"number\" \r\n                    className=\"input\" \r\n                    value={sessionPrefs.breakDuration}\r\n                    onChange={(e) => handleSessionPrefChange('breakDuration', parseInt(e.target.value))}\r\n                    min=\"5\"\r\n                    max=\"30\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"label\">Custom Duration (minutes)</label>\r\n                  <input \r\n                    type=\"number\" \r\n                    className=\"input\" \r\n                    value={sessionPrefs.customDuration}\r\n                    onChange={(e) => handleSessionPrefChange('customDuration', parseInt(e.target.value))}\r\n                    min=\"5\"\r\n                    max=\"180\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n                <SettingsIcon className=\"w-5 h-5 text-green-600\" />\r\n                <span>Session Behavior</span>\r\n              </h2>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-700\">Auto-start breaks</label>\r\n                    <p className=\"text-xs text-gray-500\">Automatically start break sessions after work sessions</p>\r\n                  </div>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={sessionPrefs.autoStartBreaks}\r\n                      onChange={(e) => handleSessionPrefChange('autoStartBreaks', e.target.checked)}\r\n                      className=\"sr-only peer\"\r\n                    />\r\n                    <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                  </label>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-700\">Sound enabled</label>\r\n                    <p className=\"text-xs text-gray-500\">Play sounds for session transitions</p>\r\n                  </div>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={sessionPrefs.soundEnabled}\r\n                      onChange={(e) => handleSessionPrefChange('soundEnabled', e.target.checked)}\r\n                      className=\"sr-only peer\"\r\n                    />\r\n                    <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                  </label>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-700\">Notifications enabled</label>\r\n                    <p className=\"text-xs text-gray-500\">Show session completion notifications</p>\r\n                  </div>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={sessionPrefs.notificationsEnabled}\r\n                      onChange={(e) => handleSessionPrefChange('notificationsEnabled', e.target.checked)}\r\n                      className=\"sr-only peer\"\r\n                    />\r\n                    <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'notifications' && (\r\n          <NotificationPreferences\r\n            preferences={notificationPreferences}\r\n            onUpdate={updateNotificationPreferences}\r\n          />\r\n        )}\r\n\r\n        {activeTab === 'mindfulness' && (\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center space-x-2\">\r\n                <Heart className=\"w-5 h-5 text-pink-600\" />\r\n                <span>Mindful Transitions</span>\r\n              </h2>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Enable mindful transitions</label>\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">Show mindfulness exercises between sessions</p>\r\n                  </div>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={mindfulnessEnabled}\r\n                      onChange={(e) => updateMindfulnessSettings({ mindfulnessEnabled: e.target.checked })}\r\n                      className=\"sr-only peer\"\r\n                    />\r\n                    <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-pink-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-pink-600\"></div>\r\n                  </label>\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Transition animations</label>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer mt-2\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={transitionAnimationsEnabled}\r\n                      onChange={(e) => updateMindfulnessSettings({ transitionAnimationsEnabled: e.target.checked })}\r\n                      className=\"sr-only peer\"\r\n                      disabled={!mindfulnessEnabled}\r\n                    />\r\n                    <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-pink-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-pink-600 peer-disabled:opacity-50\"></div>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4\">Mindfulness Exercises</h2>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Breathing exercises</label>\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">Guided breathing between sessions</p>\r\n                  </div>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={breathingExerciseEnabled}\r\n                      onChange={(e) => updateMindfulnessSettings({ breathingExerciseEnabled: e.target.checked })}\r\n                      className=\"sr-only peer\"\r\n                      disabled={!mindfulnessEnabled}\r\n                    />\r\n                    <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-pink-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-pink-600 peer-disabled:opacity-50\"></div>\r\n                  </label>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Auto-show on session end</label>\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">Show mindfulness prompts after sessions</p>\r\n                  </div>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={mindfulnessEnabled}\r\n                      onChange={(e) => updateMindfulnessSettings({ autoShowOnSessionEnd: e.target.checked })}\r\n                      className=\"sr-only peer\"\r\n                      disabled={!mindfulnessEnabled}\r\n                    />\r\n                    <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-pink-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-pink-600 peer-disabled:opacity-50\"></div>\r\n                  </label>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Session reflection</label>\r\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">Reflect on completed sessions</p>\r\n                  </div>\r\n                  <label className=\"relative inline-flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={sessionReflectionEnabled}\r\n                      onChange={(e) => updateMindfulnessSettings({ sessionReflectionEnabled: e.target.checked })}\r\n                      className=\"sr-only peer\"\r\n                      disabled={!mindfulnessEnabled}\r\n                    />\r\n                    <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-pink-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-pink-600 peer-disabled:opacity-50\"></div>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'appearance' && (\r\n          <AppearanceSettings />\r\n        )}\r\n\r\n        {activeTab === 'keyboard' && (\r\n          <KeyboardShortcuts />\r\n        )}\r\n\r\n        {activeTab === 'accessibility' && (\r\n          <AccessibilitySettings />\r\n        )}\r\n\r\n        {activeTab === 'performance' && (\r\n          <PerformanceSettings />\r\n        )}\r\n\r\n        {activeTab === 'data' && (\r\n          <DataExportSettings />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings"],"names":["NotificationPreferencesComponent","preferences","onUpdate","localPreferences","setLocalPreferences","useState","useEffect","updatePreference","path","value","keys","split","updated","current","i","length","toggleSection","section","enabled","jsxs","className","children","jsx","Bell","type","checked","onChange","e","target","Zap","sessionComplete","disabled","sound","showTaskInfo","min","max","duration","parseInt","Clock","breakReminders","frequency","smartThreshold","Moon","dailyReview","time","weekendsIncluded","Target","weeklyReview","dayOfWeek","goalAchievements","showProgress","streakMilestones","milestones","join","map","s","trim","filter","n","isNaN","sort","a","b","placeholder","AlertTriangle","idleDetection","threshold","systemSleep","Volume2","focusMode","suppressOtherNotifications","allowBreakReminders","allowUrgentOnly","AppearanceSettings","mode","fontSize","compactMode","showSecondsInTimer","dashboardLayout","isDark","setMode","setFontSize","setCompactMode","setShowSecondsInTimer","setDashboardLayout","useThemeStore","themeOptions","label","icon","Sun","description","Monitor","Palette","option","Icon","isSelected","onClick","Type","Eye","Layout","defaultShortcuts","id","name","defaultKeys","category","formatKeys","key","toUpperCase","useKeyboardStore","create","persist","set","get","shortcuts","shortcut","action","isRecording","updateShortcut","state","resetShortcut","resetAllShortcuts","startRecording","stopRecording","registerShortcuts","handleKeyDown","event","currentKeys","ctrlKey","push","altKey","shiftKey","metaKey","matchingShortcut","find","keysMatch","keys1","keys2","every","index","preventDefault","stopPropagation","document","addEventListener","window","__keyboardCleanup","removeEventListener","unregisterShortcuts","version","partialize","KeyboardShortcuts","searchTerm","setSearchTerm","recordingKeys","setRecordingKeys","groupedShortcuts","toLowerCase","includes","reduce","groups","categoryLabels","timer","navigation","tasks","general","categoryIcons","Search","Keyboard","RotateCcw","handleKeyUp","Object","entries","categoryShortcuts","handleStartRecording","shortcutId","AccessibilitySettings","settings","setSettings","React","highContrast","reduceMotion","screenReaderOptimized","keyboardNavigation","focusIndicators","soundAlerts","visualAlerts","autoplayMedia","largeClickTargets","simplifiedInterface","accessibilityFeatures","color","features","MousePointer","Shield","Heart","size","feature","prev","root","documentElement","classList","add","remove","updateSetting","DataExportSettings","isExporting","setIsExporting","isImporting","setIsImporting","exportFormat","setExportFormat","exportData","setExportData","sessions","categories","analytics","exportOptions","Calendar","FileText","Database","totalSelectedSize","Download","Date","toISOString","async","Promise","resolve","setTimeout","exportPayload","exportDate","data","blob","Blob","JSON","stringify","url","URL","createObjectURL","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","error","Fragment","Upload","accept","file","files","text","parse","Error","alert","PerformanceOptimizer","static","frameCount","lastFrameTime","performance","now","frameTimeHistory","performanceObserver","animationFrameId","isMonitoring","budget","maxFrameTime","maxRenderTime","maxLayoutTime","maxPaintTime","callbacks","onFrameDrop","onPerformanceWarning","constructor","this","setupPerformanceObserver","getInstance","instance","startMonitoring","monitorFrameRate","stopMonitoring","cancelAnimationFrame","setCallbacks","getCurrentMetrics","frameTime","fps","calculateFPS","memoryUsage","getMemoryUsage","renderTime","getLastRenderTime","layoutTime","getLastLayoutTime","paintTime","getLastPaintTime","isPerformanceWithinBudget","metrics","optimizedAnimation","callback","lastTimestamp","animationLoop","timestamp","deltaTime","startTime","executionTime","toFixed","requestAnimationFrame","throttleForFrameRate","func","interval","lastCall","args","debounceForPerformance","delay","timeoutId","clearTimeout","result","batchDOMOperations","operations","forEach","operation","timeSliceUpdates","items","processItem","batchSize","processBatch","endIndex","Math","batchTime","floor","frameCallback","shift","avgFrameTime","sum","memory","usedJSHeapSize","renderEntries","getEntriesByType","entry","layoutEntries","PerformanceObserver","list","getEntries","entryType","observe","entryTypes","getPerformanceReport","frameDrops","frameDropRate","performanceScore","recommendations","averageFPS","cleanup","disconnect","performanceOptimizer","PerformanceSettings","performanceWarnings","clearWarnings","isPerformanceGood","componentName","setMetrics","setIsMonitoring","setPerformanceWarnings","renderCountRef","useRef","lastRenderTimeRef","useCallback","frameMetrics","warning","warningMetrics","slice","metricsInterval","setInterval","currentMetrics","clearInterval","useOptimizedAnimation","useThrottledCallback","useDebouncedCallback","renderCount","usePerformanceMonitoring","performanceReport","setPerformanceReport","autoOptimize","setAutoOptimize","showAdvanced","setShowAdvanced","performanceStatus","status","Activity","CheckCircle","getPerformanceStatus","StatusIcon","BarChart3","rec","Settings","activeTab","setActiveTab","sessionPreferences","updateSessionPreferences","useTimerStore","notificationPreferences","updatePreferences","updateNotificationPreferences","useNotificationStore","mindfulnessEnabled","transitionAnimationsEnabled","breathingExerciseEnabled","sessionReflectionEnabled","updateMindfulnessSettings","useMindfulnessStore","sessionPrefs","setSessionPrefs","handleSessionPrefChange","tabs","Timer","tab","deepWorkDuration","quickTaskDuration","breakDuration","customDuration","SettingsIcon","autoStartBreaks","soundEnabled","notificationsEnabled","NotificationPreferences","autoShowOnSessionEnd"],"mappings":"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"}