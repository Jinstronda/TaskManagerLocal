{"version":3,"file":"Categories-YC5rCjhp.js","sources":["../../src/components/Category/ColorPicker.tsx","../../src/components/Category/IconPicker.tsx","../../src/components/Category/CategoryForm.tsx","../../src/components/Category/CategoryList.tsx","../../src/pages/Categories.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Check } from 'lucide-react';\r\n\r\ninterface ColorPickerProps {\r\n  selectedColor: string;\r\n  onColorChange: (color: string) => void;\r\n  className?: string;\r\n}\r\n\r\n// Predefined color palette optimized for productivity apps\r\nconst COLOR_PALETTE = [\r\n  '#3B82F6', // Blue\r\n  '#10B981', // Emerald\r\n  '#F59E0B', // Amber\r\n  '#EF4444', // Red\r\n  '#8B5CF6', // Violet\r\n  '#06B6D4', // Cyan\r\n  '#84CC16', // Lime\r\n  '#F97316', // Orange\r\n  '#EC4899', // Pink\r\n  '#6B7280', // Gray\r\n  '#14B8A6', // Teal\r\n  '#A855F7', // Purple\r\n  '#DC2626', // Red-600\r\n  '#059669', // Emerald-600\r\n  '#D97706', // Amber-600\r\n  '#7C3AED', // Violet-600\r\n  '#0891B2', // Cyan-600\r\n  '#65A30D', // Lime-600\r\n  '#EA580C', // Orange-600\r\n  '#DB2777', // Pink-600\r\n  '#4B5563', // Gray-600\r\n  '#0D9488', // Teal-600\r\n  '#9333EA', // Purple-600\r\n  '#B91C1C', // Red-700\r\n];\r\n\r\nexport const ColorPicker: React.FC<ColorPickerProps> = ({\r\n  selectedColor,\r\n  onColorChange,\r\n  className = '',\r\n}) => {\r\n  const [customColor, setCustomColor] = useState(selectedColor);\r\n  const [showCustomInput, setShowCustomInput] = useState(false);\r\n\r\n  const handleCustomColorChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const color = e.target.value;\r\n    setCustomColor(color);\r\n    onColorChange(color);\r\n  };\r\n\r\n  const handlePresetColorClick = (color: string) => {\r\n    setCustomColor(color);\r\n    onColorChange(color);\r\n    setShowCustomInput(false);\r\n  };\r\n\r\n  const isValidHexColor = (color: string) => {\r\n    return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(color);\r\n  };\r\n\r\n  return (\r\n    <div className={`space-y-3 ${className}`}>\r\n      {/* Color Palette Grid */}\r\n      <div className=\"grid grid-cols-8 gap-2\">\r\n        {COLOR_PALETTE.map((color) => (\r\n          <button\r\n            key={color}\r\n            type=\"button\"\r\n            className={`\r\n              w-8 h-8 rounded-lg border-2 transition-all duration-200 hover:scale-110\r\n              ${selectedColor === color \r\n                ? 'border-gray-900 dark:border-white shadow-lg' \r\n                : 'border-gray-200 dark:border-gray-600 hover:border-gray-400'\r\n              }\r\n            `}\r\n            style={{ backgroundColor: color }}\r\n            onClick={() => handlePresetColorClick(color)}\r\n            title={color}\r\n          >\r\n            {selectedColor === color && (\r\n              <Check className=\"w-4 h-4 text-white mx-auto drop-shadow-sm\" />\r\n            )}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Custom Color Section */}\r\n      <div className=\"space-y-2\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 transition-colors\"\r\n          onClick={() => setShowCustomInput(!showCustomInput)}\r\n        >\r\n          {showCustomInput ? 'Hide custom color' : 'Use custom color'}\r\n        </button>\r\n\r\n        {showCustomInput && (\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"color\"\r\n                value={customColor}\r\n                onChange={handleCustomColorChange}\r\n                className=\"w-12 h-8 rounded border border-gray-300 dark:border-gray-600 cursor-pointer\"\r\n              />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <input\r\n                type=\"text\"\r\n                value={customColor}\r\n                onChange={(e) => {\r\n                  setCustomColor(e.target.value);\r\n                  if (isValidHexColor(e.target.value)) {\r\n                    onColorChange(e.target.value);\r\n                  }\r\n                }}\r\n                placeholder=\"#3B82F6\"\r\n                className={`\r\n                  w-full px-3 py-1 text-sm border rounded-md\r\n                  ${isValidHexColor(customColor)\r\n                    ? 'border-gray-300 dark:border-gray-600'\r\n                    : 'border-red-300 dark:border-red-600'\r\n                  }\r\n                  bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100\r\n                  focus:ring-2 focus:ring-blue-500 focus:border-transparent\r\n                `}\r\n              />\r\n              {!isValidHexColor(customColor) && (\r\n                <p className=\"text-xs text-red-500 mt-1\">\r\n                  Please enter a valid hex color (e.g., #3B82F6)\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Selected Color Preview */}\r\n      <div className=\"flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400\">\r\n        <span>Selected:</span>\r\n        <div\r\n          className=\"w-6 h-6 rounded border border-gray-300 dark:border-gray-600\"\r\n          style={{ backgroundColor: selectedColor }}\r\n        />\r\n        <span className=\"font-mono\">{selectedColor}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport {\r\n  Folder,\r\n  FolderOpen,\r\n  Briefcase,\r\n  Code,\r\n  BookOpen,\r\n  Heart,\r\n  Home,\r\n  User,\r\n  Star,\r\n  Target,\r\n  Zap,\r\n  Coffee,\r\n  Music,\r\n  Camera,\r\n  Palette,\r\n  Gamepad2,\r\n  Dumbbell,\r\n  Car,\r\n  Plane,\r\n  ShoppingBag,\r\n  DollarSign,\r\n  TrendingUp,\r\n  Calendar,\r\n  Clock,\r\n  CheckCircle,\r\n  X,\r\n  Search,\r\n  Archive,\r\n  Bookmark,\r\n  Tag,\r\n  Flag,\r\n  Wifi,\r\n  Smartphone,\r\n  Monitor,\r\n  Laptop,\r\n  Tablet,\r\n  Headphones,\r\n  Database,\r\n  Server,\r\n  Cloud,\r\n  Users,\r\n  Award,\r\n  Trophy,\r\n  Medal,\r\n  Flower,\r\n  Leaf,\r\n  Smile,\r\n  Cpu,\r\n} from 'lucide-react';\r\n\r\ninterface IconPickerProps {\r\n  selectedIcon?: string;\r\n  onIconChange: (icon: string | undefined) => void;\r\n  className?: string;\r\n}\r\n\r\n// Icon categories for better organization\r\nconst ICON_CATEGORIES = {\r\n  'Work & Business': [\r\n    { name: 'briefcase', icon: Briefcase },\r\n    { name: 'code', icon: Code },\r\n    { name: 'trending-up', icon: TrendingUp },\r\n    { name: 'dollar-sign', icon: DollarSign },\r\n    { name: 'target', icon: Target },\r\n    { name: 'award', icon: Award },\r\n    { name: 'trophy', icon: Trophy },\r\n    { name: 'medal', icon: Medal },\r\n  ],\r\n  'Learning & Education': [\r\n    { name: 'book-open', icon: BookOpen },\r\n    { name: 'lightbulb', icon: Zap },\r\n  ],\r\n  'Personal & Life': [\r\n    { name: 'heart', icon: Heart },\r\n    { name: 'home', icon: Home },\r\n    { name: 'user', icon: User },\r\n    { name: 'users', icon: Users },\r\n    { name: 'smile', icon: Smile },\r\n    { name: 'coffee', icon: Coffee },\r\n    { name: 'dumbbell', icon: Dumbbell },\r\n    { name: 'car', icon: Car },\r\n    { name: 'plane', icon: Plane },\r\n    { name: 'shopping-bag', icon: ShoppingBag },\r\n  ],\r\n  'Creative & Hobbies': [\r\n    { name: 'palette', icon: Palette },\r\n    { name: 'camera', icon: Camera },\r\n    { name: 'music', icon: Music },\r\n    { name: 'gamepad-2', icon: Gamepad2 },\r\n    { name: 'flower', icon: Flower },\r\n    { name: 'leaf', icon: Leaf },\r\n  ],\r\n  'Organization': [\r\n    { name: 'folder', icon: Folder },\r\n    { name: 'folder-open', icon: FolderOpen },\r\n    { name: 'calendar', icon: Calendar },\r\n    { name: 'clock', icon: Clock },\r\n    { name: 'check-circle', icon: CheckCircle },\r\n    { name: 'star', icon: Star },\r\n    { name: 'bookmark', icon: Bookmark },\r\n    { name: 'tag', icon: Tag },\r\n    { name: 'flag', icon: Flag },\r\n    { name: 'archive', icon: Archive },\r\n  ],\r\n  'Technology': [\r\n    { name: 'monitor', icon: Monitor },\r\n    { name: 'laptop', icon: Laptop },\r\n    { name: 'smartphone', icon: Smartphone },\r\n    { name: 'tablet', icon: Tablet },\r\n    { name: 'headphones', icon: Headphones },\r\n    { name: 'wifi', icon: Wifi },\r\n    { name: 'cloud', icon: Cloud },\r\n    { name: 'database', icon: Database },\r\n    { name: 'server', icon: Server },\r\n    { name: 'cpu', icon: Cpu },\r\n  ],\r\n};\r\n\r\nexport const IconPicker: React.FC<IconPickerProps> = ({\r\n  selectedIcon,\r\n  onIconChange,\r\n  className = '',\r\n}) => {\r\n  const [activeCategory, setActiveCategory] = useState<string>('Work & Business');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Get all icons for search\r\n  const allIcons = Object.values(ICON_CATEGORIES).flat();\r\n\r\n  // Filter icons based on search term\r\n  const filteredIcons = searchTerm\r\n    ? allIcons.filter(icon =>\r\n        icon.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    : ICON_CATEGORIES[activeCategory as keyof typeof ICON_CATEGORIES] || [];\r\n\r\n  const handleIconSelect = (iconName: string) => {\r\n    onIconChange(iconName === selectedIcon ? undefined : iconName);\r\n  };\r\n\r\n  const handleClearIcon = () => {\r\n    onIconChange(undefined);\r\n  };\r\n\r\n  const getIconComponent = (iconName: string) => {\r\n    const iconData = allIcons.find(icon => icon.name === iconName);\r\n    return iconData?.icon || Folder;\r\n  };\r\n\r\n  return (\r\n    <div className={`space-y-4 ${className}`}>\r\n      {/* Search */}\r\n      <div className=\"relative\">\r\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400\" />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search icons...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n        />\r\n      </div>\r\n\r\n      {/* Category Tabs */}\r\n      {!searchTerm && (\r\n        <div className=\"flex flex-wrap gap-1\">\r\n          {Object.keys(ICON_CATEGORIES).map((category) => (\r\n            <button\r\n              key={category}\r\n              type=\"button\"\r\n              onClick={() => setActiveCategory(category)}\r\n              className={`\r\n                px-3 py-1 text-xs rounded-full transition-colors\r\n                ${activeCategory === category\r\n                  ? 'bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200'\r\n                  : 'bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n                }\r\n              `}\r\n            >\r\n              {category}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Selected Icon Display */}\r\n      {selectedIcon && (\r\n        <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-md\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"w-6 h-6 text-gray-600 dark:text-gray-400\">\r\n              {React.createElement(getIconComponent(selectedIcon))}\r\n            </div>\r\n            <span className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n              Selected: {selectedIcon}\r\n            </span>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleClearIcon}\r\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 transition-colors\"\r\n            title=\"Clear selection\"\r\n          >\r\n            <X className=\"w-4 h-4\" />\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Icon Grid */}\r\n      <div className=\"grid grid-cols-8 gap-2 max-h-64 overflow-y-auto\">\r\n        {filteredIcons.map(({ name, icon: IconComponent }) => (\r\n          <button\r\n            key={name}\r\n            type=\"button\"\r\n            onClick={() => handleIconSelect(name)}\r\n            className={`\r\n              w-10 h-10 rounded-lg border-2 transition-all duration-200 hover:scale-110 flex items-center justify-center\r\n              ${selectedIcon === name\r\n                ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\r\n                : 'border-gray-200 dark:border-gray-600 hover:border-gray-400 text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200'\r\n              }\r\n            `}\r\n            title={name}\r\n          >\r\n            <IconComponent className=\"w-5 h-5\" />\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* No results message */}\r\n      {searchTerm && filteredIcons.length === 0 && (\r\n        <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n          <Search className=\"w-8 h-8 mx-auto mb-2 opacity-50\" />\r\n          <p>No icons found for \"{searchTerm}\"</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Help text */}\r\n      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n        Click an icon to select it, or click again to deselect. Icons help identify categories at a glance.\r\n      </p>\r\n    </div>\r\n  );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { X, Save, AlertCircle } from 'lucide-react';\r\nimport { Category, CreateCategoryForm } from '../../../../shared/types';\r\nimport { ColorPicker } from './ColorPicker';\r\nimport { IconPicker } from './IconPicker';\r\nimport { useCategoryActions } from '../../stores/categoryStore';\r\n\r\ninterface CategoryFormProps {\r\n  category?: Category; // If provided, this is an edit form\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSuccess?: (category: Category) => void;\r\n}\r\n\r\nexport const CategoryForm: React.FC<CategoryFormProps> = ({\r\n  category,\r\n  isOpen,\r\n  onClose,\r\n  onSuccess,\r\n}) => {\r\n  const { createCategory, updateCategory, checkNameUnique } = useCategoryActions();\r\n  \r\n  const [formData, setFormData] = useState<CreateCategoryForm>({\r\n    name: '',\r\n    color: '#3B82F6',\r\n    icon: undefined,\r\n    description: '',\r\n    weeklyGoal: 0,\r\n  });\r\n\r\n  const [errors, setErrors] = useState<Partial<CreateCategoryForm>>({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [nameCheckTimeout, setNameCheckTimeout] = useState<NodeJS.Timeout | null>(null);\r\n  const [isNameUnique, setIsNameUnique] = useState(true);\r\n\r\n  const isEditMode = !!category;\r\n\r\n  // Initialize form data when category changes\r\n  useEffect(() => {\r\n    if (category) {\r\n      setFormData({\r\n        name: category.name,\r\n        color: category.color,\r\n        icon: category.icon,\r\n        description: category.description || '',\r\n        weeklyGoal: category.weeklyGoal,\r\n      });\r\n    } else {\r\n      setFormData({\r\n        name: '',\r\n        color: '#3B82F6',\r\n        icon: undefined,\r\n        description: '',\r\n        weeklyGoal: 0,\r\n      });\r\n    }\r\n    setErrors({});\r\n    setIsNameUnique(true);\r\n  }, [category, isOpen]);\r\n\r\n  // Debounced name uniqueness check\r\n  useEffect(() => {\r\n    if (nameCheckTimeout) {\r\n      clearTimeout(nameCheckTimeout);\r\n    }\r\n\r\n    if (formData.name && formData.name.trim()) {\r\n      const timeout = setTimeout(async () => {\r\n        const unique = await checkNameUnique(\r\n          formData.name.trim(),\r\n          isEditMode ? category?.id : undefined\r\n        );\r\n        setIsNameUnique(unique);\r\n      }, 500);\r\n      setNameCheckTimeout(timeout);\r\n    } else {\r\n      setIsNameUnique(true);\r\n    }\r\n\r\n    return () => {\r\n      if (nameCheckTimeout) {\r\n        clearTimeout(nameCheckTimeout);\r\n      }\r\n    };\r\n  }, [formData.name, checkNameUnique, isEditMode, category?.id]);\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Partial<CreateCategoryForm> = {};\r\n\r\n    // Name validation\r\n    if (!formData.name.trim()) {\r\n      newErrors.name = 'Category name is required';\r\n    } else if (formData.name.trim().length < 2) {\r\n      newErrors.name = 'Category name must be at least 2 characters';\r\n    } else if (formData.name.trim().length > 50) {\r\n      newErrors.name = 'Category name must be less than 50 characters';\r\n    } else if (!isNameUnique) {\r\n      newErrors.name = 'Category name already exists';\r\n    }\r\n\r\n    // Color validation\r\n    const hexColorRegex = /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\r\n    if (!formData.color) {\r\n      newErrors.color = 'Color is required';\r\n    } else if (!hexColorRegex.test(formData.color)) {\r\n      newErrors.color = 'Invalid color format';\r\n    }\r\n\r\n    // Weekly goal validation\r\n    if (formData.weeklyGoal < 0) {\r\n      newErrors.weeklyGoal = 'Weekly goal cannot be negative' as any;\r\n    } else if (formData.weeklyGoal > 10080) { // 7 days * 24 hours * 60 minutes\r\n      newErrors.weeklyGoal = 'Weekly goal cannot exceed 10,080 minutes (7 days)' as any;\r\n    }\r\n\r\n    // Description validation\r\n    if (formData.description && formData.description.length > 200) {\r\n      newErrors.description = 'Description must be less than 200 characters';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      let result: Category | null = null;\r\n\r\n      if (isEditMode && category) {\r\n        result = await updateCategory(category.id, {\r\n          ...formData,\r\n          name: formData.name.trim(),\r\n          description: formData.description?.trim() || undefined,\r\n        });\r\n      } else {\r\n        result = await createCategory({\r\n          ...formData,\r\n          name: formData.name.trim(),\r\n          description: formData.description?.trim() || undefined,\r\n        });\r\n      }\r\n\r\n      if (result) {\r\n        onSuccess?.(result);\r\n        onClose();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving category:', error);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field: keyof CreateCategoryForm, value: any) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    \r\n    // Clear error for this field\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: undefined }));\r\n    }\r\n  };\r\n\r\n  const formatMinutesToHours = (minutes: number): string => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    if (hours === 0) return `${mins}m`;\r\n    if (mins === 0) return `${hours}h`;\r\n    return `${hours}h ${mins}m`;\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n            {isEditMode ? 'Edit Category' : 'Create New Category'}\r\n          </h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 transition-colors\"\r\n          >\r\n            <X className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Form */}\r\n        <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\r\n          {/* Name Field */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Category Name *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.name}\r\n              onChange={(e) => handleInputChange('name', e.target.value)}\r\n              className={`\r\n                w-full px-3 py-2 border rounded-md\r\n                ${errors.name || !isNameUnique\r\n                  ? 'border-red-300 dark:border-red-600'\r\n                  : 'border-gray-300 dark:border-gray-600'\r\n                }\r\n                bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\r\n                focus:ring-2 focus:ring-blue-500 focus:border-transparent\r\n              `}\r\n              placeholder=\"e.g., Work Projects, Personal Development\"\r\n              maxLength={50}\r\n            />\r\n            {errors.name && (\r\n              <p className=\"mt-1 text-sm text-red-600 dark:text-red-400 flex items-center\">\r\n                <AlertCircle className=\"w-4 h-4 mr-1\" />\r\n                {errors.name}\r\n              </p>\r\n            )}\r\n            {!errors.name && !isNameUnique && (\r\n              <p className=\"mt-1 text-sm text-red-600 dark:text-red-400 flex items-center\">\r\n                <AlertCircle className=\"w-4 h-4 mr-1\" />\r\n                This category name already exists\r\n              </p>\r\n            )}\r\n            <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\r\n              {formData.name.length}/50 characters\r\n            </p>\r\n          </div>\r\n\r\n          {/* Color Picker */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Category Color *\r\n            </label>\r\n            <ColorPicker\r\n              selectedColor={formData.color}\r\n              onColorChange={(color) => handleInputChange('color', color)}\r\n            />\r\n            {errors.color && (\r\n              <p className=\"mt-1 text-sm text-red-600 dark:text-red-400 flex items-center\">\r\n                <AlertCircle className=\"w-4 h-4 mr-1\" />\r\n                {errors.color}\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Icon Picker */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Category Icon (Optional)\r\n            </label>\r\n            <IconPicker\r\n              selectedIcon={formData.icon}\r\n              onIconChange={(icon) => handleInputChange('icon', icon)}\r\n            />\r\n          </div>\r\n\r\n          {/* Description */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Description (Optional)\r\n            </label>\r\n            <textarea\r\n              value={formData.description}\r\n              onChange={(e) => handleInputChange('description', e.target.value)}\r\n              rows={3}\r\n              className={`\r\n                w-full px-3 py-2 border rounded-md resize-none\r\n                ${errors.description\r\n                  ? 'border-red-300 dark:border-red-600'\r\n                  : 'border-gray-300 dark:border-gray-600'\r\n                }\r\n                bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\r\n                focus:ring-2 focus:ring-blue-500 focus:border-transparent\r\n              `}\r\n              placeholder=\"Brief description of this category...\"\r\n              maxLength={200}\r\n            />\r\n            {errors.description && (\r\n              <p className=\"mt-1 text-sm text-red-600 dark:text-red-400 flex items-center\">\r\n                <AlertCircle className=\"w-4 h-4 mr-1\" />\r\n                {errors.description}\r\n              </p>\r\n            )}\r\n            <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\r\n              {(formData.description || '').length}/200 characters\r\n            </p>\r\n          </div>\r\n\r\n          {/* Weekly Goal */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Weekly Time Goal (Optional)\r\n            </label>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <input\r\n                type=\"number\"\r\n                min=\"0\"\r\n                max=\"10080\"\r\n                value={formData.weeklyGoal}\r\n                onChange={(e) => handleInputChange('weeklyGoal', parseInt(e.target.value) || 0)}\r\n                className={`\r\n                  w-32 px-3 py-2 border rounded-md\r\n                  ${errors.weeklyGoal\r\n                    ? 'border-red-300 dark:border-red-600'\r\n                    : 'border-gray-300 dark:border-gray-600'\r\n                  }\r\n                  bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100\r\n                  focus:ring-2 focus:ring-blue-500 focus:border-transparent\r\n                `}\r\n              />\r\n              <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                minutes per week\r\n              </span>\r\n              {formData.weeklyGoal > 0 && (\r\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                  ({formatMinutesToHours(formData.weeklyGoal)})\r\n                </span>\r\n              )}\r\n            </div>\r\n            {errors.weeklyGoal && (\r\n              <p className=\"mt-1 text-sm text-red-600 dark:text-red-400 flex items-center\">\r\n                <AlertCircle className=\"w-4 h-4 mr-1\" />\r\n                {errors.weeklyGoal}\r\n              </p>\r\n            )}\r\n            <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\r\n              Set a weekly time goal to track your progress in this category\r\n            </p>\r\n          </div>\r\n\r\n          {/* Form Actions */}\r\n          <div className=\"flex items-center justify-end space-x-3 pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-md transition-colors\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting || !isNameUnique || Object.keys(errors).length > 0}\r\n              className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 text-white rounded-md transition-colors flex items-center space-x-2 disabled:cursor-not-allowed\"\r\n            >\r\n              <Save className=\"w-4 h-4\" />\r\n              <span>{isSubmitting ? 'Saving...' : (isEditMode ? 'Update' : 'Create')}</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Plus, Edit, Trash2, AlertTriangle, Folder, FolderOpen } from 'lucide-react';\r\nimport { Category } from '../../../../shared/types';\r\nimport { useCategoriesData, useCategoryActions } from '../../stores/categoryStore';\r\nimport { CategoryForm } from './CategoryForm';\r\n\r\ninterface CategoryListProps {\r\n  showTaskCounts?: boolean;\r\n  showWeeklyProgress?: boolean;\r\n  onCategorySelect?: (category: Category) => void;\r\n  selectedCategoryId?: number;\r\n  className?: string;\r\n}\r\n\r\ninterface DeleteConfirmationProps {\r\n  category: Category;\r\n  taskCount: number;\r\n  availableCategories: Category[];\r\n  onConfirm: (reassignToCategoryId?: number) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst DeleteConfirmation: React.FC<DeleteConfirmationProps> = ({\r\n  category,\r\n  taskCount,\r\n  availableCategories,\r\n  onConfirm,\r\n  onCancel,\r\n}) => {\r\n  const [reassignToCategoryId, setReassignToCategoryId] = useState<number | undefined>();\r\n\r\n  const handleConfirm = () => {\r\n    onConfirm(reassignToCategoryId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-md\">\r\n        <div className=\"p-6\">\r\n          <div className=\"flex items-center space-x-3 mb-4\">\r\n            <AlertTriangle className=\"w-6 h-6 text-red-500\" />\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-gray-100\">\r\n              Delete Category\r\n            </h3>\r\n          </div>\r\n\r\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\r\n            Are you sure you want to delete the category \"{category.name}\"?\r\n          </p>\r\n\r\n          {taskCount > 0 && (\r\n            <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-md p-4 mb-4\">\r\n              <p className=\"text-yellow-800 dark:text-yellow-200 text-sm mb-3\">\r\n                This category has {taskCount} task{taskCount !== 1 ? 's' : ''}. \r\n                You must reassign them to another category before deletion.\r\n              </p>\r\n              \r\n              <label className=\"block text-sm font-medium text-yellow-800 dark:text-yellow-200 mb-2\">\r\n                Reassign tasks to:\r\n              </label>\r\n              <select\r\n                value={reassignToCategoryId || ''}\r\n                onChange={(e) => setReassignToCategoryId(e.target.value ? parseInt(e.target.value) : undefined)}\r\n                className=\"w-full px-3 py-2 border border-yellow-300 dark:border-yellow-700 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:ring-2 focus:ring-yellow-500 focus:border-transparent\"\r\n              >\r\n                <option value=\"\">Select a category...</option>\r\n                {availableCategories\r\n                  .filter(cat => cat.id !== category.id)\r\n                  .map(cat => (\r\n                    <option key={cat.id} value={cat.id}>\r\n                      {cat.name}\r\n                    </option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"flex items-center justify-end space-x-3\">\r\n            <button\r\n              onClick={onCancel}\r\n              className=\"px-4 py-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-md transition-colors\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              onClick={handleConfirm}\r\n              disabled={taskCount > 0 && !reassignToCategoryId}\r\n              className=\"px-4 py-2 bg-red-600 hover:bg-red-700 disabled:bg-gray-400 text-white rounded-md transition-colors disabled:cursor-not-allowed\"\r\n            >\r\n              Delete Category\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const CategoryList: React.FC<CategoryListProps> = ({\r\n  showTaskCounts = false,\r\n  showWeeklyProgress = false,\r\n  onCategorySelect,\r\n  selectedCategoryId,\r\n  className = '',\r\n}) => {\r\n  const { \r\n    categories, \r\n    categoriesWithCounts, \r\n    categoriesWithProgress, \r\n    isLoading, \r\n    error \r\n  } = useCategoriesData();\r\n  \r\n  const { \r\n    fetchCategories, \r\n    fetchCategoriesWithCounts, \r\n    fetchCategoriesWithProgress, \r\n    deleteCategory \r\n  } = useCategoryActions();\r\n\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingCategory, setEditingCategory] = useState<Category | undefined>();\r\n  const [deletingCategory, setDeletingCategory] = useState<Category | undefined>();\r\n\r\n  // Determine which data to use based on props\r\n  const displayCategories = showWeeklyProgress \r\n    ? categoriesWithProgress \r\n    : showTaskCounts \r\n    ? categoriesWithCounts \r\n    : categories;\r\n\r\n  // Load data on mount\r\n  useEffect(() => {\r\n    if (showWeeklyProgress) {\r\n      fetchCategoriesWithProgress();\r\n    } else if (showTaskCounts) {\r\n      fetchCategoriesWithCounts();\r\n    } else {\r\n      fetchCategories();\r\n    }\r\n  }, [showWeeklyProgress, showTaskCounts, fetchCategories, fetchCategoriesWithCounts, fetchCategoriesWithProgress]);\r\n\r\n  const handleCreateCategory = () => {\r\n    setEditingCategory(undefined);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleEditCategory = (category: Category) => {\r\n    setEditingCategory(category);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleDeleteCategory = (category: Category) => {\r\n    setDeletingCategory(category);\r\n  };\r\n\r\n  const handleConfirmDelete = async (reassignToCategoryId?: number) => {\r\n    if (!deletingCategory) return;\r\n\r\n    const success = await deleteCategory(deletingCategory.id, reassignToCategoryId);\r\n    if (success) {\r\n      setDeletingCategory(undefined);\r\n      // Refresh data\r\n      if (showWeeklyProgress) {\r\n        fetchCategoriesWithProgress();\r\n      } else if (showTaskCounts) {\r\n        fetchCategoriesWithCounts();\r\n      } else {\r\n        fetchCategories();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFormSuccess = () => {\r\n    // Refresh data after successful create/update\r\n    if (showWeeklyProgress) {\r\n      fetchCategoriesWithProgress();\r\n    } else if (showTaskCounts) {\r\n      fetchCategoriesWithCounts();\r\n    } else {\r\n      fetchCategories();\r\n    }\r\n  };\r\n\r\n  const getIconComponent = (iconName?: string) => {\r\n    // This is a simplified version - in a real app you'd have a proper icon mapping\r\n    return iconName ? FolderOpen : Folder;\r\n  };\r\n\r\n  const formatMinutesToHours = (minutes: number): string => {\r\n    const hours = Math.floor(minutes / 60);\r\n    const mins = minutes % 60;\r\n    if (hours === 0) return `${mins}m`;\r\n    if (mins === 0) return `${hours}h`;\r\n    return `${hours}h ${mins}m`;\r\n  };\r\n\r\n  const getProgressPercentage = (progress: number, goal: number): number => {\r\n    if (goal === 0) return 0;\r\n    return Math.min((progress / goal) * 100, 100);\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div className={`p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-md ${className}`}>\r\n        <p className=\"text-red-800 dark:text-red-200\">Error loading categories: {error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-xl font-semibold text-gray-900 dark:text-gray-100\">\r\n          Categories\r\n        </h2>\r\n        <button\r\n          onClick={handleCreateCategory}\r\n          className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-md transition-colors\"\r\n        >\r\n          <Plus className=\"w-4 h-4\" />\r\n          <span>Add Category</span>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Loading State */}\r\n      {isLoading && (\r\n        <div className=\"space-y-3\">\r\n          {[...Array(3)].map((_, i) => (\r\n            <div key={i} className=\"animate-pulse\">\r\n              <div className=\"h-16 bg-gray-200 dark:bg-gray-700 rounded-md\"></div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Category List */}\r\n      {!isLoading && (\r\n        <div className=\"space-y-3\">\r\n          {displayCategories.length === 0 ? (\r\n            <div className=\"text-center py-12 text-gray-500 dark:text-gray-400\">\r\n              <Folder className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\r\n              <p className=\"text-lg mb-2\">No categories yet</p>\r\n              <p className=\"text-sm\">Create your first category to start organizing your tasks</p>\r\n            </div>\r\n          ) : (\r\n            displayCategories.map((category) => {\r\n              const IconComponent = getIconComponent(category.icon);\r\n              const isSelected = selectedCategoryId === category.id;\r\n              const taskCount = 'taskCount' in category ? category.taskCount : 0;\r\n              const weeklyProgress = 'weeklyProgress' in category ? category.weeklyProgress : 0;\r\n\r\n              return (\r\n                <div\r\n                  key={category.id}\r\n                  className={`\r\n                    p-4 border rounded-lg transition-all duration-200 cursor-pointer\r\n                    ${isSelected\r\n                      ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20'\r\n                      : 'border-gray-200 dark:border-gray-700 hover:border-gray-300 dark:hover:border-gray-600 bg-white dark:bg-gray-800'\r\n                    }\r\n                  `}\r\n                  onClick={() => onCategorySelect?.(category)}\r\n                >\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center space-x-3 flex-1\">\r\n                      {/* Color indicator and icon */}\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <div\r\n                          className=\"w-4 h-4 rounded-full border border-gray-300 dark:border-gray-600\"\r\n                          style={{ backgroundColor: category.color }}\r\n                        />\r\n                        <IconComponent \r\n                          className=\"w-5 h-5 text-gray-600 dark:text-gray-400\" \r\n                        />\r\n                      </div>\r\n\r\n                      {/* Category info */}\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <h3 className=\"font-medium text-gray-900 dark:text-gray-100 truncate\">\r\n                            {category.name}\r\n                          </h3>\r\n                          {showTaskCounts && (\r\n                            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                              ({String(taskCount)} task{taskCount !== 1 ? 's' : ''})\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        \r\n                        {category.description && (\r\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400 truncate\">\r\n                            {category.description}\r\n                          </p>\r\n                        )}\r\n\r\n                        {/* Weekly progress */}\r\n                        {showWeeklyProgress && category.weeklyGoal > 0 && (\r\n                          <div className=\"mt-2\">\r\n                            <div className=\"flex items-center justify-between text-xs text-gray-600 dark:text-gray-400 mb-1\">\r\n                              <span>Weekly Progress</span>\r\n                              <span>\r\n                                {formatMinutesToHours(weeklyProgress as number)} / {formatMinutesToHours(category.weeklyGoal)}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\r\n                              <div\r\n                                className=\"h-2 rounded-full transition-all duration-300\"\r\n                                style={{\r\n                                  backgroundColor: category.color,\r\n                                  width: `${getProgressPercentage(weeklyProgress as number, category.weeklyGoal)}%`,\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Actions */}\r\n                    <div className=\"flex items-center space-x-2 ml-4\">\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleEditCategory(category);\r\n                        }}\r\n                        className=\"p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 transition-colors\"\r\n                        title=\"Edit category\"\r\n                      >\r\n                        <Edit className=\"w-4 h-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleDeleteCategory(category);\r\n                        }}\r\n                        className=\"p-1 text-gray-400 hover:text-red-600 dark:hover:text-red-400 transition-colors\"\r\n                        title=\"Delete category\"\r\n                      >\r\n                        <Trash2 className=\"w-4 h-4\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Category Form Modal */}\r\n      <CategoryForm\r\n        category={editingCategory}\r\n        isOpen={showForm}\r\n        onClose={() => setShowForm(false)}\r\n        onSuccess={handleFormSuccess}\r\n      />\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      {deletingCategory && (\r\n        <DeleteConfirmation\r\n          category={deletingCategory}\r\n          taskCount={showTaskCounts ? \r\n            (categoriesWithCounts.find(c => c.id === deletingCategory.id)?.taskCount || 0) : \r\n            0\r\n          }\r\n          availableCategories={categories}\r\n          onConfirm={handleConfirmDelete}\r\n          onCancel={() => setDeletingCategory(undefined)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { CategoryList } from '../components/Category';\r\n\r\nexport const Categories: React.FC = () => {\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <CategoryList \r\n          showTaskCounts={true}\r\n          showWeeklyProgress={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};"],"names":["COLOR_PALETTE","ColorPicker","selectedColor","onColorChange","className","customColor","setCustomColor","useState","showCustomInput","setShowCustomInput","isValidHexColor","color","test","jsxs","children","jsx","map","type","style","backgroundColor","onClick","handlePresetColorClick","title","Check","value","onChange","e","target","placeholder","ICON_CATEGORIES","name","icon","Briefcase","Code","TrendingUp","DollarSign","Target","Award","Trophy","Medal","BookOpen","Zap","Heart","Home","User","Users","Smile","Coffee","Dumbbell","Car","Plane","ShoppingBag","Palette","Camera","Music","Gamepad2","Flower","Leaf","Organization","Folder","FolderOpen","Calendar","Clock","CheckCircle","Star","Bookmark","Tag","Flag","Archive","Technology","Monitor","Laptop","Smartphone","Tablet","Headphones","Wifi","Cloud","Database","Server","Cpu","IconPicker","selectedIcon","onIconChange","activeCategory","setActiveCategory","searchTerm","setSearchTerm","allIcons","Object","values","flat","filteredIcons","filter","toLowerCase","includes","Search","keys","category","React","createElement","iconName","iconData","find","getIconComponent","X","IconComponent","length","CategoryForm","isOpen","onClose","onSuccess","createCategory","updateCategory","checkNameUnique","useCategoryActions","formData","setFormData","description","weeklyGoal","errors","setErrors","isSubmitting","setIsSubmitting","nameCheckTimeout","setNameCheckTimeout","isNameUnique","setIsNameUnique","isEditMode","useEffect","clearTimeout","trim","timeout","setTimeout","async","unique","id","handleInputChange","field","prev","onSubmit","preventDefault","newErrors","validateForm","result","error","maxLength","AlertCircle","rows","min","max","parseInt","minutes","hours","Math","floor","mins","formatMinutesToHours","disabled","Save","DeleteConfirmation","taskCount","availableCategories","onConfirm","onCancel","reassignToCategoryId","setReassignToCategoryId","AlertTriangle","cat","CategoryList","showTaskCounts","showWeeklyProgress","onCategorySelect","selectedCategoryId","categories","categoriesWithCounts","categoriesWithProgress","isLoading","useCategoriesData","fetchCategories","fetchCategoriesWithCounts","fetchCategoriesWithProgress","deleteCategory","showForm","setShowForm","editingCategory","setEditingCategory","deletingCategory","setDeletingCategory","displayCategories","Plus","Array","_","i","isSelected","weeklyProgress","String","width","progress","goal","stopPropagation","handleEditCategory","Edit","handleDeleteCategory","Trash2","c","Categories"],"mappings":"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"}